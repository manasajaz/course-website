%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1502.i107.001.P.m007.c20.sport equipment icons 1_000.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: ASRock
%%CreationDate: 8/13/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Blank_Template</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-08-13T21:53:51+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-08-13T21:53:51+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-08-13T21:53:51+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9AomYraqquSQvAxVeBhVcBihcBhVcBiq4DCq4DFWwMKt0xQu44q6mKt0wq6m&#xA;KupirqYq6mKupirVMCupirVMVWkYpaIwKtIxVaRgVaRiq0jAq0jFK0jAqxlxVSdMilUVckhUAxVc&#xA;BhVeBhQuAxVcBhVcBiq4DCq4DFDdMVbphVumKoKAav8ApW49cxHTfTT6sFBEnPk3LkSfCn+dcmeH&#xA;hHe48PF8Q3Xh0K77R2Qch1MVdTFUO9vObtJBIQgVgRRdqlTT6aZiSwzOUS4tqPd3x2+xuE48BFb/&#xA;ANqIpmW0upirWKupirVMVapgVojFVpGKVpGBVpGKrSMCrSMVWEYErSMCrGXFVwGKrwMKrwMKFwGK&#xA;rwMKrgMVXAYULgMVbphVumKt0xV1MVbpirqYqp3NxFbQtNKSEWlSBXqaZKMbNMMmQQFnklsnmjR4&#xA;yA8jAnp8BP6q5YMEnEPaOIcz9iZxyxyQrMp/duocEgjYivQ5TLbm5sJcQBHVq3uYLhC8Lh1BoSPH&#xA;6cpwaiGUXA2GzJjlA1IUqUy5g6mKtUxV1MVapirqYqtIwKtIxVaRgStIxVaRgVYRiqwjAlaRgVcB&#xA;hVeBhQuAxVeBhVcBiq8DChcBhVumKt0xVumKupirewwqxf8AMjVb+w8n38+lXYtdRjktIknUK7Rf&#xA;WLqKIko1Rujnrk8cd92BkN6O7HLqDVore3d/Mv1iaMvF9bYTwM7JQOwRFYKDtsDTMjT5oTHpFul7&#xA;U0ufDkHFk4b3G55fAFBeSNU8wzQ+dtK1fVn1iPTJLb6ncyRiM8LiL1aU3anTqf14KAkKFObnlenl&#xA;vfpYbqN/qcvmuKxhkU2lvG8l6KDYMD6S1p1PIHY9t+u9mnnPilGfea/q/jZ1XaOnwDTwyYwd4xB5&#xA;7T/i+dEjyPk9o1W+uAscKK8SxhaSAkcqqPDOK7a1mTj4ADERPPv2e37Pwx4BI0bHJA2F5PbzI0ZZ&#xA;1Uk+kCaE0p0GanR6rJimCLIH8Pwc7NijOJv5skm1aygg9WZiKCsiIrSMppWjBA1Ppzu8J8QA9e7u&#xA;ed1Exi3lde4qOi6zBqVupHITgH1F4niCpoaOKofobLsmPhLjaXVDLHz/AB15famVMrctqmKupgVK&#xA;9fN0tmjWZlF4JUFusQryY9Q4PwcONa8tvpplGe+H03duXouHjPHXBW9/o63fc1oL3b20310ym8Ez&#xA;iZZQFC/yBAtU48OJ+EneuOAmjxXdp1oiJDgrhoVX23153zTIjL3DWkYFWkYpWEYFWkYFWEYqsIwJ&#xA;XAYoXgYVXgYVXAYqvAwoXAYVbxVumKt0xVumFW6Yqx3zzfahZaRHNZFQ5mRWDbdKstDQ/tKMv08Q&#xA;Zbur7VyzhjBj/OCRfmHb6d/hDVLmAKbxrnTku3UEVYX0FaV7E5jabWQzSMYm+A0550fhesj1TCYX&#xA;WowG3rNq9uxFzPwP1PlQcgaDp41r3r1OS0RMgf4t/cvbXDjnC/3fpHMcd/q9zFPKcgk1r8yZA/qB&#xA;5LBhJTjyrag8qdq5lV6ouJqJXgkbv0sHsVdNXvoXFJ0u55ZR8VTHKSYmNWIoU4gUUdPbBOJOeFdL&#xA;+Vfrro4s5wHZ+Sz9XABy+oEHuvYCf8XXlu9W/NGXzdB5et7vy7DFILSKW51BpuPFYYow3wgspLda&#xA;U8Mwc+ixZ6GS9js7vDnljFx7ngvkb8yNV8ulLSJ4oLIPJMz+mZH5stNqlvADpjrez+OXiw/vRQHc&#xA;5Gg1EBLgy/3W9vRdG806lYanLfRShTeOGu24A8lZ+TUBG3XtnO49RPHMnqTu9zqNDizYhGrER6fl&#xA;sy7UNVt0OkaxYTzNYSOkFroUIkN1fTRNIxHFWVE9EfH/ACt+2acadPgzDLHiHV4DPozppeGf4Uzm&#xA;84+abMvNf+WG+pwkfWFsryK7u4lK8uTW4SMNQU+GORmPYHLOAd7VZZPp2oWOpWEGoWEy3FndIssE&#xA;6GqsjCoIysik2iKYpapgVqmKuxVaRiq0jAq0jFKwjAqwjAqwjAq4DCq8DCq8DFV4GFC4DCreKrqY&#xA;q3TCrdMVdihjnmHTU1DXdPRNQuLCeGGdVktm4ktK0ThWqCCOMDbH2yOTCZx2JjR6NmDWxxZOExjL&#xA;iH8X6PN3nC70230qO1u29aUNG4TqxVG+Nz815DMnTwN7Op7VzYxCpd4NfH8BA6hY2nm3QdT0m0vR&#xA;aPdzx3FvdCMSUEM0cqn0yU5fFFQivfNH2bnjDPlxyFT4ya8iB+Pi7vNWTFDJE8UDHn5pJrFtraTr&#xA;Y3X5i6NY3auSYJNOs1l5Pufgkua1Y79M3caHIOFkjx/Vv73aR5avfLdx5gg1DUv0zq3mARTvcJbp&#xA;aoogidQvpq8nxEJtTrlkd6PQOv1magcdbkfr/UwjUNCvpfM1nfwSgkq8MkAX4pFkrwWoFTRuNK+/&#xA;jlunxGBkSbuRP4+DrNfroZscMUIVwwiP87qfiSXo/n3yanniKHR4dRm0q40zeeb6s7pIkyhTGGLw&#xA;gqSgPWhzBx6gcRFcnqp6WUccZEij5vM5Pyr8l+VNRWXVfO9tzQtFLafVObjkpWjrHNKyDf8AaWmS&#xA;1MZZoGI282eizjBlEyOIb7e8fFmum+SNCuLX9LWHmCLU7S3pLILWISkhTXiQkrUJp3GaePY5Ehcv&#xA;s/a77P7UAY5Hw+nSX/HU+52q+e9NkiVLOGTRZzo4lipGkvro9yFjBjPMxcTselT0zbkRxwPQB5mO&#xA;U5iJbky7+aDs9N8x3vmy9vbm4gjjheF2tzHLx5+iAremXX4gBUVY0r45gacTynjmDGPSP3H+3q7T&#xA;Jnx48Xh4x6z9Uv0A/q6d6a/loVfRtQkt/wDjmyatqD6aR9kwm4bkybkcGm9QrTambCfN1kWW0yCW&#xA;qYpapirWBUFqmq2Ol2wur6T0bbmqPMQSiFtlLkA8VrtyO2EC1tVtbiO6toriMOscyh0EiNG9GFRy&#xA;RwGU+xGAhV5GBVhGBKwjFVpGBWwMVXgYVXgYULwMKoPVNWtNOgLyuplpWOCvxvvT4VFWP3ZVlyiA&#xA;3cjT6aWU0Bt39Aire4t7iMS28qTRnYOjBhUe4yyMgRY3aZ45RNSFFWyTFumKt0xQp3NxFbQPNKaI&#xA;nWnXc0A+k4QLLGchEEl5zrXmC1k1AlbuJNQjuErCHX1EcxmSNKfCSfTSo2qQK5m44iqdBqpzJ8Qd&#xA;9/JkmkyWGt2Fzd30cQuYywkYs6oFpVC3xCg7fRlMwYmhyczAYZ4GcgOL7GL+cdR03SbDSdMivk06&#xA;51WfhfalaF5HgtFi5zMnEyFZJNlRgveo6ZR+RhPN4nDcxyb4ayOnwESkBHa63517zuqXS/lRYrBo&#xA;KaHbz20ixM88ltHLUSpyR5HlrKzcXBJO4zFzdoRx5OA3bv8ASdkZM+AZoVwkWO8pd5V1fTdA81av&#xA;5LsNY9LRXtXuNMN27A2F1FKIJbWN5/txnkHT4tt6eObDNhnKG20i6XTa/AJkkgxhKpXtv3WaZH5x&#xA;1S10HyLqfmDSDa3erWEYRb6OOKSkxdUYvwoBTn8XfI4xPaMiWR8CcjkxiPPpRr4vLPzW0z829N09&#xA;dR1jzKLrRrllg4wxC1Pxguiz28ZVSdj+09PHLcfDew3ZyvveUOl2YmY3SSJQ1AjAqPnyOXNaGttW&#xA;uNMuFubW7ktLlPsSwu0cg+RQhsatX01onk7zmdLj/wCVgeYIHtoG9a04bXdvMikiSO9BiZXUV7OC&#xA;K9sw8mWEd+Tk4sM5mgLPkmFx5cur30kufNN/rWi38n1ea3tEs4eQC7rNc28aSmqrxbiykjrjjnGQ&#xA;uNNOp4sMhGUZeoofzhr8uk2n6Ns0+o2tnxS2jtOIRUSnphSKdPDtTMjSiE9wRLvdB2xrMuL0kGPd&#xA;X2Ml/L/Wda1jy/HfapEql2ItpgODTRjb1GTovLt4+AynPGIlUXZ9lZ82XCJZRv08x30ySmUuxapi&#xA;lrFUJqGmWGowrBfQJcwK6yejIOSFl+zyU/C1DvQ99+oxBpFL7W1gtLaK1gXhBCoSJCS1FUUAqxJ2&#xA;wFKoRiq0jAqwjAlTIwKuAwqvAwqvAxQuGFVK7tIbu2kt5hWOQUbp2Ne4ORnASFFsxZDCQkOYWXV/&#xA;9Xura39CST6wxX1EWqpQVqxy2MbBLiZM3DKMaJ4kYMi3tgYobxV5n+fPnS58u+Wba1sXMeoarI8a&#xA;P/LDGn7xwf5gzpx+/tl2GNlryixT5T1C6uY5YbpJXW5jkEiTBjzDruGDdag5lhqIt7Z/zj7+Z13q&#xA;OvyeWtdYXL6ikrW8zBaO61lMbrTjTjy407beGVZhtfc14dPGJND0kcnpHmnRbnVLW3vxo1omr6Pd&#xA;mW30qRo/9NtQpikh7UZkNUJBHJRlB1EITEePc+e6MOmOWEuPEBG/eCByQGpebfygeaLUdQmbTdQg&#xA;McUumXEU8U6NGtFR7cKxYqFA+Go2zGyaCM58ZFl3Wn7Ty4cPhQNQ93L3IfTtON5q+o+etR0q30jT&#xA;5IFsdJsdShRJZ1aYTz3c8VGYSOyARg/FxFaeOVk1EcY9UqH42dUOzpZrjixxlKRuqG+/M/rKv541&#xA;Lynr3lW48uRvPo1jqLxy3OoW9lWE8ZFcmgMbHkyCppXMAdpwuzxEd7uo9gZYRoCAP80Ec0T+Yflu&#xA;+80/lnp1hodwmryWj27yzhliMwghaN2+JqK3JgxUnbMzBljI8Q5F1+fDPGeGQoh4Dqn5debbOKT1&#xA;dI1CIUpzEEhU/J1UqcyxMOPSF0v8pPOt/Kno6HeqjjmJrqNreHjSvIySiNKU364nIO9eEvffzG1f&#xA;Tr3W7WP66l1pkK8biOzljkdGBBkBAJAfg605eI8c5jtMHjjxXwPZ9gGPgz4K8Xz+z4IP8sGv4oda&#xA;khLppzRxqpalS5kIWnvw514/0zBlOUMGQxNCh9/6rbO1RCUsYP1Wfu/XSb6xpdtqNr6M4+EMpNOp&#xA;AIJH05q9H2pl0gkYfxCvj0PwdL2h2Vi1nCMn8Jv4dR8U+8pXDxXRtE2gZKhBsFK9KDttl/s7qp+M&#xA;YE2JAn497b2jhiMYIFVt8GW52rpGiMCtHFKEGnquovferIWeNY/S5HgOJJrT6clxbU0jDWQzs8q8&#xA;kScg3LTiq0jAqwjFKwjAq4DFV4GFC4YVXDFWxiq4YVbGKG8VWTzw28LTTNxjTdmoTTenQZXmzRxQ&#xA;M5mohnCBmaHNgXnn8v8Ayd51ng1TVNRvYks0+rRx2zIqAlixJR4ZH5NWlemwyiHa+AYzMS9N1yPP&#xA;3c2ctHkMuGt/gxU/848flfecl/S2qKIUMrlpIECovViXtgKDLdN2vizS4IG5VfKQ+9rzaSWOPFLa&#xA;PvCN8qfkD+X+n6npvmDR9W1SSa1mWe3YzW5UtGeXBwLdTRgCGFRtmZkzEHhI5uPhMckeKJsPQbi1&#xA;u/VmQKXR2l9ROClZS5rEzSHdPTFB9G2c7lw5OKQqwTKxW0r+kmX8PD+jZ3MMkaB93XlXPbrxfp3e&#xA;S/marH89/I7V9RQlgDKOhJubihqPGmdFg/uud7c3VZPr7mcale/WL/UtauIBefo+6Gl6NZOKx/Wa&#xA;jm7Dvvv/AJjNHkncpTIvhPDEeb1GDFwwhiieHjjxzl14egQt/NrDas1jH5lSfzEkXKTSjAPqzAAs&#xA;YeVAvSu/X+Ex4nFXHc+6tvc1kYeAS8KsP87i9Xdxd6E8vXFoup6dLBH9X0fzVFJDeWSEqkd1DUco&#xA;6H4QzbD2Pyw6fJwTjOOwn08ww1+m8XDkxZPVLFyPUxPex/8AN7zN54TS7yTy5cSaPovl6f0GZJWW&#xA;6uXib02kLD/dSseKoT8W7HsBnDXYhnGE/XL5OhjppDFxD6YpVrf5peZPNf5Lm/Eb2t3DepYavcwV&#xA;RJF4Bg6lXXiHLBWWhHyzOEAJNJlYeS2Uv6P81aNJ5cupb2/uPq4ubYwkKbh5AGteHMevGaLUEgNW&#xA;mTnASFSGywySgbiSD5PsfWrK0j02lmiQxQynnFCAqcm2JKqOtc5ftzB+5BGwieXTd2uhzmWQ2bP6&#xA;mNzf3Z/z75xuX6S7mPNMbC/0zRrVLiZ+V5csg48WPGItVzsOyAt9GdR2JpoYcQyn65/YPxu4WoxZ&#xA;M8jEfTH7/wC3ZlcE8VxCs0Lco33VqEV7d86UGw6WcDE0ea/CxaOBWjilacVaOBWjiqwjAqwjAlsD&#xA;Cq8YoXDCq4Yq2MKt4oXYq4YVQGv/APHHuf8AVH/Ehmr7Z/xWfu/SHK0X97FAiJvrNxJPblbPa6My&#xA;p6TjjVwGBHxHxzXDGfEnKcKxf3nFXCdrlR/nHvcniHCBE+v6au/L4LtMVl1olpZJedsXDyVpxd1Y&#xA;Ba9gD9+S7PiRq95SleMmzfIyBFX0r7Uag3h2AHq6e4vONX/MHUHvphp1LaztCV0+NUUFOJU1YfFW&#xA;oU1XIavVSyZBIfwnZ6PR9iYseIRI3r1d3w9yrpPn+4tdV0+xvppbvS9USt0k1JGX1wFDI/26LJVe&#xA;NfsjbDpNVIkxyeqEtj936nG1HZ0TEygBGcOVbcvsTHzjqer6f5osLTy95Qh1TU9Ph/0PU5DzWGKU&#xA;kFSwHKNjQ9a7Hr8WbiBOIDHAVEdNyf0D5l00MEMkfEmbJ7yIgH7SfhFK5/Lev3l3e6XrmvfUW1Cc&#xA;6lpiadSCze7JpIjXDc56qRxHF18adBkJkQkYVRkeKJluL/HvcvCTlhHMDxRgOCQjsRH57+fLuRdv&#xA;oJ0e+9TSfKX1PzAyFZL0zl7erAqZ2d2YuTvsxJ964DPJKVmB4/f6R5pGPBGHCMo8E9OH1nyPX4q3&#xA;lXT4bjW9JsLSRbjTfLKSzXt8P7t7map4oe/FtwfAZXiiOKIB9OOyT5tmqyGOOc5Cp5qEY9eEIzzz&#xA;pun+Y7W/sZndbO8CLI8VFcqhUniWDAE8O4zn9R2iIavx4eoDl06U0Y9MTh8M7Wm1pa+XbfyaNH0v&#xA;TY/0fbqsDaWVZuSyHi1GQM3Nqk8+tdznU9mdow1YsbSHMd37HSdoYZ6ePK/0/tSzyt+XX5e6Ncxa&#xA;1babFa6zclzbiVpXEDDivBUc0HBox8TDlyrQ70zK1OshjmITlXFy82rSwnlx8YG/3IryhrOq3Vpq&#xA;0lzbm5WEmQ24EdZJHZqlKt9n4Nwd/AZl6nDAgRPI97puzNXlInLnW+3ee78e5dr/AJj8padqVlYa&#xA;lb3CajqEXrJZwpy4IDxq5Q8F3Hjmnydh4MsiSPlsHoB2nPHj4j+soDV/zN8p6RpjnULK7FnZSRyR&#xA;+kqytRXV1Y1ZSPi69du+bHH2cMeMQj9Iddp+2xlzEURI38qZ3pmoWupabaajaMWtb2GO4t2IKkxy&#xA;qHQkHps2RIpzkScVawK0cVWnFLRwKtxVo4FWEYpcMULxhVcMVbGKrhhVsYobwq3iqD1mISaZcIZE&#xA;iBWpkkNFABB3O+Yev00s+GWOP1S/W24c0cUhOXIJJKscll9emuLKDT7l1kmuTNIqsKkkVkoq99ts&#xA;1OTsnUTJEhjHFIGVSnZ335/ocvFrsRiJRMjt6dorbEafrg1H9G6jYXKSWr2Zayn+semWAVC4UmlA&#xA;vjmRh7NyxzSnIRiDDhFGXlXPyHRlHWwHDVnhmJdHjF7YXen3s1peRtDPGWRkYGp2rWvceBzVzgYm&#xA;jze6xZY5IiUTYKV6VpN9rGrw2NihlmmkCVAPwCvxMSK0UdScsx4zOVBx8+aOOJlI7B7/AKpr0miG&#xA;HTpFjkRIECsVb41C8TUcjSpU7Z1+HD6Ru+V6/XmGQ7bHf5oHy1caN5jt7nTH063+oQ1kcJyBEjsR&#xA;UGgIPUVB26Y6vTRkKnujsXtKUZHwhwV3ef3rL/yR5Y+s29tNc38lu5p9WW4rBQHowpypv2Oc/mOD&#xA;HOMCZHi7js9fDtDPKJlwwBHXh3TnTtMmsbtbLT4Fg8vqaBI+BZnMdDU1JMfiT8fL/JzdQx4vDqNf&#xA;j9LzmbNqJ6jimTw/C+X+5+2/JKrrRtRQSAQMyqaBgKgivXODz9l6gWBEl6XHq8Zo2qaVp+spbXRt&#xA;VaG5YxCF2IVQQ9SXBBqtOoG57ZsOw9Fnx8ZMTEmqtr1GowylHiNx3v5ff3I97eYfohdQq18XZZnJ&#xA;VqmtTQgD4SfsimwzP12MHLg4/q4j+PnyceMx+84Porb8ff5pTpi3Wk6drsljC0zG5uVacMgWMoSf&#xA;VcH4mb46tRT0zfa7LIRFD+H5Oj7A0mM5JCUv8pVd+/3nluUm1u9m/wCVmJPc8tLb/Dzhi6pOQDfR&#xA;9kLAg9MqyZCMJJ9Bv3u0wYInOIisor3fe356WMeX/NBW7Rz+jNQCxJaCM0FtJ8Jk4DYAda5nROw+&#xA;HV56MQMx3HM7cP2cVMv/AC//AOUC8t/9sqy/6h0yifMu0jyT7IpaOKtHArRxS0cVWnArRxVYRgVt&#xA;cVXDCrYxVcMKt4oXYqoR3iPctCFcUVSCUcbksDuRT9nMaGqEshhR5D+GXn5eTacREeL9I8kRmU1K&#xA;N/cW1tYXFzdf7zQRPLNtX4EUs34DCEEAjdgfk3ybYeYrC280eaLdL+e/QTaZpkw9S0srNxWGOOE/&#xA;AzMlGd2FSfxsnMg0GEIAChyY5pf5eWd1YT3Xlz0tK1PSf3Gha9aRrby3E0IpLJcen8EsMrjiQytt&#xA;XKMOolMkn6L2c3VaaOKMY/5Srl5XyDMvLesnzb5f0TX7zTrVbeaItficUeG5gdopFRWBNBIjcQT8&#xA;8snggeYs9HDGrz4yOA8MCDxb0vt7ny8ry6T5d+r2F6HBaJoaPMPUVyY35pULvVdzTsBlOTRyhC4A&#xA;D+1t03bWLNm4csjKQ5Wa6dNjf39Sxr84rg2yxfWGSW5khjihAHpo8skkiqPiZuIodyW6Zf4HiY9z&#xA;uJX+Pg4X5rwtXcQeGWMxPfRvuHfXTfkpfkrZT6dol3b2VJrhI4yxIABd5HaSgr/MxpleuzTlgE8I&#xA;uX7d2rQYPD1mWGXaq+Ven5ik1vNU0+2vIbW6uYobq7Yi3hdgGcjqFBO/XPPRgyTEpCJqPPye08SI&#xA;oE82SadrUOmWKSanKltYNVbeRurOWJIoKnx7Z0XZGonDGOOhi/hPnZcHPpTlmRjBlPq8pk/Kr8+Z&#xA;ULw+c0PP4kP6RvytDuNvSIpnUDJDudKYSDMfyn8n/mXoN9fzebdei1i0njVLaOO4nn4SI55EiWOM&#xA;DbbbISyRkPSyESOad65pvmm9nMtuvBlP7g8o/wB2K123G/vnPYtDlzarxM/93H6Y3+ouVq85hg4M&#xA;H1y5n+1B+XNI1ywaQ8lnhLMt/CXiYMdyQ5LNQ/FnSHUYsoIBBrb3eTzul0ep0xEt99/f5/tSPz/r&#xA;+naD+ZVte6jqH6Kgn0N7eC8MMk6+r9cSThxjVz9lT22yqeOU8ZETRt32DJCGQSmOKLH/ADt+b3ky&#xA;90TXrKLzQLl7uxu4Le0FjcR8nmgdYk5tCAN2G5OXxhVbbuu4cnGTx+jfav0vVvIAI8h+WwRQjS7I&#xA;EH/mHTKJ8y5g5J5I6RozuQqKKsx6ADK5zEQSTQDKIJNBakscgb02DBTxYg1oaVp+OCGSMr4TdJlE&#xA;jmuybFo4FWnFLRwKtOKrTgVwxVcMKrhiq4YVbGKG8KuCqGLU+IgAnvQVp+vIiIu+qb2pcMkhDapY&#xA;pqGmXdg7cUu4ZIGYdQJEKE/jhBVhf5T3Gi2emN5cktodO8zacFt9Ws6BHnMK8EuV6eqkkYDch/Ss&#xA;8gPPoxikk115Q0PyTJJdtHqXl29ZJ/Leiyxlp5Hch47eNGqzn1SOPw/D1JynT4ZwJF2L+Xfu5Wq1&#xA;EcgieGpVR7jXLb3JjoOlXWjeQ9M8vX1TrEKNdXcqkKIri6le5dPhqG4mYqabZrtb23HBm4QOLv8A&#xA;d+tqPZZ1GLnR6e/9TGtF0pp/Nq3Wqhn07TpVf0xQc5VAKdOoX7TDvt75l9pe0GHTxgB6uMXt0j3/&#xA;ALHm+yfZ/Lnzylk2jiPXrIfq6/BM/wA6rZrt7S4tmLSWyQ3MKoaFwGkUqp33ZHNMzseWPhcV7Hl8&#xA;eTn5sUpaoRA/gN+QFk38kZ+SU8NxbXdxC/OOaOKQN/rM5IPuDscAxGGKIPPe/junFqBl1eWURURw&#xA;xHuiOEfOreJfmDLrOj+Y7YDzIusSpF9aguraUutu05YNGpqaEBR4bU2GOPSYeEgQAEue3Nz5Zp2D&#xA;fJO/L3mTWtU0pLa/mu5ooQHWS4dmjd2LVKAkj4elc5ztLAMZqJHDf0jp8HtuwsonDeFSA+uvqsnq&#xA;9W/LjzJqM9z+i7pbi7S6Zz9ceV2EQjjqFB3p0p9odRk9BnlL0S4jfWzs43behxxj4keGPDXpob2f&#xA;x070085+ZbfRtGt47LUFt5NUvRavfhnmNtDJ6sskyR/vOThIWVdvtbnpm40eiMLG5Nk8z3k9T579&#xA;7xuq7RxCPHIgRAH6unmkeoeWvITXb29reajaa5bwG5OupdXRuaGJZfVZ2ciSqUqrJTsAMMdUDl8L&#xA;+JzZ6SUdN+ZP933/ALEV5Q8z2nmLyZNbTalBBrplnsLx4VSFLufk0MUnCRCyrcDi2wU1qBTL8emj&#xA;ikTGNWbPv6up1WrjnxCPibyj6fMS+kbjkfm35m86+Y7HUZ9M0gNcyWKmS4mnRWd1TjI9VRYlChQR&#xA;UDcGvXfNLqtdPxDGA5PZdndj4vAE8sieLly67dEz8la5feabe21GSd7aTT2MN1DGB6c7FB8RquxJ&#xA;qSo6bUy7TZJZqldcPPzcbX4IabigAJce4PWO7NMz3TLJU5xsnIryBHJeor4ZDJDiiRdWmJo2pWtp&#xA;FaxelDUR1JVSa8a9h+vKtPpo4Y8Mfp+5nkyGZs81XMhraOBWjilacCtYqtOKuGKrsVbGKrhhVsYo&#xA;bGFW8VbxVvFUg82eV/Kmr2wn1zTUvHgoIXWqTgsaKkciFHHJiKDlSuJycAtljxccgGNaL5C8n213&#xA;JJpFgum6u5Kxaqtw1/KjRUEkQlnaR4n4HcLTbvTMeeaWUcN8Pu8ujnQwRwkTI4x3SBHPkR3j8Ujt&#xA;Sn9e9lk+LqFq9Ax4ALUgAUJp4ZxGvzeJmlL8bbOywQ4YAJdIrNNxUEsxAAG5JOamcSZ0OblRNBEe&#xA;b/KuoXdrZEwPcIlusMscRYurAsf2fipR6VHhnp/Z2nA08MeTnGjz6/seH7Rz54Z5ZcH8UTHkDtd8&#xA;iOvelHke68q/l9Y3MWs6jDppkYCHT5JDNcirM7M0S+pLuz9xmxznioRcPszFkiZTybGVfYl1l+UP&#xA;5UeYb8S6Rd3F7BcB57h4LuL9zyNVVoinqLUnowzEnqcsckY8PpINy7ncxxQMCeLfuTrRfy28rwtF&#xA;YRrdC1FRE7SCoqGf7ZQK9OJD0+yaDfMfU9nY5yM5E25Oh9os+MDFER4Ry2PmefXz7jszPy3pGjaL&#xA;bXcGnzN6fMvK0zqwBVR8Qpx+GnXKtF4Q4o4zdHv9zb2hqsuYiWQDl0SHWrPU9e8twPqNvaafqdrc&#xA;W11pcnIT20sx+D95GRyETiVkbckBq9RmVDPKJPGK3rm42XSYsgAxnjBFm49wvztj1z5+ubnzK3lj&#xA;TvKkK+dvRInaaWD6mkfppxla4SsskYR1PAKGpttlwwxvj29/VqOafB4dnh/m9Pkh/Nfmdfyn8rad&#xA;pVrHFqfmC+kku7m7mQojSvN6s0vBFAIJZkRQwKinXLIjjLSYiI5POfL/AJr13zT55Xy55ngXTNUv&#xA;ZPTM4geGQMRzHqwAbs6dD8I7k981+s7KjM8cTTvez+3ZYYeHIcQ6fj8U+jfKflSx8t6b9TtmMskh&#xA;D3Fw4UM78QOw2X+UEmleuS0+nGKNBw9brZaifEdu4J1l7htYq1irRxV2BVpxStOKtHAq04q4YquG&#xA;KrhhVsYquxQ2MKuxVvFWxiqld2qXVu8DllDUKuhoyspDKy+6sARkZx4hTPFkMJWEjETaTetcXELS&#xA;WsMM9y88EccUQcBSzMocs8jjau3sOpAxabe7F+6ufVGr7RIFcMuDhsyu/p5RHl5LdW0O6aae7h4y&#xA;RuQwRalzypWgA8ffOZ7S7JyGcskdwTdb38qdppdZHhET+xD6Hpt4mqiWW3ZFCtwkkQ8Q3HY9sxey&#xA;NFkjqhKcCI0dyOtNmszxOKoyFvLPzoT8zNN0+51KbzSlzocMqwTW9mDaSI0v2Vkjj5cxuOsh+Wd5&#xA;jA7nnuMG6PJ4XDJ6simNwWLCj/aoa9TlyEesuo2siypqAilQ8kdI6OCOhBDVGBXtmmw/m35R0Wx8&#xA;w6prkV5aXt1aRvY/V0ubmSO6kUN6lzIVdTx+yA7DkR0ykmMtkxgIm+r1vzDdW9nA9vEeEt0weQ9K&#xA;IfhoGFPtFQKZj6fTxiSR1NsdbqDw8PWvsSXy3qFpf+ho19AJHjfnbzkKSBE4lCHkDseJr7bZdqdP&#xA;GW58nF7J7SnD931o/ck8nki90v8AN7UfO11dW2n+Xjp4iS6eRI/TkMUcIUh6KvH0i1T8O4670AI4&#xA;QA7CVkk38Ur85eRdP/MLSYTpPmiy1XW9KZ/UnWaOVPRlkB4P6DMI+K8mrwJJ26dJ+IAeVBowYZiN&#xA;Slxy70q/K/8AJLzTD5wj84+b9QW5nhKzWyiZ7mWZijIjvOHWnpgJxHxhl22wSygx9Lf4ZB35h7xl&#xA;LNo4FaxVrFXHFWsCrcUtHFVpwK0cVaGKrhiq4YVbxVdihsYVU7qf6vbyTlGkEalmRKciB1pUjtkZ&#xA;SoWzxw4pAXVqem6jb6hbC6tuRt2JEUjCnMDbkB1pXxwY8gmLHJnnwSxS4ZfV9yKGTaW8Kpbrujpq&#xA;FnLwB+tohNseRCeonxJyQ1Rhy68lOTxzo+TiavTjJE19Vbe/ptyYl51n1bQX8v6V5dvV046lcPFc&#xA;XVwpuQsUEDSfZfkB9n9kDDxg3KXRsw6bgAhDmdkv1C581mVmsfMEEF3cRBYpW5OqsQeBMTR8fhJ3&#xA;Wnzy6EoThYGzp8kNRh1HDkmAQRYv9lMevNH8x+fPyMtZUSK88w315JJeFRFbG5+q3M0ICgemlQkY&#xA;am3QnrkOMRlvydzDCKJiNzzeIy/ln5yspg02h6nAA4X1Pq0vCpPQMEofvy7jCOEsi078pfOt61V0&#xA;e6jTq8t0v1aML1LFpuG1MiZheEvdtS8u6b+Y3kHTNJ0vzGiJpktv9bvbNRPWe0i48KM0ZA5MHBPX&#xA;Y5QDwnk2VYeLfnF591LWvNV9YQTPFp1hM1sUichJpIHCmVgDQjlGCg3p1HXL8caDTKI4rYx5F/Nf&#xA;W/LWpWhuWN7psE7SyxP8UtXYMWVya7MCaV35N7EWEWKaJaeJkJjaQfUvK11rz7GZ4Re2Flp0F5pj&#xA;Er6SNctLyuODGrsyxqqMFPDfpyzD5BzurDtQgNvYW97Hpko1KDWIbI2zSL/o8Fxdw27WZZ2YyRzw&#xA;y8vh5Lzo/wCyKY+D1iQl3nb8fNzdT+7MDDaoggjr3/btXk9ds7O2srWK1toxHBCoWNB2A/ie+ShA&#xA;RFDkHHy5ZZJGUjZKrk2DRwK1irsVaxVrAq3FWjilacCtHFWhiq4YquGFW8VXYobGFVk0MM8TRTIJ&#xA;In2dGFQR4EHAQCKLKMjE2DRbighi5+kipzYu/EUqx6k07nERA5LKZPMqgwsW8Kt4qwL8yGK+YvJ5&#xA;DIhF3dnnL9gf6HJu2x28cT9EvcyxC8keZ36c1Zb+JJLEtcaa0oiiBlSFhJQqB8JXiBtsNh8h0w6Y&#xA;E4h126cnD7RyRjqpfTHf+IEy+aW/k7YWUv5ZaLfTQGaewm1CaAL9qovbnYDv1298GbFGUwTzDmY9&#xA;TPHjkI8iNwyby/5kvdb0ua506JGkjmkQNOzKhBq6hSoJPEMAemXZMYiaLqtLrJ58ZlAbgnnyQ2q2&#xA;F5qfk9YNQKi2K27sqsxaeIEVScGn2tuS1IO4O2a/tXMcWGcomj+s07DsuMpmInVV89urCvyj/L67&#xA;0Dzf5j8xfWBZ6NOWhtdJhbnzWof1pEUniFIZYxSu56DrHQ66OXBG5cUwPV3uTn05jkIAoHk3Y/k5&#xA;+Vd7d3kKwXbPDJSL97MC6hAWLFl2PMOtD4e+Xx1135fj9bZm7PMIxJ6jfcd/6qKIsv8AnHr8tJZb&#xA;hbnRZIUV6W7i8nb1E4glvtDuf86ZlHNyo83W4xImXFGqOzL7/wAtaLp1jo9vaXNxps9gEsNMvYZF&#xA;MqxMABE/riRZY/gX4XU9BSh3yMbNpy5Ywq+ppT0H8v0sZ7S41PU7jV309mfToZQsdvC7gj1BGtWk&#xA;kozANI7ca/CFwGTaAy3IsmsVaOBWsVdirWKtYFWnFWjilacCtHFWhiq4YquGFWxiq7FDYwqhdRu7&#xA;i1hWSC1e6dpI0KR8ahWcKzfER0B/rQVOSiAetNWbJKAsRMtxy9/4/sRY6DantkW1sYq3hVvFWKee&#xA;vKur63LpF3pN1b215pU8kyi7jaWJ1liMTKyqR2bJRIog8ijcEEcwxrUfKn5uvPA1pqXl6ExqFQmz&#xA;kVqp0419Q/CBtQ5KMoxFC6a54+OXGQDLvrf5pz5DsbjyfoOk+Ub9kvL1fVaW7hPGGtzcTTEMGoy7&#xA;NRNviPyzHy6geJw1z/H9ne5uLSGWIzvl0/V89+5f5YsGgt7APLx9W8neimlTGOG/jX06fI5hdrDi&#xA;1OHcjf8ARf7Pi4PYcDDTZNrs/pr9Fo/U7uTVrctbQTr9VmeJ0eNl5f5QBG9OP0Zr+2ITzQBgJHhk&#xA;RVH5u80+MYZeox9QvmhPL9rexa3GzxSRp8YcsrKKcTStfemajsfS54asSMZRjvexA5H9LfrcuOWI&#xA;gEE7JR5484/orVpdM04VaZ0uNTZ1JPLhGoSMmgH7uNTXN32lnrixx68/ftX3OV2X2d42MTn0FQ+Z&#xA;5/EsWt/OutwRXV+uozmSypFFE4Dw8HXknKLoGqpXkPGma6GqywlEA7B2Gfs/EZcPCN9z3+e70HRj&#xA;pPnDRrPV44VjuXdRqIo0ZLKo9WLY/Ep2pv0986vSarjhf4t4btTsmMMvCR1u++Pmyu3tre2iEMEa&#xA;xRCtEUUArucsJJ5ohARFAUFTAzaxVo4FUp7iGCP1Jm4JVV5Hxdgq9PEnBKQAssoQMjQ5r8LFxxVr&#xA;Aq3FLRxVacCtHFWhiq4Yq2MVXDCrYxQ2MKt4q3ireKt4q4YVbxV4d57l1S185ajc6k80YjAbTp1Y&#xA;rEkQIKmpAAAXlXj+3X3zntYJnKed9Px+N3tey5Yhp41w8P8AFf2/o+D0DQvNVn5m0CKHQNVgu9Rj&#xA;jRb6SNw0iFaqx+IVNWQ0b6R1BzocESIjjG9PD9oXKUhhNDiPySOW2uNAv4re71OGNnYzW1nyLzA1&#xA;/vFiQO/Gq0JpTMPtfR/mYxljuOWBsH8Fxux45dLMiZEsUuY/TyTjX9HvvPHl+wk0LzTJpJikZpr3&#xA;TnZxKQCjI3pSQ0IbqD0O1MydMZiA8Qeut3Ny8JJ4eST+Uvy31nRPN1re33n7UNYe3WR5NIuHk9OV&#xA;XjaMEq88n2C4bodwMyJSscmgTjxcN+ruYV5zg1C38038d2SZ/VZ0Zm5j02+JPi6kcWGcjqokZJCX&#xA;e+k9nzjLBAw5V7uXP7WMapJIHkVW+F6F0BI5AAHtlMQ5GTm9e/Iy31BNDvp5i31GWVRaRs2wZAfU&#xA;IUbCtV3709s3fZgPCT0eT7flEziB9QG/6P0vS82joHHFVkjhEZzUhQSaAk7eAGQnIRBJ6JAs0pQ3&#xA;ltO/CGQSHjyJXcAHpUjavtlWLVY8hqB4tr2/H2M5YpRFkUhdY0a11SBY5xQoysjb7UdWIoCOvGmS&#xA;zYRMUW3TaqWE2Pxsi4IYoIliiHGNBRVqTQfTlgAAoNE5mRs815wsWsCrTilo4qtOBVpxVoYFXYVX&#xA;DFVwwq2MUN4VbxVsYq7FW8Vbwq3irzz8+PLGu+Yvy8urLRUae7hmiuXtUrzmjiqWRQGXkRUMF3rS&#xA;gHKmWYiAd2MhYeafkZ5T8w2Hm221q+0x/L+m2tv9TmScSx/WbhwbfiolcEs8yF2FCoNAAKrluQ2K&#xA;G7VxCO526PR0n1FdG1O4sYo21m71SRL65kdlkSSG+EcETAI/7sQCNUHKhB9yc1+qzSiRGAuR+zbm&#xA;eX47+Tm6WEDK8n0Dn3/j8bc0ZpFvd22vzwvcJb3lxphl1iaOQMnrrMqWszclioXX1l+z9lAtfhWl&#xA;8PTEcRumnODlkRAcN8q6dzDtb0/zPfeZbTSbcenqJlJ+sDkPRCcSZeSkEACpqOv05s4yiIX0eHz4&#xA;c+TOMY2lfPu5bs28yWek37QWOoQJeTQq0ENy7NHcztDEHlIaNeC0rWj7FuwGc3q+CcqIHl3/AI97&#xA;6j2Z4uHHcZHkL2BHOgT7+vD0QUX5X+RjqFkZXmleaDlFCzFRIVFS5KgEfCfs1ygabTxyRgSeKQsD&#xA;vb8na2pMZGgOE8+7yZ9bWttawJb20SQQRjjHFGoVVHgFGwzbxiAKDoZzMjZNlVwsWsVWShzGwjbg&#xA;5FFYitD40yGQSMSImj3piRe6Gs9PW0c+nIxjZQGRqHdehB27ZiaXRDCfSTRHI+XVuy5zMbjdFHM1&#xA;oaxVo4q0cCtHFK04FaxVacVaGBVwwq2MVXDCq4YobxVsYVdireKt4q3irsKsZ/Mbz1aeSfKtxrtx&#xA;Abp43jit7QMY/VlkagXnxfjReTEkdvHJQjxGkSNPmvVf+cm/O+oKiXug6JcxROJYlkhuWoymo/4+&#xA;BXpv2OZMcfDyJcXNjhlAEwJVulep/wDORvnS7vmv106wsL6QBZ57QXcJlCii+qn1gxyFQKAspI7H&#xA;AMQbeJq2/wCcjvMttp81mdC0meK4YS3ck63k08zqAod5pLl3LBRQb7DYbbZDJpozFS5NuDUzxS4o&#xA;GijI/wDnLXzql0bmPQ9Gjm9MQhxDc1EamoUf6QKD5fwyfgiq6NJozM69R6qc/wDzlP50uZZHbTdL&#xA;QTf70Rqt2iSUHH4gLj+XY06jY7ZTLRQJ67uXDWziANtuW3Jkflv/AJy61/8ASsC+YdGsn0xiEkew&#xA;EsU0asQC6+rJKr0H7Hw18RkzgHRx/EL6lyhsaxV2BWsVaxVrFXYq1irRwKtOKWjgVacVWnArQxVc&#xA;MKrhirYwquGKtjFDeFW8VbxV2Kt4q3iryT/nKAAflXNJ+1Fe2zL4VJZd/obLsP1MJ8nx8t8P2l+k&#xA;ZlNVKq3MD7FqezYoWzQW7xOwUfZNCvy9sVSo238rffjaVhgkHavywpVtNU/pG1Vhs00YYHuCwxKv&#xA;0rzXt7sCtYq1irsVaxVo4q44FWnFLRxVacCtHFVhOBVoOKV4xQuGFVwxVsYVXDFDeKtjCrsVbxV2&#xA;Kt4q8k/5ygJP5Y+n+zJf26uPEAO361GXYfqYT5PkFrFD9liPnvmU1WpNZTDpRv8AP3xVQlSWNGqC&#xA;ux3+jFUGJpB3r88KqguT3X7saVXtpQ88apXmzqFHepO2BX6TZr3IdirWKuxVrFXHFWsVaOBVpxS0&#xA;cCtYqtOKrCcCVoOBV4OFC8YVbGKtjFVwwq2MUN4VbxV2Kt4q7FXk3/OUB/5BRc/zfW7bj415np9G&#xA;W4fqYz5PjdbiZejE/Pf9eZbSrLfN+0oPy2xWlz3kLRODUfCeo9vbFUv4wv4H5YqtNsvYkY2qrYxm&#xA;K/tpGPwJKjMfYMCcUv0nzXt7WKuxVrFXYq1irRwK0cUtHFVpwK0cVWE4FWE4ErQcVXg4VXg4oXDC&#xA;rYxVcMKtjFWwcUN4VbrirsVdirFvzO8lDzn5MvtDSRIbuTjLYzyAlEnibkvLjuAwqhNDQGtDk4S4&#xA;TaJCw+J9e8uarompS6ZrVi9nfQkh4ZVoaAkclboymmzKSD2OZoIPJoIpK2soT0qvy/txQh57JxGx&#xA;VgaA9du2KUsMbjqpwpcJHHRjir1D8mvye8xeedZtrm4tpLXyxDIHvdRZSgkVDUxQE/bdqUqKhep8&#xA;DVkmI+9MY2+4a5htzWKuxV1cVaxVonArWKWjirRwKtOKtE4FWE4qsJwJWA4FXg4VXg4ULwcKrsVb&#xA;xVvCrdcVbrihvFXVwq3irsVQWq6HousQLBq2n22owI3NIruGOdFalOQWQMAaHrhBIWnz1+aP5OTa&#xA;Tq9xqWjaUk2iXB9QJbxBjbsftIyAEha7qRsBtmRjyWN2qUXlupWNollcf6PGrqjfsKCDT5ZcGDGr&#xA;HSbrULhbawsnu7h9khgiMjn5KgJwkofTf5Gfkfa6Lp0+rebdItZtVu2Q2drcxRzNaxJU8viDBZJC&#xA;29NwAPEjMbLkvk3Qj3vbURERURQqKAqqooABsAAMoZt4q7FWq4q7FWq4FaxS0TirWBWsVWk4qtJw&#xA;KsJwJWE4qsBwKvBwqvBxVeDhQuBwquxVvFW64VbrirdcUOrireFWwD4Yq6h8MVd9I+8Yq6o8R94x&#xA;V1R4j7xirvu+/FXUPhirRrirsVdXArVcVarilquKtYFaxVaTiq0nAq0nAlYTiqwnAqwHAq8HCq8H&#xA;Cq8HCq4HFC4HCq7FW64q6uFW64q3XFV/L4fh2PvhQh5vrR+ya4UICZb/ALVxVBSrqvauKoZl1j3x&#xA;VtF1jvXFUVCuqd64qjoRf964qjojcD7R+/FVUkEe+BK2uBLVcVdXFWq4FaxVaTirROBVhOKVhOBV&#xA;pOBVhOKrAcCV4OFC8HFVwOFV4OFVwOKFwOFW64q3XFW64q3XCrq4q3XFXVxV1cUOxV2Kurirq4pd&#xA;XFWq4q6uKtVwK1XFWq4q0Tiq0nAq0nFK0nAqwnAqwnFVhOBK0HAq4HCq8HCheDiq4HCq4HFV4OFD&#xA;YOKrq4VdirdcVbrirq4q6uFXjnmC5uZNG85RtPKF/wAR2kK8ZHUrG7W4ZVZSCoIJ6ZfHmPc1nqid&#xA;fjk8t6t5j0LS7m5/RVx5VvNQW1lnln+r3EXKMSRPKzugYHff7WAbgE96nZM/y8j0vTNFfXrjSL/T&#xA;Xg01Jbm/vLt547hCglkeOMzzKtfT5bqp3p44J2TSYpL+T/ml5fMdxa3WprfzeYLX9LNEJfUFtc+s&#xA;/O2A/YpC6Gn+T9GSyx29yIl7FXKGxquBXVxVquKuxVquKtE4FWk4qtJwJWE4qtJwKsJxVaTgVYTg&#xA;SsVsVXg4quBwqvBwoXA4quBwqvBxVsHCq4HFC6uKt1wq6uKt4q6uKsdvfIegXlpqVrKJlj1W7S/u&#xA;mSQq3rx8eLIR9mnpjJiZRwtWPkHy/aw6gsguL651W3a01C9vJ5JriWBgV9PmT8C0b9gD8MTMo4UI&#xA;n5aaKNNuNNe/1SaxuIBbNbzX00kaxAqeKIxKLsnHp02GPiFeFN7nytos9/pl8IPQudId2s3h/d0E&#xA;kZjdGoN1Ze2DiKaTeuRS7FWq4q6uKtVxVaTgVonFVpOBK0nFVpOBVhOKrScCrCcCVhOKqSPkUqqt&#xA;kkLwcVXA4VXA4oXg4VbBxVcDhVcDiq4HCrYOKG64q3XCrq4q3XFXVxV1cVdXFWq4q6uKtVwK0Tir&#xA;ROKVpOBWicVWk4qtJwKtJxVYTgStJwKsJxVTd8CX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:36DB80F9E341E5119799986EE887176C</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:36DB80F9E341E5119799986EE887176C</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:35DB80F9E341E5119799986EE887176C</stRef:instanceID>
            <stRef:documentID>xmp.did:35DB80F9E341E5119799986EE887176C</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A11CDF2CD2B6E411B166B425767324CF</stEvt:instanceID>
                  <stEvt:when>2015-02-18T13:15:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D2A840513EB8E411B166B425767324CF</stEvt:instanceID>
                  <stEvt:when>2015-02-19T17:17:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D3A840513EB8E411B166B425767324CF</stEvt:instanceID>
                  <stEvt:when>2015-02-19T17:18:41+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0921AB84A740E511AC5AA6C584615238</stEvt:instanceID>
                  <stEvt:when>2015-08-12T21:51:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35DB80F9E341E5119799986EE887176C</stEvt:instanceID>
                  <stEvt:when>2015-08-13T21:47:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:36DB80F9E341E5119799986EE887176C</stEvt:instanceID>
                  <stEvt:when>2015-08-13T21:53:51+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
[1 0 0 1 0 0 ]ct
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
222.822 376.295 mo
185.975 376.295 156.104 380.482 156.104 385.647 cv
156.104 390.813 185.975 395 222.822 395 cv
259.668 395 289.539 390.813 289.539 385.647 cv
289.539 380.482 259.668 376.295 222.822 376.295 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[231.475 229.529 -229.529 231.475 225 225 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.996078 .992157 .992157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .992157 .992157 ]
/C1 [.984314 .976471 .968627 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .976471 .968627 ]
/C1 [.968627 .956863 .937255 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.968627 .956863 .937255 ]
/C1 [.917647 .898039 .847059 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .898039 .847059 ]
/C1 [.878431 .85098 .776471 ]
/N 1 
>>
]
/Bounds [.225275 .5 .681319 .923077 ]
/Encode [0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[231.475 229.529 -229.529 231.475 225 225 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2lprVc]n
rVc]nrVc]nrVc]nrVc]nrVcZlr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9f
qtg0cqYL'bqYL'bq>'j^q>'j^q>'j^q"XXZq"XXZq"XXYp\4FVp\4FVp\4FUp@e4Rp%A"No^qeJo^h\G
oCMPDo()AAnaZ/=nF5r:n*f`6n*]W3mdBK0mHs<-m-O*)lg*m&lK[["lKRQski_-kk2k^cjQ#:[io/kS
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVcZlr;?Kj
r;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9fqtp9fqtg0cqYL'bqYL'bqYL'bqYL'aq>'j^q>'j^q>'j^q>'j^
q=sa[q"XXZq"XUXp\4FVp\4FUp@e4Rp@e4Rp%A"Np%A"Np%@tLo^qeJo^qeIoCMSEo()AAnaZ/=nF5r9
n*f`6mdBN2mHs<.m-O**lg*m&lK[["l07Hskih6okND$kkN:phk2k^djlGI^io8qTi8<GKh;-lAgY1B7
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVcZlr;?Kj
r;?Kjr;?Hhqtp9fqtp9fqtp6dqYL'bqYL'bqYBs_q>'j^q>'j^q=sa[q"XXZq"XXZq"OOWp\4FVp\4FV
p\+=Sp@e1Pp%A"No^qeJo^qbHoCMSFo()ABo()>@naZ/=nF5r:nF,i7n*f`5mdBK0m-O*)lg*j$l07Hr
kih3mk2tgfjlPRajQ#:[io8qUiS`YOhr!;IhVI#Cgt^Z=gY1B7g"G$1f[n^)eC2jnd*U+ac-4ARaiMNB
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
199.649 408.879 mo
200.028 408.803 200.585 408.777 200.988 408.777 cv
201.395 408.777 201.924 408.803 202.33 408.879 cv
202.33 426.154 li
201.924 426.231 201.395 426.256 200.988 426.256 cv
200.585 426.256 200.028 426.231 199.649 426.154 cv
199.649 408.879 li
cp
.239216 .27451 .360784 rgb
f
212.721 410.953 mo
211.659 410.953 210.824 410.928 209.686 410.928 cv
209.686 424.106 li
210.824 424.08 211.659 424.106 212.721 424.106 cv
216.466 424.106 217.023 420.513 217.023 417.529 cv
217.023 414.493 216.466 410.953 212.721 410.953 cv
cp
217.122 424.992 mo
216.035 425.902 214.063 426.281 212.721 426.281 cv
210.673 426.281 209.356 426.231 207.156 426.18 cv
207.005 426.002 li
207.005 409.03 li
207.156 408.854 li
209.356 408.777 210.673 408.777 212.721 408.777 cv
214.063 408.777 216.035 409.157 217.122 410.067 cv
219.399 411.939 219.805 414.595 219.805 417.529 cv
219.805 420.488 219.423 423.12 217.122 424.992 cv
cp
f
234.142 424.916 mo
233.99 425.774 233.381 426.18 232.421 426.18 cv
224.908 426.18 li
223.949 426.18 223.367 425.549 223.367 424.512 cv
223.367 409.03 li
223.542 408.879 li
233.71 408.879 li
233.787 409.283 233.787 409.638 233.787 409.941 cv
233.787 410.245 233.735 410.751 233.584 411.156 cv
227.589 411.156 li
227.211 411.156 226.576 411.181 225.994 411.156 cv
225.994 411.813 226.021 412.142 226.021 412.8 cv
226.021 416.341 li
226.604 416.341 227.211 416.315 227.589 416.315 cv
232.344 416.315 li
232.445 416.669 232.471 417.125 232.471 417.428 cv
232.471 417.732 232.445 418.188 232.344 418.541 cv
227.589 418.541 li
227.211 418.541 226.604 418.541 226.021 418.516 cv
226.021 422.664 li
226.021 423.12 225.994 423.474 225.994 423.954 cv
226.503 423.904 227.008 423.879 227.666 423.879 cv
234.219 423.879 li
234.219 424.106 234.219 424.561 234.142 424.916 cv
cp
f
240.488 419.781 mo
240.891 419.781 241.574 419.755 241.777 419.755 cv
244.307 419.755 li
244.484 419.755 245.166 419.781 245.571 419.781 cv
244.408 416.112 li
243.952 414.646 243.42 412.875 243.067 411.535 cv
242.939 411.535 li
242.688 412.673 242.231 414.266 241.956 415.203 cv
240.488 419.781 li
cp
239.804 421.955 mo
238.462 426.18 li
238.137 426.256 237.705 426.281 237.299 426.281 cv
236.819 426.281 236.339 426.204 235.985 426.104 cv
235.908 425.977 li
241.626 408.879 li
242.029 408.803 242.737 408.777 243.168 408.777 cv
243.599 408.777 244.307 408.803 244.685 408.879 cv
250.351 425.977 li
249.974 426.231 249.365 426.333 248.784 426.333 cv
247.947 426.333 247.52 426.028 247.19 424.916 cv
246.255 421.955 li
245.824 421.955 244.938 421.981 244.738 421.981 cv
241.272 421.981 li
241.069 421.981 240.234 421.955 239.804 421.955 cv
cp
f
336.418 50.9824 mo
335.675 50.2393 335.675 49.0313 336.418 48.2881 cv
337.159 47.5469 338.365 47.5483 339.108 48.2915 cv
339.851 49.0327 339.853 50.2407 339.112 50.9824 cv
338.369 51.7256 337.159 51.7241 336.418 50.9824 cv
cp
343.219 54.2031 mo
340.396 51.3804 li
341.094 50.3286 341.092 48.9434 340.394 47.8911 cv
343.033 45.2515 li
342.147 44.3643 li
339.508 47.0039 li
338.454 46.3052 337.071 46.3066 336.021 47.0034 cv
332.999 43.9829 li
332.112 44.8696 li
335.133 47.8901 li
334.434 48.9443 334.434 50.3257 335.132 51.3794 cv
332.395 54.1167 li
333.282 55.0034 li
336.02 52.2661 li
337.071 52.9639 338.456 52.9658 339.51 52.2671 cv
342.333 55.0898 li
343.219 54.2031 li
cp
.972549 .419608 .254902 rgb
f
328.059 270.014 mo
327.315 270.757 326.107 270.755 325.364 270.013 cv
324.623 269.271 324.624 268.064 325.367 267.321 cv
326.109 266.578 327.316 266.577 328.058 267.318 cv
328.801 268.062 328.801 269.271 328.059 270.014 cv
cp
331.279 263.211 mo
328.457 266.034 li
327.403 265.337 326.02 265.337 324.967 266.036 cv
322.327 263.396 li
321.44 264.283 li
324.081 266.924 li
323.382 267.977 323.382 269.358 324.08 270.411 cv
321.059 273.432 li
321.946 274.318 li
324.967 271.298 li
326.02 271.997 327.402 271.997 328.455 271.299 cv
331.192 274.035 li
332.08 273.148 li
329.343 270.411 li
330.041 269.358 330.042 267.975 329.343 266.921 cv
332.166 264.099 li
331.279 263.211 li
cp
.996078 .756863 .215686 rgb
f
95.1299 166.354 mo
85.6582 166.354 li
85.6582 165.292 li
95.1299 165.292 li
95.1299 166.354 li
cp
f
90.9253 170.559 mo
89.8638 170.559 li
89.8638 161.087 li
90.9253 161.087 li
90.9253 170.559 li
cp
f
356.013 173.801 mo
349.315 167.104 li
350.065 166.354 li
356.763 173.051 li
356.013 173.801 li
cp
f
350.066 173.801 mo
349.316 173.051 li
356.014 166.354 li
356.764 167.104 li
350.066 173.801 li
cp
f
237.318 19.6606 mo
227.846 19.6606 li
227.846 18.5991 li
237.318 18.5991 li
237.318 19.6606 li
cp
f
233.113 23.8652 mo
232.052 23.8652 li
232.052 14.394 li
233.113 14.394 li
233.113 23.8652 li
cp
f
354.051 255.486 mo
344.579 255.486 li
344.579 254.425 li
354.051 254.425 li
354.051 255.486 li
cp
.972549 .419608 .254902 rgb
f
349.846 259.69 mo
348.785 259.69 li
348.785 250.219 li
349.846 250.219 li
349.846 259.69 li
cp
f
96.4888 227.185 mo
95.7383 226.435 li
102.484 219.689 li
103.235 220.44 li
96.4888 227.185 li
cp
f
102.484 227.186 mo
95.7373 220.439 li
96.4878 219.689 li
103.235 226.436 li
102.484 227.186 li
cp
f
381.353 87.4487 mo
379.047 85.1426 li
379.652 84.5376 li
381.958 86.8438 li
381.353 87.4487 li
cp
.239216 .27451 .360784 rgb
f
377.271 83.3662 mo
374.964 81.0601 li
375.569 80.4551 li
377.876 82.7607 li
377.271 83.3662 li
cp
f
375.57 87.4487 mo
374.966 86.8438 li
377.271 84.5381 li
377.876 85.1431 li
375.57 87.4487 li
cp
f
379.653 83.3662 mo
379.048 82.7607 li
381.354 80.4551 li
381.959 81.0601 li
379.653 83.3662 li
cp
f
379.048 83.3662 mo
378.725 83.0425 378.199 83.0425 377.876 83.3662 cv
377.553 83.6895 377.553 84.2153 377.876 84.5381 cv
378.198 84.8604 378.724 84.8604 379.047 84.5376 cv
379.37 84.2144 379.37 83.689 379.048 83.3662 cv
cp
377.271 85.1431 mo
376.614 84.4863 376.614 83.418 377.271 82.7607 cv
377.928 82.104 378.996 82.104 379.653 82.7607 cv
380.309 83.418 380.309 84.4854 379.652 85.1426 cv
378.995 85.7998 377.928 85.7998 377.271 85.1431 cv
cp
f
74.6577 97.9087 mo
70.8003 97.9087 li
70.8003 96.8477 li
74.6577 96.8477 li
74.6577 97.9087 li
cp
.972549 .419608 .254902 rgb
f
66.5156 97.9087 mo
62.4199 97.9087 li
62.4199 96.8477 li
66.5156 96.8477 li
66.5156 97.9087 li
cp
f
69.1875 103.275 mo
68.1265 103.275 li
68.1265 99.5225 li
69.1875 99.5225 li
69.1875 103.275 li
cp
f
69.1875 95.2373 mo
68.1265 95.2373 li
68.1265 91.5986 li
69.1875 91.5986 li
69.1875 95.2373 li
cp
f
68.6567 95.7681 mo
67.7686 95.7681 67.0464 96.4907 67.0464 97.3784 cv
67.0464 98.2681 67.7686 98.9917 68.6567 98.9917 cv
69.5464 98.9917 70.2695 98.2681 70.2695 97.3784 cv
70.2695 96.4907 69.5464 95.7681 68.6567 95.7681 cv
cp
68.6567 100.053 mo
67.1831 100.053 65.9849 98.853 65.9849 97.3784 cv
65.9849 95.9053 67.1831 94.707 68.6567 94.707 cv
70.1318 94.707 71.3311 95.9053 71.3311 97.3784 cv
71.3311 98.853 70.1318 100.053 68.6567 100.053 cv
cp
f
82.252 109.525 mo
80.4497 109.525 li
80.4497 108.464 li
82.252 108.464 li
82.252 109.525 li
cp
.286275 .752941 .756863 rgb
f
78.4473 109.525 mo
76.5352 109.525 li
76.5352 108.464 li
78.4473 108.464 li
78.4473 109.525 li
cp
f
79.978 111.75 mo
78.917 111.75 li
78.917 109.997 li
79.978 109.997 li
79.978 111.75 li
cp
f
79.978 107.996 mo
78.917 107.996 li
78.917 106.296 li
79.978 106.296 li
79.978 107.996 li
cp
f
79.4473 108.526 mo
79.1885 108.526 78.978 108.737 78.978 108.995 cv
78.978 109.255 79.1885 109.466 79.4473 109.466 cv
79.7075 109.466 79.9189 109.255 79.9189 108.995 cv
79.9189 108.737 79.7075 108.526 79.4473 108.526 cv
cp
79.4473 110.528 mo
78.604 110.528 77.9165 109.84 77.9165 108.995 cv
77.9165 108.151 78.604 107.465 79.4473 107.465 cv
80.2935 107.465 80.9805 108.151 80.9805 108.995 cv
80.9805 109.84 80.2935 110.528 79.4473 110.528 cv
cp
f
374.964 102.205 mo
373.162 102.205 li
373.162 101.144 li
374.964 101.144 li
374.964 102.205 li
cp
f
371.16 102.205 mo
369.247 102.205 li
369.247 101.144 li
371.16 101.144 li
371.16 102.205 li
cp
f
372.69 104.429 mo
371.629 104.429 li
371.629 102.676 li
372.69 102.676 li
372.69 104.429 li
cp
f
372.69 100.675 mo
371.629 100.675 li
371.629 98.9751 li
372.69 98.9751 li
372.69 100.675 li
cp
f
372.16 101.206 mo
371.9 101.206 371.69 101.416 371.69 101.674 cv
371.69 101.934 371.9 102.146 372.16 102.146 cv
372.42 102.146 372.632 101.934 372.632 101.674 cv
372.632 101.416 372.42 101.206 372.16 101.206 cv
cp
372.16 103.207 mo
371.316 103.207 370.629 102.52 370.629 101.674 cv
370.629 100.831 371.316 100.145 372.16 100.145 cv
373.006 100.145 373.692 100.831 373.692 101.674 cv
373.692 102.52 373.006 103.207 372.16 103.207 cv
cp
f
98.5967 249.078 mo
96.7944 249.078 li
96.7944 248.017 li
98.5967 248.017 li
98.5967 249.078 li
cp
f
94.792 249.078 mo
92.8799 249.078 li
92.8799 248.017 li
94.792 248.017 li
94.792 249.078 li
cp
f
96.3228 251.302 mo
95.2617 251.302 li
95.2617 249.55 li
96.3228 249.55 li
96.3228 251.302 li
cp
f
96.3228 247.548 mo
95.2617 247.548 li
95.2617 245.849 li
96.3228 245.849 li
96.3228 247.548 li
cp
f
95.792 248.079 mo
95.5332 248.079 95.3228 248.289 95.3228 248.547 cv
95.3228 248.808 95.5332 249.019 95.792 249.019 cv
96.0522 249.019 96.2637 248.808 96.2637 248.547 cv
96.2637 248.289 96.0522 248.079 95.792 248.079 cv
cp
95.792 250.08 mo
94.9487 250.08 94.2612 249.393 94.2612 248.547 cv
94.2612 247.703 94.9487 247.018 95.792 247.018 cv
96.6377 247.018 97.3252 247.703 97.3252 248.547 cv
97.3252 249.393 96.6377 250.08 95.792 250.08 cv
cp
f
177.491 21.5093 mo
175.688 21.5093 li
175.688 20.4482 li
177.491 20.4482 li
177.491 21.5093 li
cp
.0352941 .666667 .678431 rgb
f
173.686 21.5093 mo
171.774 21.5093 li
171.774 20.4482 li
173.686 20.4482 li
173.686 21.5093 li
cp
f
175.217 23.7334 mo
174.156 23.7334 li
174.156 21.981 li
175.217 21.981 li
175.217 23.7334 li
cp
f
175.217 19.98 mo
174.156 19.98 li
174.156 18.2803 li
175.217 18.2803 li
175.217 19.98 li
cp
f
174.686 20.5103 mo
174.427 20.5103 174.217 20.7207 174.217 20.979 cv
174.217 21.2388 174.427 21.4502 174.686 21.4502 cv
174.946 21.4502 175.158 21.2388 175.158 20.979 cv
175.158 20.7207 174.946 20.5103 174.686 20.5103 cv
cp
174.686 22.5117 mo
173.843 22.5117 173.155 21.8242 173.155 20.979 cv
173.155 20.1353 173.843 19.4492 174.686 19.4492 cv
175.532 19.4492 176.219 20.1353 176.219 20.979 cv
176.219 21.8242 175.532 22.5117 174.686 22.5117 cv
cp
f
222.822 395 mo
185.975 395 156.104 390.813 156.104 385.647 cv
156.104 380.482 185.975 376.295 222.822 376.295 cv
259.668 376.295 289.539 380.482 289.539 385.647 cv
289.539 390.813 259.668 395 222.822 395 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[134.88 0 0 20.16 155.52 54.48 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 281 
/H 42 
/M[281 0 0 -42 0 42 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K):/sk51_F!;WVjg\K%g_tWm"K)"I&bkKT`K):i1meNdVh"on(V>9r_^\>tIR/$"AhY3lDK)<I__"l.K
cMHo'W;53BiV0)Ab4rpLpA:idq"ja\mJ,o?pA+O\Y5@bdT)&0VrqH9`lh:&Hp%J+Rq=r)-f(o@>\G,dn
o(`"Sp\*,0p@e=VjS8ZJ_"YqIl21ASqt^-aq=jXWde3A.q=jpar:p0br;*Ypj8%!rqtU'_qtBjYp[m/1
qXaIRq=XUXqtL$`Yke7k[eKgsqtL!]qt9dWp[e.Mh"(42q=OOVqtBs^pA!55k4cRdr;-Bfr:p3aqtBp[
!;--[q"+"GnaZ/?p[e7RqXsd[r:g-ar;$<foD?`.^%qU$rV-6`r:TsZqt'XSq!mkCnaH#;p[S+NqXaXW
r:L'`rV$0`rV4)%qtA_;lhC>NrUp*\s7?6^qt'^Uq=47LnF,o8naH;Cs7#mTqXXRUr:Kp[s7ZHbrV!r!
meb`8rVHNhr:p6brV$0^r:KmXqssURq=*tDna?>Co'cACqXOIRr:BjYr:U!]rV-9crV?Egd/3Y9a8,]/
rqH?arUp-]r:BjWqsjRQqX=7JrU'=Gm-O<1q!S"IqsaORr:9dWr:Ks\rV$3arV5^ShYI!@chID3rq63]
rU^!Yr:0^Ss6p!Ws7#pSqX41Ho'G`/o'H/=qX47Lr:'XSrpp*Zr:9gXrUg*^!;6<aaS4'YrVHNhrV6Bd
s7ZKdrUp-]r:BmXr:0^SqsXCLq<dkAk3M^,q!ItHqsXIPr:0^UrU^![rUp-_rV-<drV?Hhd/2SnpA+[^
rqHBbrq66^rU^!Yr:0aTr9sROqsF7Hq<R_=k3;U)!:'@Fqs=4Ir9jLOr:'[TrUTpYrUg']rq?<brqOk9
p@d88rV$6`rUg*\rUTpWrUBaRrU0UNr9XILrTsCHq<IY;p?;&1p$)8:qs4.Gr9aLOs6]aPrU9^SrUKjW
rU^$\rUp0`i:lg:!;>%ArqcWirqQHdrq?<`rq-0\rUTpWrUBdSr9jLMqs=4GrTaCIpZ^T!q!%V>qs41H
r9aFMrU9[RrUKmXrU^![rq66`rqHEerV6His8(CFs7k:CrqQKerq?<`rq-0\rpp$XrUBdSrU0[P!:B^N
r9O7Fqs!t@pZLGrpuhJ:qs"%Dr9O:IrU'ONrU9dU!:]sWrUTsZrUg*^rq?<brqP.Ao_.A?rq??arq-0\
s7-0\rUKmVrU9^QrU'RMrTjCHr9<n<qWH)bq<.Y=rosIIs6BUJr9F7Hr9XCLrpKaRrUBgVrUTsZrq-0^
rq>.ArV#:Kr;6KirqZQgrqHEcrUp0^rq$*ZrpfsVrU9aRr9aILrTjCHr9=.CqWI_;o&]Q*pZ;A8q<%S;
qrmtBrTa=HrTsLMrU0XQrp]mVrpp$Zrq-3_rq??crqQKgrqbLKrV5CJrqQKerq??arq-0\rpp'YrUBgT
rU0XOrp9RKrTa@Gr94(Ar9!n<o&Tf2m,RNpqrRb<r9+%Br9=1FrTjFKrU'UPrU9aTrUKmXrq$-]rq69a
rqHEeq>'1Knb2DFrq??arq-3]rpp$Xrp]pUrU0[PrTsLKrp'FGq<7b>rT4+Br8mk;!9O(<p>bN!p>bu0
qrRh>s5j1@rTEt>rTX:GrTjILrU'UPrU9dU!:^!Xrpp'[rq-3_rq>FIqtB(Is8)`jrqQKerq??arq-3]
rpp'YrUBgTrpKaPrp9ULrTa@GrTO4CrT=%>qrIV6pu:GppYu)1qrI\:r9!t@rTO4Es69ULrTjILrU'UP
rU9aTrpg!Yrq$-]rUp3arqHEerqZQijSSiLl1tASrqHEcrq69_s766^rpp'Yrp]pUrU0[Prp9ULrp'IH
rTO4CroX1@puM>4qr7G1i8FFiqVhM8rT!\6rT4"?rTF1DrTX=HrTjILrU'UPrpTjUrpg!YrU^']rq69a
rqHEejSA9<!;H3]s7ZHbrq-3]rpp'Yrp]pUrpKdQrTsOLrp'IHqWRn@rT=+@rT*n:rSm_5qr%A/s5<5#
p>>](ro*h6r8IS5rT!k;rT4"?roa.ArTX=HrTjILrpB^QrpTjUrUKpYrq$-]rq69amIpVSq=Xgbl21MW
rqZQgrqHHdrq69_rq$-[rpg!WrpTjSrpB^OrTjIJrosFGrTF1BrT4"=rT!h8r8IP2rnmY2i84:eqr%A1
rSme9rT*q=rT=+Broj=Frp'LKrp9XOrU0[Rrp]pWs760\rq-3_rq??cs7lThrqbmVq"XCTs7lTfrq??a
s7H<^rpp'Yrp]pUrpKdQrp9XMrp'IHroj@EroX4AqW%Y:ro<t:r8IS3r87A-p>,2mp>,W&qqq>0rSd_7
rT!b8roO.ArTF1DrosFIrp0OLrpB^QrpTmVrpg!Yrq$-]rq6<brqHEel1s]>rV-?crq69_rq$0\rpg!W
rpTjSrpB^Orp0RKros:Croa:CroO.?rT!n:rSd_5r87G/r8%5)p=o&ip=oK"qq_2,rSRS3rSde9!93t;
roF(?rT=+Bqrn%DrTaCJrp9XOs6fmTrp]pWrpp'[s7H<`rq?!Yp@eL^nGE4]rqZThrqHEcs7QEa!;-9^
s760Zrp]pUrpKdQrp9XMrp'OJroj@ErT=+@roF(=rSme7rS[Y3rSIG-n_EQeo%a9#r8%;-rSRS3rSdb8
rT!n<roO.Aroa:ErosFIrp0RMrpBaRrpTjUrpg!Ys7?6^rq69as7cNfs7uZjmJHVPq"aparqHHdrq69_
s7?6\rpg$XrpTjSrpB^Orp0RKrosFGs6'CDroO%<ro<t:ro*k7rSRS1r8%>,qqLr#p"Aifq:b`#r7q8,
rSIM1rS[\6ro3q;qrIb<roX4Croj@Grp'LKs6TaPrpKdSrp]sXrpp'[rq-6`rq?BdrqQHfoD/F]mIpGM
s7H<^rpp*Zrp]pUs6fmRrp9XMrp'LIqrn%Bs5s=BroF(=ro3q9rS[\4rndV0rS7>*rn7A+qq:etjOa4[
qq:o$rS.;+rS@G/rnm_5ro*k9ro="=roO.Aroa1BrosIJrp0RMrp9^Rs6fpUrp]pWrpp*\rq-6`rq?6`
oCi(XpA=mdrqZThrqHHdrq69_s7?6\rpg$XrpTjSs6]gPrp0RKs69OHroa=DroO.?ro=";ro*h6rnm_3
rS@;)r7h,&q:Xr`q:Y]"r7h&&rS@G/rnm_5ro*k9ro="=roO1B!p8\/roj@Grp'OLrp9XOs6fmTrp]pW
s760\s7H<`rq?BdrqQNhrqc0^oD&=\s7lTfs7ZHbs7H<^rpp*Zrp]pUs6fmRrp9[NrosLJs69OHs6'CD
s5j.=ro=";s5Et8rSRV2rn[S/rS.;)rRq)#qq(Von(%3aqq(burRq/'rS.A-!8RP/rndY3ro!e7ro3q;
r8dk=s5s=DrojCHrp'LKs6TaPrpKdSs7$$Xs760\rq-6`rq?BdrqQ0^rV5mUs7QB`#P7QXo(2GCnc/.Y
nGhtVmf)VRm/H>MlMp,Gkl0cFk5OKBjSn3=ir7p9i;_^6hYl:0h#?(-gAT_'f_sG!f)+"meF1l_eGn%q
ebn"sfDXA#g&B_(g]$"-h>Z:1hu;R5iW%p:j8S->jo4EAkPXQCl2U&Jli-8MmJlVRn,MnVnc&+ZoD\@b
p%A%Pp$qbOqY^6iqZ$Bjq#C*fpAagbo`+O^o)A1ZnG_nVmf)VRm/H>MlMp,Jkl9iFk5XQBjSn3>ir7p9
i;VX5hYu@.h#6",gAT_&f_j@uf)O:qeb@SeebdqqfDXA#g&9Y(g\T_)h>Z:2hu;R5iVqj:j8S-=jo=KB
kPscFl2U&Jli-8NmJcPRn,DhUnc/1Zo)eRVp&F^bpAamdq#C0hqXj[Wq#'mcpAagbo`+O^o)J7ZnG_nV
mf)VRm/H>NlMg&Ikl9iGk5OK?jSn3>ir7p:i;VX5hYu@1h#?(-gA]e)f_sG#f)=.reGI_Wde_GjeG[qr
f)=5!f`'S'gA]k+h#?.0hYuF3i;_d8ir8!:jSn9@k5OQDkl0iGlMp2Lm/QJPmf)\TnG_tXo)A7\o`+U`
pAamdq"sm`q"4:Zp&F[`oDeC\nHSLPn*oi8n,DbSmJlPPli68Ll29cEkPs]Ejo4??j8\-<i;hd9i;VX6
hYu@1h#?(-gA]e)f`'M%f)=.teG[kndehGSd/)/fdf%YneG[qrf)F;#f`'S'gA]h.gt^`ch>Z:2hu;R5
iW%p;j8S->jo4EBkPOKCl2KuJli-8MmJlVRn,MnVnHe^VoCMVHoCV\Sp%7tPq?$QjqYp<jq#C*fpAagb
o`+O^o)J7ZnGhtVmK2eCm/QGPli-2Ll2TuHkPs]Djo=E@j8\-<iW%j8huDR4h>?",g]#q+g&BY'fDX;!
ec""pe,%M\dJ;5ge,7_oeH"2#f)=5"f`'S'gA]k)h#?./hZ)L4i;_d8irA'<jT"?@k5XWDkl9oIlMg,L
m/HDPmf)\TnG_tXo)A7\o`"O`pAamdq#C0hqY9pfqY'^ap\sjfp%@qWp&=U`oD\=\nc&%Xn,DbTmJcJP
li-2Ll2KoHkPs]Ejo"3=j8\-=iVqd8hu;L4h>Z4/g]-",g&BY'fDaA#ec""se,@_mdJVAech,N_cM5``
d/DAjdf%YoeG[qtf)F;#f`'S'gAfq,h#?.0hYuF4i;_d8irA':jT"?@k5XWEkl0iHlMg,Lm/HDPmf)\T
nG_tXo)A7\o`+U`pAamdp]:3cq=s[Ws7QB`s7?9]rpg$XrpL'Zmd9E0mHso>s6K[Ls69IFroa=Ds5j:A
ro=%<ro*n8s53h4s5!\0s4dP,rn7>(rn%/#rmh"trmUhormC\krQbJir6G,_o$$mRr6G8erQtMjrmLbo
s4%%urmq)#rn.8(rn@A+s4mV0s5*e5ro!h8ro3t<s5a1@s5s@Er94.Es6BULs6TaPs6fmTs7#sVs760\
s7H<`p\+FZrqZKes7cQerq6<`s7?6\s7-*Xs6osTs6]jQrp0ULs69OHs6'FEroO1@s5X+<s5Et8s53k5
rn[M-rnIJ,s4ID*rn.8&rmq)!rRChqrmLbmr6YAfkg'(OrQtMjrR1\orm^qtrmq)#rn.8(rn@A+r7q>.
s5*b4s5<n8"QJG$j5g7$s5j:Croa=Fs69OJs6K^OrpBaRrpTmVrpg$Zs7?6^s7QBbs7cQgrqZTjr;6Ki
q=ss`s7ZHb$M<u^oCDMEo()>@rp]sVrpKgRrp9[Ns6BUJs60LGroX7BrT*t<s5O(;ro!h6s5*b2s4mY/
rn@D*rn.8&rmq)!s4%%srmLenrm:VirQbAdqon?Kqoo#`rQbAfrm:YlrmLeprm^qts475%!nZ)Wrn7>*
rnIJ.s5!\2s53k7s5Et:s5X%<s5j:Cs6'CFs69RKrp0UNrpBaRrpTmVs7-*Zs7?6^#kdlap@n:Sp\4LY
q=ag\s7H<^s763[rp]sVs6fmRs6T[L!:'ULs69IFs6'FEroO1@s5X.=ro*n8s53h4s5!_1rnIJ,s4RD(
s4@8$s4.+urmUnqrmC_lrm1ShrQY;brQG)\lH/qGrQG2a!6kDdrm(Mhrm:YlrmLeps4%%us472$s4I>(
s4[M-rnRP0s5*e5ro!h8s5O%<s5a4As5s=DrTO7Fs6BULs6TaPs6fgRs7$$Xs763]rq-6`q=a[]s7u]i
rq?Ngp\+=[p&F[aoD\=\nc/+Xn,MhTmJlPQli68Ll2TuIkPs]Djo=EAj8\-<iW%j9hu;L4h>H(.g]-",
g&K_(fDjG$ec+(ue,IepdJhMlci)/fc2>f[bONdRbl,fccMl/hd/MGldf._peGn(uf)OA$f`0Y)gA]k*
h#?.0hZ)L4i;_d9ir8!<jT"?Ak5XWDkl9oIlMg,Lm/QJPmf2bUnG_tXo)A7\o`+Uap'16bp\=OZq=sg_
q#C*gpAXabo`+O^ncSFPnF?MIs6p!UrpBaPrp0ULs69RIroa=Ds5j4?s5X+<s5F"9s53k5rn[V0s4dP,
s4RG)rn%2$s4.+us3ptqs3^hmrm1Sh!6kMgrQP8arQ>&[kK*SCrlY2_rlkAdrm(Mhs3Ubms3gnqs4%%u
s475%rn.8(s4[J,s4mY1s5*e5ro!h8s5O(=rT*t>#3P(2kNM-os69RKs6K[Ns6]jSrpTmVrpg$Zs7?6^
"nhN\p%J+Yp\Xa^pAagco`"I^o)J7ZnGhtWmf)VRm/QDNl3-A9kiq@1kl9iFk5XQCjT"9?irA!:i;_^7
hZ)F3h#?(.gAfk*f`0S'f)F5"eGn"sdf7_od/VGkcMl)fbl>lbb506XaQLVAaSO$Xb5TT`bl5lecMl/i
d/MGmdf._qeGn(uf)OA%f`'S(gAfq-h#H40hZ)L5i;_d9irA'<jT"?Ak5XWBkl9oHl3Q_Am-O-,m-X3>
mf2bUnG_tXo)J=]o`"O\pAFdeq>U0hp]'sdo`OjZo^r.Ss763[s7$$Vs6fmRs6TdOs6BUJs60LGs5s@C
s5a1>s5O(;s5<n6s5*e3rS7D,s4[M+rn.8&s475#rm^tsrmLhorm:\krm(Mfrlk>aq9&!Eq9&WYrlkDe
rm(Mhs3Ubm!n,NG!7Uqss4.,"s4@;'s4RD*s4dJ,s5!_3s53k7ro*n:s5X.?s5j:Croa=Fs69RKrp0UN
s6]gRs6p!Wrpg$Zs7?9_rq6<bs7cNf"8V`fq>C*eq#C*fpAagco`"I^o)J7Zn-/:LmdKT3rpBaPrp0UL
s69RIroa=Ds5j4?s5X.=s5F"9rnmb4s5!_1s4dS-s4RD(s4@;%s4.+us3q"rrmCbms3L\is3:Pes3(Da
rlP,[q8_d?r5\fWr5elZs2t>as31Jes3CVis3UenrmLhqs4%)!s472$s4IA)s4[M-rnRP0s5*e5s5<q9
s5O%<rT+"?s5s@Es60IHs6BXMrp9[Ps6fmT%.NcVnac8BoCDMEo^r.Us7ZKer:p3`s7QB`s7?9]rpg$X
s6osTs6]jQs6K[Ls69IF"6\n2kPjWDjo=EAj8\-=iW%j9huDR4h>c:1g]-"-g&K_)fDaA$ec4/!e,Ieq
dJqSmci;;jc2PrebPoZ^ao9B[a8<mV`p1P=`r*mVaSa0[b5TTabl5lecMu5id/VMndf7ereGe"uf)OA%
f`0Y(gAfq-h#H41hZ)L5i;V^8irA'=jT"?Ak5XWBkl9oHl3-G<lg*p;m/QJQmf2bTnGi%Yo)A7\o`+U^
pAOjfq>U0hp]'sep&=RcoCMPErpp*Zs7$$Vs6fpSs6TaNs6BXKs60LGs5s=Bs5a4?s5O(;s5<q7rnd\2
rS7G-s4[J*s4IA's475#rmV/$e'c[ldEqp?s3L_jrltJerQG,]qoSZTo>g[Jr5niYrlb;bs3:Shrm1Vk
s3^kprmUnss4./#rn%2&s4RG+s4dJ,s5!_3s53k7s5Et:!or>%#it+/k2tjikii$1s6BXMs6TaPs6fpU
rp]sXs763]rq$Wlp%J+Rp\+@Uq"X[\rVHKfs7cNds7QEas7?6\s7--YrpL9`md9E.mHs9,lg*j$rosIH
s6'FEs5j4?s5X.=s5Et8$K'athVI#CgtUT;#hmtbf\"g-f%0iNs4%(ts3gqps3Ubks3CYhs31Jcs2tA`
rQ+oWqo8HNo>LIDr5SWSrlG)\s2tAbs31Jes3CYjs3UenrmD#"e'umte^b#Wf@S[-g"G*5rnIJ.s5!_3
s53k7s5F";s5X(=s5j:Croa=Fs69RKrp0UNs6]gRs6p!Wr:0gXs7?6^s7QEcs7cKerV$9arq-6^s763[
rp]sVs6fmRs6TdOrp'OJrTO7D"Qnk.k2d$5jQ,@]io8qUi8EMMrnd\2s4mY/s4[M+s4IA's475#s4%%s
s3gqps3Uels3CVgs31Mds2t8]s2b/Zr5SWQq8DmBq8E3Mqo8WUrlG&[s2t>as31Mfs3CYjrm:\ms3gqr
s4%)!s475%s4I>(s4[M-s4mY1s5*e5s5<q9s5O(=s5a4AroX7DrTFIMkih9qlK\B7s6TdQs6fmTs7$'Y
rpp*\s7H?arV$6erqZThs7cQerq6<`s76Neo'u8@naZ,<rpTmTs6]jQrp0ULs69RIs6'FEs5j7@s5X.=
s5F"9s53k5s5!V.s4dS-s4RG)s4@;%s4.+us3q"rs3^kns3L\is3:Sfrlb5^rQ4uYr5\TPrl+iUr5SZT
r5efXrQ>,_rlkDes3CYjs3UenrmLhqs4%)!s475%s4I>(s4[M-rS7G/s5*e5s5<n8s5O(=s5a4As5s@E
s60IHs6BXMs6TaPs6fpUs7$$Xs763]rq-0^s7ZKe"S_]dq>($drqQKes7ZKcs7H<^s763[s7$$Vs6fpS
rp0gSm-F!&lMg&Jkl9iGk5XQAjT"9?irA!;i;_^7hZ)F3h#?(.gAfk+f`0S'f)O;#eGn"tdf7_pd/VGk
cMu/hbl>ldb5]T_aSa*X`W4$V`Vd[L_u@OJ_u.IN`VdaSa8X0ZaoBN`bQ#fdc2Z)hci;AldJqYpe,Iks
ec45#fDjM'g&Ke+g]-(/h>c@3huDX7iW%p;j8J'<jT+HBkPscGl2U&Jli6>OmJlVPn,MnVnc/1[oDeI^
p&Facp\sphp%A%Xp&F[aoDeC\nc/+Yn,MhTmJlPQli-2Ll2BiFk8WRGjlPRaj5f7\io8qUi8EMMhVR)E
gt^Z=g=lPZ'\M'if@JO'e^W*te'c[ldEp7dccuU;c-?73s3(GbrQ5)\rl=rVrPe]Qr58<Hrk\BHr58HN
r5JWSrl>#ZrQ5)^s3(Gds3:Shs3L_ls3^hos3q"ts4./#s4@;'s4RG+s4dS/s5!_3s53k7s5F";s5X+>
!9O4B"6\k2kPXQDl2U&Kli-8NmJlVRn,MnWnc/1ZoDeI_p&=[aqZ$Bkq#:$fpAagbo`+O_o)J7XnGhtW
mf)VRm/QDOlMp,Jkl9iGk5XQCjT"9?irA!;i;VX6hZ)F1h#H./gAfk+f`0S'f)F5"eGn"tdf7_pd/VGl
cMl)gbl5fab5KH\aSa*W`r3mM`;IUQ`r3sVaSa0Yb5TTabl>rfcMu5jd/VMmdf7ereGn)!f)OA%f`0Y)
gA]k*h#H41hZ)L5i;_d9irA'<jT"?Ak5XWEkl9oIlMp2Lm/QJQmf)\TnGi%Yo)A4ao^h_Ip%A=Xs7cQg
rqZTjrqQNfs7ZHbs7H?_rpp*Zs7$'WrpKgRs6TdOr9=:H#jLR:kND!ijlQF$s5X.=s5F"9s53k5s5!_1
s4dS-s4RG)s4@;%s4./!s3q"rs3^kns3L_js3:Sfrlb>as2k8]rQ"lVrPe]QrPSTNp;-[DrPSTPrPefV
rl4oWrlG,]s2tAbs31Mfs3CYjs3Uens3gqrs4%)!s475%rn%5(rn@D,s4mY1s5*e5s5<q9s5O(=rT+"?
s5s@Es60LIrp'OLs6TaP"n(dGmdKWDnGi%Yo)J=\o`+UapAXgdq#9sbo`"F^ncJCPnc&%Xn,MhUmJcJP
li68Ml29cFkPs]Ejo=EAj8S$miSrhTi8EMMhVR)Egt^Z=g=k65f\"g-f%/C%eC;srdaHOjd*U+bcHa\Z
bfn8Rb0'Y(s2b2[rPnfTrP\WOrPJNLrkS?Fr5&?KrPSTPr5JWSrl>&[rQ5)^s3(Gds3:Shs3L_ls3^kp
s3q"ts4.,"!8%5&s4RG+s4dS/s5!_3s53k7s5F";s5X.?s5j4As6'=Ds69OJs6K^Os6]gRs6p!Ws7-*Z
s7?9_rq6<brqcZjs7lTfs7ZKcrq-6^s763[rpU*[n*]Z4mf)VRm/QDOlMp,Jkl9iGk5XQCjT"9?irA!;
i;VX6hZ)F1h#H./gAfk+f`0S&f)O;#eGn"tdf7_pd/VGlcMl)gbl5ccb5TQ^ao'6Ya8O$U`V@CL`VdaS
a8O*Xao'<\bQ#fdc2Z)hci;AldJqYoe,Rqtec45#fDjM'g&Ke*g\oq-h>c@3huDX7iW%p;j8\3>jo=KC
kPscGl2U&Kli-8NmJlVRmgejVnaZ2@oCMPEoCV\Jp&=[bp]($fq>^<jq#C*gpAXabo`+O^o)J7[nGhtV
mf2\Sm/QDNlMp,Ikl9iGk5OK@jT"9?irA!;i;_^7hZ)F3h#H./gAfk+f`0S'f)O;#eGn"tdf7_pd/VGk
c2c,gbl>ldb5]T_aSj0X`r*gS`;RUO_YCtF_Yh=M`;R[R`r*mVaT'B^b5]Zbbl>rfcMu5jd/VMndf7er
eGn)!f)OA%f`0Y)g(N,ogYCT?h;7#Ghr*GOiSrkWj8J'=jo=KCkPscGl2KrVlg*p(mHj3,mI'E2n,DhV
nc/1[oD\C^p&Fabp]($fp&F[^oDeC]nc&%Xn,MhUmJcJPli68Ml29cFkPs]Ejo=E@j8\-=iVh[7h^%+9
hVI#CgtUT;g=b03f[na+f%&=#eC2mpda?Ihd*L%`cHXW5bQ,icb5KH^aSs6Y`r3mS`;RUP_Yh7F_#2%H
_YqCN`;R[Q`r=$YaSj3^b0%mEbKS2Tc-FV\cd:%ddF-Ile'umte^i='fDaG&g&Ke+g]-(/h>c@3huDX7
iW%p;j8J'=jo=KCkPXQDl2KuJli6>OmJcPRn,MnWnc&+ZoDeI^p&FabqYp<jq#C*gpAXabo`+O^o)J7[
nGhtWmKDtFmd9E@m/QDOlMp,Kkl9iGk5OKBjT"9?irA!;i;_^7hYu@0h#H./gAfk+f`0S&f)O;#eGn"t
df7_pd/MAkcMu/hbl,``b5BBZaSa*H`r!dVaSj3Yao'<\bQ#fcc2Z)hci;AldJqYpe,Iksec45#fDjM'
g&Ke*g\oq-h>c@3huDX6iW%p;j8\3?jo=KCkPscGl2KuJli6>OmJcPRn,MnVnHJLRo()DDrq-6`s7ZHd
s7lWirqcWhrqHHds7QEarq$0\s7-*Xs6p!Us6]gPs6K^MrosIHrTF4Cs5j4?s5X.=s5F"9rnmb4s5!_1
s4dS-s4RG)s4@;%s4./!s3q"rs3^knrm1Vis3:Sfs3(Gbs2k5\rQ"iUr5AZSrP\-Aqo&EOrPncUrlG,]
s2tAbrlkDes3CYjs3Uens3gqrs4%)!s472$s4IA)s4[M-s4mY1s5*e5s5<q9s5O(=rT+"?s5s@EroaaS
l0@R"lg3s'm-O*>mJcPRn,MnWnc&+ZoDeI^p&Facp\ssep&=ReoCMPEo()eMs7$'WrpKgRs6TdOrp'OJ
r941Ds5s@Cs5a4?s5O(;s5<q7rSIP0s4mY/s4[M+s4IA's475#s4%(ts3gqps3Uels3CVgs31Mds2t;^
s2b/ZrPncSr5ANNm_\k=r5AQQr5S`Vs2b/\rlY8as31Mfs3CYjs3Uens3gqrs4%%us475%s4IA)s4[M-
s4mY1s5*e5s54:DiSrkWioB([jQ5M&k5XWCkl0iHlMp2Lm/QJQmf2bTnGi%Yo)A7\o`+U`pAOjfq>U0h
p]'sep&=U`oDeC\nc/+Yn,D_WmHs9-rp9[Ns6BXKs60IFs5s@Cs5a4?s5O(;ro!h6s5*e3s4mY0rnIJ,
s4RG)s4@8$s4./!s3ptqs3^kns3L\is3:PerQG,]qoSTRqT&?OqT8ZXrQG5brltJgs3L\ks3^kps3pts
#h@JVf%8O+f\-;Xs4[M-rS7D.s5*e5s5<q9s5O%<s5a4As5s@Es60LIrp'OLs6TaP%.<QPn*oi:naQ)=
o()eOs7H?as7ZHds7lWirVHKfs7cNds7QEas7?6\s7--YrpTmTs6]gPs6K^MrosIHs6'CD!p8V+rT+"=
ro3t:s5<q7s5*e3s4mY/s4[M+rn.8&s475#s4%(ts3gnos3Uels3CYhrlkDcs2t>_rQ+oWqo8BLqS`-I
qSrHRrQ#&^aiXV+rlb>cs3:Shrm1Vks3^kps3q"trmh&"s4@;'s4RG+s4dS/rn[V2s53k7s5F";s5X(=
s5j:Cs6'CFs69IHs6K^Os6]gRs6p!Wrpg$Zs7?9_rq6<bs7cKerUp3_rpp<ao'u;@nc&"XmfMtGmf)VR
m/QDNlMp,Hkl9iGk5XQCjT"9?irA!;i;VX6hYl:1h#H./gAfk+f`0S&f)O;#eGn"tdf7_pd/MAkcMu/h
bl>lcb5KH]aSj0W`r!aL`;7CO`;.@J`VdaSa8a6YaoBN`bQ#fcc2Z)hci;AldJqYoe,Rqtec45#fDjM'
g&Ke*g]-(/h>c@3huDX5iW%p;j8\3?jo4EBkPXQDl2U&Kli-8NmJlVRn,MnWnc/1ZoDeI_p&Facp&+[c
q>^6ip]'sdp&F[aoD\=\nc/+Xn,MhUmJQ>Nli-2Ll2TuIkPs]Djo=EAj8\-=iVqd8huDR5h>H(.g]-",
g&K_)fDaA$ec4.ue,RkqdJqSmci25hc2PoebPfWZb4!IIb5BH^bl5lecMl/hd/VMmdf7ereGe"uf)OA$
f`0Y)gA]k*h#H40hZ)L5i;_d9ir8!<jT"?Ak5XWDkl9oIlMp2Lm/QJQmf)\RnG_tXo)J=\o`+UapAXgd
q#C0fqY^-fp]'sep&F[`oDeC]nc&%Xn,MhTmJlPQli-2Ll2TuHkPaQCjo+9?j8S'<iW%j9huDR5h>c:0
g]-"-g&K_)fDaA$ec4/!e,IeqdJqSmci;;ic2Z#ebPoZ`ao'6Ta7%%Ca8F$XaoBN_bPo`cc2Q#gci;Ak
dJqYpe,Iksec45#fDaG&g&Ke+g]-(/h>c@2hZ2R=i8NYSioB(tjSn6Nk2tjikih9qlKRQulKdd8m/QJQ
mf)\TnGi%Xo)J=]o`"O`pAambq#'gaoF1?_o()>@nF?&<nF,iFmf2\Sm/H>NlMp,Hkl9iFk5XQCjT"9?
irA!;i;VU:hVR)Eh#?+/g]-",g&K_)fDjG%ec+(ue,RkrdJhMmci;;ic2Z#ebQ#`^ao9BZa8![C`V@IN
a8X0Xao9H_bPo`cc2Z)gcNMVAdF$DBdf7ereGn(uf)OA%f`0Y)gAfq-h#?.0hZ)L3i;_d9ir8!<jT"?A
k5XWBkl9oHlMp2Mm/HDPmf2bTnGi%Yo)A7\o_S7WqZ$Bkq#:$fpAagbo`+O^o)J7[nG_kZmdBK0lilbB
lg3s'rp'OJs60IFs5s@Cs5a1>s5O(;s5<n6s5*e3r7q;+s4[M+rn.8&rmq)!s4%%srmLenrm:YjrQb>c
r64NNqoo#`rQbDgrm:YlrmLeprm^turmq,$rn.8(rn@D,r7q>.rnd\4s5<n8s5O(=s5a1@s5s@Es60IH
s6BXMrp9[Ps6fgRrp]sXs760\s7H?arq?Bds7lThqtg0as7cQerq6<`s7?6\s7-*Xs6p!UrpBaPs6K[L
s69RIroa7Bs5j1>s5X.=s5F"9rnmb4s5!_1rnIJ,s4RD(s4@;%rmh%urmUnqrmC_lrm1Shs3:MdrQG/^
r5ncUoZ6pOrQ>)^rlkAdrm(Mhs3UbmrmLhqrm^tus472$s4IA)rn@D,s4mV0s5*e5s5<q9ro3t<rT+"?
s5s=D"6et5kl0iHlMp2Lm/QJPmf2bUnG_tXo)J=\o`+UapAXg`q"j[`o`+O^ncSFPnF?MIs6osTs6]jQ
rp0ULs69IFs6'CDs5j:As5X+<s5F"9s53k5s5!\0rS.A+rn7>(s4@8$s4./!rmUnqrmCbmrm1ShrltGd
s3(A`q8rQUm)T"Eq8rWYrlb;brltJgrm1Sjs3^hos3q"trmh&"s4@8&s4RG+rnA.BgtgfChV[5Khr!AM
iSieUj5]4]roF4Dk2ua-r941Frp'OLrp9[Ps6fmTs7$'Yrpg9boCV\Jo^r%Rq"k$ds7lTfs7ZHbs7H?_
rpp*Zrp]sVrpC'ZmHj3*lg3s'rp'OJs60IFs5s@CroF+>s5O%:s5<n6s5*b2rnRP/s4dP,rn7>(rn%/#
rmgtsrmUhorR(PiqTnZVqTo)dr6bMlrR:bqrmh#!rn%/%s4RD*rnIA+s5!\2s53h6s5Et:s5X.?roO1B
s6'CFs69RKrp0UNrpBaRr9s[Trpg$Zs7?6^s7QBbs7cQgrqZBdq"Xm`s7ZHbs7H<^s763[rp]sVrpKgR
rp9[Ns6BUJs60IFrT41CjlHC$s5X.=ro*n8s53h4s5!_1rnIJ,rn7>(rn%/#s4.+urmUkprmC\krQkGf
r6>)^o#pjQr6>2crQkJirmC_nrmUkrrmh&"rn%/%s4RG+rnIJ.rn[V2s53h6s5F";ro<t<s5j7B#j:C7
kiq<pl0834s6K^OrpBaRrpTmVs7-*Zs7?6^s7QEcrqH6`q"=[Zs7?6\#k@HSnF?#;n*g8Ds6]gPs6K[L
s69IFs6'CDs5j:As5X+<s5F"9s53h4s5!_1rn@P/gY1B\g&K_(fDjG$ec+(ue,IepdJhMlci)/fc2Gla
bPKBPana'ZbPfW_bl,fccMl/hd/MGldf._qeGe"tf)OA%f`'S(gA]k,h#H40h?2Zlhr"Fks5F";s5X+>
s5j:Croa4Cs69RKrp0UNrpBaRs6osVs7-*Z#4qHYo_%kKq=XIXrqZThs7cNds7QB`s7?6\s7-*Xs6osT
s6]gPr9OCJs69OHs6'CDs5j7@s5X+<s5Et8rnmb4rn[J,rnIG+rn7;'rR_&"rRLhqqpPPnp!Wieo[<Wc
r7(\qrRUu"rRh,&rn@A+qqV5-rnd\4ro!e7s5O%<s5a1@s5s@ErojCHrp'OLrp9[PrpK^Qs7$$X!qPpR
s7?9_rq6<brqHHfs7uBbpA"X]s7ZKcrq-6^rpp*Zrp]sVrpKgRrp9[Nrp'OJrojCFr9"%@r8dn<ro3t:
ro!h6rnd\2rnRP.rn@A)rn.5%!7q2$rmgtsrR:_nr6bDgkKj%Pr6bJkrR:bqrmh#!rR_)%rn7;)rnIJ.
rn[V2rnmb6ro*n:ro<t<roF4Dk2ua-r94.Es6BULs6TaPs6fmTs7$$Xs760\s7H<`s7ZKepA"@Srq-6^
s760Zr:'aTrpKgRrp9[Nrp'OJr94.Cs5s@CroF+>s5O%:s5<n6!oDeis5!_1rn@J-g]#q,g&BY'fDaA#
ec+(te,@_ndJ_Gichl#Nc25faci)5hdJhSne,Ikqec45"fDaG%f`Km]g]-%.h#?+6hVR/HhV[5ii;_d9
ir8!<jT"?@k5XWBkl0iHlMg,Lm/HDPmf)\TnG_tXo)A7Zo_.tLqZ$Bjq#C*fpAagbo`+O^o)J7ZnG_nV
mf2YXmHj3*lg4W:s6BUJs60IFroX7BroF+>ro3q9ro!e5rndY1qqV/)rS%5'r7Lr!q:=f\qUYPqrRh,&
!87>)rS.2(rn[S1s53h6ro*k9ro=%>roO1Broa:Es69OJs6K[Nrp9pXmdKW4n*g8Frpg$Zrq$0^rq6<b
rqHHfrqZ3_oD&@[rq?Bbrq-6^rpp*Zrp]sVrpKdQs6TaNs6BUJrojCFr9""?r8dn<ro3t:ro!e5rndY1
rnRM-rn@A)rRh)#rRUnsqpbGjo@!Wdps],ir71bsrR_&$rn78(rnIG-rn[V2rnm_5s5Et:ro<q;s5j7B
s6'=DrosFIs6K[Ns6]gRrpTmVrpg$Zrq$0^rq6<brqH?cq=sRSs7H<^s760Z!V#XYnGhtVmf2\Rm/H>N
lMg&Gkl0cFk5OKBjSn3>ir7p:i;VX6hYu@1h##k*gA]e)f`'M$f)=.teGRbqdeqPhdI>NXdJMAie,@ep
ec+/!fDXA$g&B_)g]-(.h>H./hu;R6iVqj:j8S->jo4EBkPOKCl2KuJli-5NmJlSRmf)\TnG_tXo)A7Y
o^qhGqYp<jq#:$fpAXaao`+O^o)J7ZnG_nUmf2\RliQM>m/H>NlMg&Ikl0cFk5OKAjSn3=ir7p8i;VX4
hYu@+h##k'g@s:kf_4"qgAK_#h#6(.hYl@2i;V^7ir8!;jSn9?k5OQDkl0iGlMg,Lm/HDOmKE"ImdKWD
nG_tXo)A7[o`+U`pAamdq#C0ZqXF:Zp]'sdp&F[`oD\=\nc&%Xn,DbSmJcJPli-2Kl2KoHkPjWCk5XQ?
jSn3>ir7p9i;MR4hYu@0h#6"+gAT_%f_O.\f)""qf_sM$gATe*h#6(.h>lI5hu;R5iVqj9j8A!;jo=KB
kPOKCl2KuIli-8NmJcPQn,MnVnc&+ZoD\C^p&=[bp[ItIp&=U`oD\:`naZ,=nc&%Xn,DbTmJcJOli-2L
l20]DkPs]Djo4?@j8S';iVqd8hu;L3h>Q+1gYCT`g\ok)g&9S%fDF.pe`G<Wec+/!f)=4uf_sM&gATe*
h#?./h?)TkhYuF3i;_d8ir8!<jSn9?k5OQAkl0iGlMp2Lm/HDPmf)\SnGi%Xo)J=Zo^MPIqY0jcq>^6h
p\smdp&=U_oDeC\nc&%Wn,DbSm0)eBmHj3=li-2Kl2KoGkPaQBjo4?>j8S':iVh^4hu)@/h<`q[h##q*
hYl@1i;MX5ir8!:jSn9?k5OQCkl0iGlMg,Km/HDOmelPQnG_tWo)A7\o`"O_pAamdq#:*fqXOFKq#:$f
pAXaao`+O^o)A1ZnG_nUmf)VQm/H>MlMp,Jkl0cBk5OK>jSn3<ir7p8i;MR3hYc10h#6%*g\0@ig%X4s
g\fk*h>Q4/hu2L3iVqj9j87p:jo4EAkPjZHl07F2l2KuIli-8NmJcPRmf;hUnG_tXo)A7[o`+U`pAXgR
q!@\Qo`+O^nc\LQo'u8LnG_nVmf)VQm/H>MlMg&Gkl0cEk5OKAjSn3=ir7m:i;_a6hu;L2h>c:1h>Q.,
g\fe&g%O(efD!qog&0S&g\oq+h>Q40hZ2O4hu;R5iVqj9j8S*>jo=HAk5OQ@kl0iGlMp2Lm/HDOmf)\T
nG_tWo)J=\oE+^Xo^2>8qYp<iq#:$fpAXaao`"I]o)A1YnG_nUmecDNm/?8LlMg&Hkl0cDk5FE?jSe-:
iqq^3i:l-ohY5q(i;;L3ir%j8jSe3>k5FKBkl'cFlMg,Km/?>Nmf)YVnF5oGnG_tWo)J=\o`"O_pAXgd
q#:*QqWR_Rp]'pepAXabo`"I]o)A1YnG_nUmf)VQm/H>MlMg&Hkl0`Hk2tk+k5FE<jSe-;ir%d5i;;F-
hVm;ehYQ.-i;MX4ir.p6jSn9?k5FKBkl0fJlKRR3lMg,Km/HDOmf)\SnGi%Xo)A7[o`"O`pAXgMpuqDM
o`"I[o)A1YnG_nUmf)VQm/H>MlMg&Fkl']Dk5OKAjSe-<ir.j7i;MR2h>lC1hYZ.)h#H-hg\T_%h>H..
hu;R6hu2L4iVhd8j8S-<jo4EAkPFEAl2KuIli-8MmJcPRn,DhUnc&+Yo)eRVp#br-qYp<iq#:$epAXaa
o`"I]o)A1YnGVhQmeuPOm/H>LlM]uGkksWDk5XT@jnn-7j7D:*iUZ"(j87p8jo"9>kPaWCl2BoGli-8L
mJcPPn,DeXnaZ,Jnbr%XoD\C]p&Fabp\sseq;_>3q#:$epAXaao`"I]o)A1YnG_nUmeuPPm/H>Ml2^,J
l2KoHkPscEkPaQAjnIj5j8.d0iU#LriVMR2j7q^5jo4E@kPaWCl2KrJli-2Kli$2LmJcPQn,;bTnc&+Y
oDeI^p&=[apZ)&/p&=U_o)eLSoD\=[nGr(YnG_nUmf)VQm/?8LlMg&Dkl0cDk5FE?jSe-:ir%d4i;DL4
i:l-qhY,k'i;MX7i;DR4ir%j9jSe3=k5FK>kl0iFlMg,Km/HDNmf)\SnG_tXo)A7[o`"O`p>tu8qXF@\
q>U0gp\smcp&4O^oD\=Znc&%Rn,;\QmJZDLlhp&Gl20]@kP43+jnIm2k5+9<kks]ClM^&Im/68MmeuVQ
nGVkYo'u8Lo)81Zo`"O_pAXgcq#:*NqYC!Dq#:$epAXaao`"I\o)A1YnGVhTmeuPOm/?8KlM]rIkl'cD
kksWAk5+3<jO*&cjnn3<kPXQBl2BoCli$2KmJZJPn,DhTnc&+YoD\C]p&=[apAk!FptbWBoE+XUo`"I]
o)A1XnG_nUmeuPPm/?8KlM]uCkl'ZEkPXK?jo"39j7qX*iUc(+iV;F0j87p8jo"9>kP49?l2BoGli$2M
m/ZPQmeuVRnG_tWo)A7[o`"O]p>YbrqYp<iq#:$dpAXa`o`+L_oDS7Ync&"XnbhnTn,2VOmJH8HlhTi=
l0RX,l1jQ@lhg&HmJcPRmelPPnGVnUo)J=]o)81Zo_nI^pAXgbq#:*@qZ$<Gq#'pdp\smcp&4O^oDS7Z
nbqtUn,;\PmJZDLli-2LlhfuDl1sQ9kNq@(kPscBkkjWAlMTuGli?GOm/?>MmeuVQnGVnVo)81Zo`"O^
pAXg<q"FC>o`FdYp&=U_oDS7ZnbqtVn,;\QmJZDLli$,Hl1X?;kP=95jn\!0jRqX0k54?8kks]ClM^&I
m/?>MmeuVRnGVnVo)A7Zo`"O[p?qVDp!<L5q>U0fp\jgbp&+I\oDS4[nbr%VnbhnQn+uGPmJ-)#m.]oD
mecJNnGDbSo)/+YoDnL]o_nI^pAOaaq#:*cqUYN@pXK!:p\smbp&4O^oDJ1XnbqtVn,MkSmelJDm.]ht
lM'W@m/-2Lmf2\OmeuVPnGVnWo)J:ZoD\C\p&4U`pWrW^p&Faap&=U^oDS7ZnbhnTn,;\PmJQ>Klh]oC
l,2`]l29fHlMTuFm/?>LmeuVQnGVnVo)81Yo`"OVp=o9#qW.MOq>L*ep\jg`p&+I]oDeI[oDA+Snb;P.
n,;_LnG2VOo)&%Vo_e@^pAO[_pAF[aq#1$.qYKs2q#0scpAO[_o_e=Yo)/%TnGD\Mmf2\MmeZ>.mJ$&F
mf;eQn,)VPnbhtUoDS=Zp&=[`pYko0q#9p5p%e=[p&4O]oDS7XnbhnSn,)POmJlSLm.]hulM'W?m/-2I
melPOnGMhTo)/+Yo_nI\p@\.2ot1)"q#L6gq#'map@S%Ro_%h1o(M\No_S7XpAO^cpAXgdp\agaq7QRu
pYGW/q#0sbpAFU]o_\7Vo(hhKnG_n5nGMhRnGi%UnbVhRoDJ7Yp&+O]pUp;!o^hb3p%%hTp&+I[oDJ1V
nbVbNn+H,5mIT`=meQ>JnGDbRo)/+Wo_eCIp=o99ore/gq>9sWp\FO]p>,E8pA"CYq#C0gq"sm7qVM)A
pU^.sp\smcpA4IWo_%h3o(M\Mo_S7XpA=UNpr<+.p\FI,p&"IOpA=O[o_S1So(DP/nFlDIo(qtTo_\=>
p<WEdqSE%'q#L9`q;V2Eq>C&OqY'[^pT"#_p[n1Op$_SFpA"B_q"FL\p\4=(p"K-7o`4[Wo]#K6o_A+,
p@e12o`4WdqUt_sqpbJSqX=14pk&:>q"a[Vo^MP.or.T!p<*(-oRH~>

%%EndBinary
grestore
np
188.499 287.033 mo
183.256 287.033 178.991 289.918 178.991 293.473 cv
178.991 307.973 li
178.991 337.498 li
178.991 346.396 189.637 353.602 202.768 353.602 cv
222.83 353.602 li
222.822 287.033 li
188.499 287.033 li
cp
.0509804 .0784314 .180392 rgb
f
257.146 287.033 mo
222.83 287.033 li
222.83 353.602 li
242.887 353.602 li
256.01 353.602 266.654 346.396 266.654 337.498 cv
266.654 307.973 li
266.654 293.473 li
266.654 289.918 262.404 287.033 257.146 287.033 cv
cp
f
188.499 287.033 mo
183.256 287.033 178.991 289.918 178.991 293.473 cv
178.991 307.973 li
178.991 337.498 li
178.991 346.396 189.637 353.602 202.768 353.602 cv
222.83 353.602 li
222.822 287.033 li
188.499 287.033 li
cp
.0901961 .121569 .211765 rgb
f
222.83 300.123 mo
222.83 310.07 li
266.654 320.735 li
266.654 310.391 li
265.592 310.391 264.512 310.265 263.436 310.004 cv
222.83 300.123 li
cp
f
222.83 323.762 mo
222.83 333.711 li
262.16 343.281 li
263.031 343.493 263.826 343.786 264.539 344.137 cv
265.895 342.113 266.654 339.866 266.654 337.498 cv
266.654 334.027 li
265.592 334.027 264.512 333.904 263.436 333.641 cv
222.83 323.762 li
cp
f
222.83 347.394 mo
222.83 353.602 li
242.887 353.602 li
244.363 353.602 245.809 353.505 247.213 353.33 cv
222.83 347.394 li
cp
f
266.654 293.473 mo
266.654 289.918 262.404 287.033 257.146 287.033 cv
225.3 287.033 li
266.654 297.103 li
266.654 293.473 li
cp
f
186.311 287.212 mo
186.558 287.172 186.809 287.141 187.063 287.115 cv
186.809 287.141 186.559 287.172 186.311 287.212 cv
cp
.14902 .188235 .282353 rgb
f
182.209 300.186 mo
222.825 310.069 li
222.824 300.121 li
180.645 289.857 li
181.063 289.441 181.553 289.063 182.097 288.725 cv
180.194 289.902 178.991 291.59 178.991 293.473 cv
178.991 299.802 li
180.06 299.803 181.146 299.921 182.209 300.186 cv
cp
f
187.394 287.08 mo
187.757 287.052 188.125 287.033 188.499 287.033 cv
188.125 287.033 187.757 287.052 187.394 287.08 cv
cp
f
222.81 347.389 mo
178.991 336.725 li
178.991 337.498 li
178.991 346.396 189.637 353.602 202.768 353.602 cv
222.83 353.602 li
222.829 347.394 li
222.81 347.389 li
cp
f
182.209 323.822 mo
222.828 333.71 li
222.826 323.761 li
222.81 323.756 li
178.991 313.084 li
178.991 323.443 li
180.06 323.444 181.146 323.562 182.209 323.822 cv
cp
f
185.22 287.436 mo
185.464 287.374 185.712 287.32 185.963 287.272 cv
185.711 287.32 185.464 287.374 185.22 287.436 cv
cp
f
182.182 288.672 mo
182.435 288.519 182.699 288.375 182.974 288.24 cv
182.698 288.375 182.435 288.52 182.182 288.672 cv
cp
f
183.047 288.203 mo
183.637 287.923 184.277 287.688 184.954 287.502 cv
184.276 287.688 183.638 287.923 183.047 288.203 cv
cp
f
181.187 289.382 mo
181.363 289.234 li
181.187 289.382 li
cp
f
181.363 289.234 mo
181.595 289.057 181.839 288.885 182.097 288.725 cv
181.837 288.885 181.595 289.057 181.363 289.234 cv
cp
f
180.71 289.801 mo
180.86 289.655 181.021 289.518 181.187 289.382 cv
181.021 289.518 180.86 289.655 180.71 289.801 cv
cp
f
180.645 289.857 mo
180.653 289.859 li
180.71 289.801 li
180.645 289.857 li
cp
f
222.825 310.069 mo
222.824 300.121 li
180.653 289.859 li
179.611 290.89 178.991 292.129 178.991 293.473 cv
178.991 299.802 li
180.06 299.803 181.146 299.921 182.209 300.186 cv
222.825 310.069 li
cp
f
222.81 347.389 mo
178.991 336.725 li
178.991 337.498 li
178.991 346.396 189.637 353.602 202.768 353.602 cv
222.83 353.602 li
222.829 347.394 li
222.81 347.389 li
cp
f
222.828 333.71 mo
222.826 323.761 li
222.81 323.756 li
178.991 313.084 li
178.991 323.443 li
180.06 323.444 181.146 323.562 182.209 323.822 cv
222.828 333.71 li
cp
f
183.047 288.203 mo
183.637 287.923 184.277 287.688 184.954 287.502 cv
184.276 287.688 183.638 287.923 183.047 288.203 cv
cp
f
222.83 365.613 mo
217.197 365.613 li
207.396 365.613 199.466 360.235 199.466 353.605 cv
222.822 353.605 li
222.83 365.613 li
cp
.321569 .352941 .431373 rgb
f
222.822 353.605 mo
246.203 353.605 li
246.203 360.235 238.264 365.613 228.471 365.613 cv
222.83 365.613 li
222.822 353.605 li
cp
.14902 .188235 .282353 rgb
f
172.439 66.1304 mo
171.053 66.1304 169.929 67.2539 169.929 68.6406 cv
169.929 69.3613 170.233 70.0112 170.72 70.4688 cv
172.439 70.4565 li
174.158 70.4697 li
174.646 70.0117 174.949 69.3613 174.949 68.6406 cv
174.949 67.2539 173.826 66.1304 172.439 66.1304 cv
cp
.996078 .792157 .345098 rgb
f
174.023 70.4565 mo
172.439 70.4565 li
170.854 70.4565 li
170.481 70.4565 170.179 70.7588 170.179 71.1318 cv
170.179 71.5049 170.481 71.8076 170.854 71.8076 cv
172.439 71.8076 li
174.023 71.8076 li
174.397 71.8076 174.7 71.5049 174.7 71.1318 cv
174.7 70.7588 174.397 70.4565 174.023 70.4565 cv
cp
f
174.158 70.4697 mo
174.646 70.0117 174.949 69.3613 174.949 68.6406 cv
174.949 67.2539 173.826 66.1304 172.439 66.1304 cv
172.439 70.4565 li
174.158 70.4697 li
cp
.996078 .756863 .215686 rgb
f
172.439 71.8076 mo
170.854 71.8076 li
170.481 71.8076 170.179 71.5049 170.179 71.1318 cv
170.179 70.7588 170.481 70.4565 170.854 70.4565 cv
172.439 70.4565 li
172.439 71.8076 li
cp
.996078 .835294 .482353 rgb
f
179.282 85.5005 mo
179.233 85.1816 179.184 85.0835 178.791 85.0835 cv
178.398 85.0835 175.682 85.0835 172.439 85.0835 cv
169.196 85.0835 166.48 85.0835 166.087 85.0835 cv
165.694 85.0835 165.646 85.1816 165.596 85.5005 cv
165.547 85.8203 165.448 86.4102 165.424 86.7046 cv
165.399 86.9995 165.572 87.0488 165.892 87.0488 cv
166.21 87.0488 172.439 87.0488 172.439 87.0488 cv
172.439 87.0488 178.668 87.0488 178.988 87.0488 cv
179.307 87.0488 179.479 86.9995 179.455 86.7046 cv
179.431 86.4102 179.332 85.8203 179.282 85.5005 cv
cp
f
177.908 85.0762 mo
177.904 85.0762 li
177.908 85.0762 li
cp
.996078 .792157 .345098 rgb
f
175.156 81.2427 mo
173.485 79.5225 173.51 74.6333 173.46 71.8076 cv
172.439 71.8076 li
171.418 71.8076 li
171.369 74.6333 171.394 79.5225 169.723 81.2427 cv
168.052 82.9629 167.266 81.9312 167.118 83.6016 cv
167.012 84.8071 166.983 85.0391 166.974 85.0762 cv
172.439 85.0835 li
177.904 85.0762 li
177.896 85.0391 177.867 84.8071 177.76 83.6016 cv
177.613 81.9312 176.826 82.9629 175.156 81.2427 cv
cp
f
166.974 85.0762 mo
166.971 85.0762 li
166.974 85.0762 li
cp
f
172.439 85.0835 mo
175.682 85.0835 178.398 85.0835 178.791 85.0835 cv
179.184 85.0835 179.233 85.1816 179.282 85.5005 cv
179.332 85.8203 179.431 86.4102 179.455 86.7046 cv
179.479 86.9995 179.307 87.0488 178.988 87.0488 cv
178.668 87.0488 172.439 87.0488 172.439 87.0488 cv
172.439 85.0835 li
cp
f
172.439 85.0835 mo
172.439 71.8076 li
173.46 71.8076 li
173.51 74.6333 173.485 79.5225 175.156 81.2427 cv
176.826 82.9629 177.613 81.9312 177.76 83.6016 cv
177.908 85.2725 177.908 85.0762 177.908 85.0762 cv
172.439 85.0835 li
cp
.996078 .756863 .215686 rgb
f
167.637 68.3574 mo
166.384 68.3579 li
165.131 68.3574 li
165.021 68.5596 164.958 68.7905 164.958 69.0361 cv
164.958 69.3384 165.052 69.6187 165.212 69.8491 cv
166.384 69.8491 li
167.565 69.833 li
167.719 69.6055 167.809 69.3315 167.809 69.0361 cv
167.809 68.7905 167.746 68.5596 167.637 68.3574 cv
cp
0 .576471 .560784 rgb
f
166.384 55.7222 mo
166.384 55.7222 165.076 60.2397 165.076 60.9614 cv
166.384 60.9614 li
167.692 60.9614 li
167.692 60.2397 166.384 55.7222 166.384 55.7222 cv
cp
.639216 .87451 .878431 rgb
f
166.384 68.3579 mo
166.384 69.8491 li
165.212 69.8491 li
165.052 69.6187 164.958 69.3384 164.958 69.0361 cv
164.958 68.7905 165.021 68.5596 165.131 68.3574 cv
166.384 68.3579 li
cp
.0352941 .666667 .678431 rgb
f
167.692 60.9614 mo
167.692 60.2397 166.384 55.7222 166.384 55.7222 cv
166.384 60.9614 li
167.692 60.9614 li
cp
.435294 .803922 .811765 rgb
f
169.062 60.9614 mo
168.718 60.9614 168.644 60.9614 166.384 60.9614 cv
164.124 60.9614 164.05 60.9614 163.706 60.9614 cv
163.361 60.9614 163.14 61.1338 163.239 61.7974 cv
163.337 62.4604 163.459 63.5908 163.534 63.9839 cv
163.607 64.3774 164 64.3032 164.345 64.3032 cv
164.688 64.3032 166.384 64.3032 166.384 64.3032 cv
166.384 64.3032 168.079 64.3032 168.424 64.3032 cv
168.768 64.3032 169.16 64.3774 169.234 63.9839 cv
169.309 63.5908 169.43 62.4604 169.529 61.7974 cv
169.627 61.1338 169.405 60.9614 169.062 60.9614 cv
cp
.286275 .752941 .756863 rgb
f
166.384 60.9614 mo
164.124 60.9614 164.05 60.9614 163.706 60.9614 cv
163.361 60.9614 163.14 61.1338 163.239 61.7974 cv
163.337 62.4604 163.459 63.5908 163.534 63.9839 cv
163.607 64.3774 164 64.3032 164.345 64.3032 cv
164.688 64.3032 166.384 64.3032 166.384 64.3032 cv
166.384 60.9614 li
cp
.435294 .803922 .811765 rgb
f
171.961 82.9453 mo
171.913 81.9629 171.593 82.2573 170.242 81.9868 cv
168.89 81.7173 167.17 79.2598 167.17 76.8271 cv
167.17 74.3945 168.521 70.8809 168.644 70.439 cv
168.768 69.9961 168.35 69.8491 168.079 69.8491 cv
167.809 69.8491 167.612 69.8491 166.384 69.8491 cv
165.155 69.8491 164.958 69.8491 164.688 69.8491 cv
164.418 69.8491 164 69.9961 164.124 70.439 cv
164.246 70.8809 165.598 74.3945 165.598 76.8271 cv
165.598 79.2598 163.877 81.7173 162.526 81.9868 cv
161.175 82.2573 160.855 81.9629 160.806 82.9453 cv
160.785 83.3623 160.734 84.2261 160.68 85.0835 cv
166.384 85.0835 li
172.087 85.0835 li
172.034 84.2261 171.982 83.3623 171.961 82.9453 cv
cp
.286275 .752941 .756863 rgb
f
168.276 65.0166 mo
167.932 65.0166 168.644 65.0166 166.384 65.0166 cv
164.124 65.0166 164.835 65.0166 164.492 65.0166 cv
164.148 65.0166 163.926 65.188 164.025 65.8511 cv
164.124 66.5146 164.246 67.6445 164.32 68.0381 cv
164.393 68.4312 164.786 68.3579 165.131 68.3579 cv
165.475 68.3579 166.384 68.3579 166.384 68.3579 cv
166.384 68.3579 167.293 68.3579 167.637 68.3579 cv
167.981 68.3579 168.375 68.4312 168.447 68.0381 cv
168.521 67.6445 168.644 66.5146 168.743 65.8511 cv
168.841 65.188 168.62 65.0166 168.276 65.0166 cv
cp
f
166.384 65.0166 mo
164.124 65.0166 164.835 65.0166 164.492 65.0166 cv
164.148 65.0166 163.926 65.188 164.025 65.8511 cv
164.124 66.5146 164.246 67.6445 164.32 68.0381 cv
164.393 68.4312 164.786 68.3579 165.131 68.3579 cv
165.475 68.3579 166.384 68.3579 166.384 68.3579 cv
166.384 65.0166 li
cp
.435294 .803922 .811765 rgb
f
166.384 69.8491 mo
165.155 69.8491 164.958 69.8491 164.688 69.8491 cv
164.418 69.8491 164 69.9961 164.124 70.439 cv
164.246 70.8809 165.598 74.3945 165.598 76.8271 cv
165.598 79.2598 163.877 81.7173 162.526 81.9868 cv
161.175 82.2573 160.855 81.9629 160.806 82.9453 cv
160.785 83.3623 160.734 84.2261 160.68 85.0835 cv
166.384 85.0835 li
166.384 69.8491 li
cp
f
168.424 64.3032 mo
166.384 64.3032 li
164.345 64.3032 li
164.345 64.3032 164.665 64.5981 164.492 65.0166 cv
166.384 65.0166 li
168.276 65.0166 li
168.104 64.5981 168.424 64.3032 168.424 64.3032 cv
cp
0 .576471 .560784 rgb
f
173.755 85.5005 mo
173.706 85.1816 173.657 85.0835 173.264 85.0835 cv
172.871 85.0835 169.627 85.0835 166.384 85.0835 cv
163.14 85.0835 159.897 85.0835 159.504 85.0835 cv
159.111 85.0835 159.062 85.1816 159.013 85.5005 cv
158.963 85.8203 158.865 86.4102 158.841 86.7046 cv
158.816 86.9995 158.988 87.0488 159.307 87.0488 cv
159.627 87.0488 166.384 87.0488 166.384 87.0488 cv
166.384 87.0488 173.141 87.0488 173.46 87.0488 cv
173.78 87.0488 173.952 86.9995 173.928 86.7046 cv
173.903 86.4102 173.804 85.8203 173.755 85.5005 cv
cp
.435294 .803922 .811765 rgb
f
166.384 64.3032 mo
166.384 65.0166 li
164.492 65.0166 li
164.665 64.5981 164.345 64.3032 164.345 64.3032 cv
166.384 64.3032 li
cp
.0352941 .666667 .678431 rgb
f
166.384 85.0835 mo
163.14 85.0835 159.897 85.0835 159.504 85.0835 cv
159.111 85.0835 159.062 85.1816 159.013 85.5005 cv
158.963 85.8203 158.865 86.4102 158.841 86.7046 cv
158.816 86.9995 158.988 87.0488 159.307 87.0488 cv
159.627 87.0488 166.384 87.0488 166.384 87.0488 cv
166.384 85.0835 li
cp
.639216 .87451 .878431 rgb
f
206.026 239.269 mo
204.507 239.269 203.275 240.499 203.275 242.02 cv
203.275 242.811 203.608 243.521 204.142 244.024 cv
206.026 244.011 li
207.911 244.025 li
208.445 243.523 208.778 242.811 208.778 242.02 cv
208.778 240.499 207.546 239.269 206.026 239.269 cv
cp
.996078 .792157 .345098 rgb
f
207.763 244.011 mo
206.026 244.011 li
204.289 244.011 li
203.879 244.011 203.547 244.343 203.547 244.752 cv
203.547 245.161 203.879 245.493 204.289 245.493 cv
206.026 245.493 li
207.763 245.493 li
208.173 245.493 208.505 245.161 208.505 244.752 cv
208.505 244.343 208.173 244.011 207.763 244.011 cv
cp
f
207.911 244.025 mo
208.445 243.523 208.778 242.811 208.778 242.02 cv
208.778 240.499 207.546 239.269 206.026 239.269 cv
206.026 244.011 li
207.911 244.025 li
cp
.996078 .756863 .215686 rgb
f
206.026 245.493 mo
204.289 245.493 li
203.879 245.493 203.547 245.161 203.547 244.752 cv
203.547 244.343 203.879 244.011 204.289 244.011 cv
206.026 244.011 li
206.026 245.493 li
cp
.996078 .835294 .482353 rgb
f
213.529 260.505 mo
213.475 260.155 213.421 260.047 212.991 260.047 cv
212.56 260.047 209.582 260.047 206.026 260.047 cv
202.47 260.047 199.493 260.047 199.062 260.047 cv
198.63 260.047 198.578 260.155 198.524 260.505 cv
198.47 260.855 198.362 261.502 198.335 261.825 cv
198.308 262.148 198.497 262.203 198.848 262.203 cv
199.196 262.203 206.026 262.203 206.026 262.203 cv
206.026 262.203 212.856 262.203 213.206 262.203 cv
213.556 262.203 213.745 262.148 213.717 261.825 cv
213.691 261.502 213.583 260.855 213.529 260.505 cv
cp
f
212.021 260.04 mo
212.018 260.04 li
212.021 260.04 li
cp
.996078 .792157 .345098 rgb
f
209.004 255.837 mo
207.172 253.951 207.2 248.591 207.146 245.493 cv
206.026 245.493 li
204.907 245.493 li
204.853 248.591 204.88 253.951 203.048 255.837 cv
201.216 257.723 200.354 256.592 200.192 258.424 cv
200.076 259.743 200.043 259.998 200.034 260.04 cv
206.026 260.047 li
212.018 260.04 li
212.009 259.998 211.977 259.743 211.859 258.424 cv
211.699 256.592 210.836 257.723 209.004 255.837 cv
cp
f
200.034 260.04 mo
200.031 260.04 li
200.034 260.04 li
cp
f
206.026 260.047 mo
209.582 260.047 212.56 260.047 212.991 260.047 cv
213.421 260.047 213.475 260.155 213.529 260.505 cv
213.583 260.855 213.691 261.502 213.717 261.825 cv
213.745 262.148 213.556 262.203 213.206 262.203 cv
212.856 262.203 206.026 262.203 206.026 262.203 cv
206.026 260.047 li
cp
f
206.026 260.047 mo
206.026 245.493 li
207.146 245.493 li
207.2 248.591 207.172 253.951 209.004 255.837 cv
210.836 257.723 211.699 256.592 211.859 258.424 cv
212.021 260.256 212.021 260.04 212.021 260.04 cv
206.026 260.047 li
cp
.996078 .756863 .215686 rgb
f
200.761 241.709 mo
199.387 241.71 li
198.013 241.709 li
197.893 241.932 197.825 242.184 197.825 242.454 cv
197.825 242.785 197.927 243.094 198.103 243.345 cv
199.387 243.345 li
200.683 243.327 li
200.852 243.078 200.95 242.776 200.95 242.454 cv
200.95 242.184 200.881 241.932 200.761 241.709 cv
cp
0 .576471 .560784 rgb
f
199.387 227.856 mo
199.387 227.856 197.953 232.81 197.953 233.601 cv
199.387 233.601 li
200.822 233.601 li
200.822 232.81 199.387 227.856 199.387 227.856 cv
cp
.639216 .87451 .878431 rgb
f
199.387 241.71 mo
199.387 243.345 li
198.103 243.345 li
197.927 243.094 197.825 242.785 197.825 242.454 cv
197.825 242.184 197.893 241.932 198.013 241.709 cv
199.387 241.71 li
cp
.0352941 .666667 .678431 rgb
f
200.822 233.601 mo
200.822 232.81 199.387 227.856 199.387 227.856 cv
199.387 233.601 li
200.822 233.601 li
cp
.435294 .803922 .811765 rgb
f
202.323 233.601 mo
201.946 233.601 201.866 233.601 199.387 233.601 cv
196.909 233.601 196.828 233.601 196.452 233.601 cv
196.073 233.601 195.831 233.79 195.939 234.518 cv
196.047 235.245 196.181 236.484 196.262 236.914 cv
196.343 237.346 196.774 237.265 197.151 237.265 cv
197.528 237.265 199.387 237.265 199.387 237.265 cv
199.387 237.265 201.246 237.265 201.624 237.265 cv
202 237.265 202.432 237.346 202.512 236.914 cv
202.594 236.484 202.728 235.245 202.835 234.518 cv
202.943 233.79 202.7 233.601 202.323 233.601 cv
cp
.286275 .752941 .756863 rgb
f
199.387 233.601 mo
196.909 233.601 196.828 233.601 196.452 233.601 cv
196.073 233.601 195.831 233.79 195.939 234.518 cv
196.047 235.245 196.181 236.484 196.262 236.914 cv
196.343 237.346 196.774 237.265 197.151 237.265 cv
197.528 237.265 199.387 237.265 199.387 237.265 cv
199.387 233.601 li
cp
.435294 .803922 .811765 rgb
f
205.502 257.704 mo
205.449 256.626 205.098 256.949 203.618 256.653 cv
202.135 256.356 200.249 253.663 200.249 250.996 cv
200.249 248.328 201.731 244.477 201.866 243.991 cv
202 243.506 201.543 243.345 201.246 243.345 cv
200.95 243.345 200.734 243.345 199.387 243.345 cv
198.04 243.345 197.825 243.345 197.528 243.345 cv
197.232 243.345 196.774 243.506 196.909 243.991 cv
197.043 244.477 198.525 248.328 198.525 250.996 cv
198.525 253.663 196.639 256.356 195.157 256.653 cv
193.676 256.949 193.326 256.626 193.272 257.704 cv
193.249 258.16 193.192 259.107 193.134 260.047 cv
199.387 260.047 li
205.641 260.047 li
205.582 259.107 205.525 258.16 205.502 257.704 cv
cp
.286275 .752941 .756863 rgb
f
201.462 238.046 mo
201.084 238.046 201.866 238.046 199.387 238.046 cv
196.909 238.046 197.689 238.046 197.313 238.046 cv
196.937 238.046 196.693 238.234 196.801 238.96 cv
196.909 239.689 197.043 240.929 197.125 241.358 cv
197.205 241.791 197.636 241.71 198.013 241.71 cv
198.391 241.71 199.387 241.71 199.387 241.71 cv
199.387 241.71 200.384 241.71 200.761 241.71 cv
201.138 241.71 201.57 241.791 201.649 241.358 cv
201.731 240.929 201.866 239.689 201.974 238.96 cv
202.081 238.234 201.839 238.046 201.462 238.046 cv
cp
f
199.387 238.046 mo
196.909 238.046 197.689 238.046 197.313 238.046 cv
196.937 238.046 196.693 238.234 196.801 238.96 cv
196.909 239.689 197.043 240.929 197.125 241.358 cv
197.205 241.791 197.636 241.71 198.013 241.71 cv
198.391 241.71 199.387 241.71 199.387 241.71 cv
199.387 238.046 li
cp
.435294 .803922 .811765 rgb
f
199.387 243.345 mo
198.04 243.345 197.825 243.345 197.528 243.345 cv
197.232 243.345 196.774 243.506 196.909 243.991 cv
197.043 244.477 198.525 248.328 198.525 250.996 cv
198.525 253.663 196.639 256.356 195.157 256.653 cv
193.676 256.949 193.326 256.626 193.272 257.704 cv
193.249 258.16 193.192 259.107 193.134 260.047 cv
199.387 260.047 li
199.387 243.345 li
cp
f
201.624 237.265 mo
199.387 237.265 li
197.151 237.265 li
197.151 237.265 197.502 237.588 197.313 238.046 cv
199.387 238.046 li
201.462 238.046 li
201.273 237.588 201.624 237.265 201.624 237.265 cv
cp
0 .576471 .560784 rgb
f
207.469 260.505 mo
207.415 260.155 207.361 260.047 206.93 260.047 cv
206.499 260.047 202.943 260.047 199.387 260.047 cv
195.831 260.047 192.275 260.047 191.844 260.047 cv
191.414 260.047 191.359 260.155 191.306 260.505 cv
191.252 260.855 191.144 261.502 191.117 261.825 cv
191.09 262.148 191.278 262.203 191.628 262.203 cv
191.979 262.203 199.387 262.203 199.387 262.203 cv
199.387 262.203 206.795 262.203 207.146 262.203 cv
207.496 262.203 207.685 262.148 207.658 261.825 cv
207.631 261.502 207.523 260.855 207.469 260.505 cv
cp
.435294 .803922 .811765 rgb
f
199.387 237.265 mo
199.387 238.046 li
197.313 238.046 li
197.502 237.588 197.151 237.265 197.151 237.265 cv
199.387 237.265 li
cp
.0352941 .666667 .678431 rgb
f
199.387 260.047 mo
195.831 260.047 192.275 260.047 191.844 260.047 cv
191.414 260.047 191.359 260.155 191.306 260.505 cv
191.252 260.855 191.144 261.502 191.117 261.825 cv
191.09 262.148 191.278 262.203 191.628 262.203 cv
191.979 262.203 199.387 262.203 199.387 262.203 cv
199.387 260.047 li
cp
.639216 .87451 .878431 rgb
f
276.988 137.828 mo
278.773 137.828 280.223 139.274 280.223 141.061 cv
280.223 141.989 279.83 142.826 279.201 143.415 cv
276.988 143.399 li
274.775 143.417 li
274.146 142.827 273.756 141.989 273.756 141.061 cv
273.756 139.274 275.203 137.828 276.988 137.828 cv
cp
.996078 .792157 .345098 rgb
f
274.947 143.399 mo
276.988 143.399 li
279.027 143.399 li
279.508 143.399 279.9 143.789 279.9 144.269 cv
279.9 144.75 279.508 145.14 279.027 145.14 cv
276.988 145.14 li
274.947 145.14 li
274.467 145.14 274.076 144.75 274.076 144.269 cv
274.076 143.789 274.467 143.399 274.947 143.399 cv
cp
f
274.775 143.417 mo
274.146 142.827 273.756 141.989 273.756 141.061 cv
273.756 139.274 275.203 137.828 276.988 137.828 cv
276.988 143.399 li
274.775 143.417 li
cp
.996078 .756863 .215686 rgb
f
276.988 145.14 mo
279.027 145.14 li
279.508 145.14 279.9 144.75 279.9 144.269 cv
279.9 143.789 279.508 143.399 279.027 143.399 cv
276.988 143.399 li
276.988 145.14 li
cp
.996078 .835294 .482353 rgb
f
268.174 162.774 mo
268.238 162.364 268.303 162.237 268.807 162.237 cv
269.314 162.237 272.811 162.237 276.988 162.237 cv
281.164 162.237 284.662 162.237 285.17 162.237 cv
285.678 162.237 285.738 162.364 285.803 162.774 cv
285.865 163.187 285.992 163.946 286.023 164.326 cv
286.055 164.706 285.836 164.769 285.42 164.769 cv
285.012 164.769 276.988 164.769 276.988 164.769 cv
276.988 164.769 268.967 164.769 268.555 164.769 cv
268.143 164.769 267.922 164.706 267.953 164.326 cv
267.986 163.946 268.113 163.187 268.174 162.774 cv
cp
f
269.945 162.228 mo
269.951 162.228 li
269.945 162.228 li
cp
.996078 .792157 .345098 rgb
f
273.49 157.292 mo
275.641 155.076 275.609 148.779 275.674 145.14 cv
276.988 145.14 li
278.303 145.14 li
278.367 148.779 278.336 155.076 280.486 157.292 cv
282.639 159.506 283.652 158.178 283.844 160.329 cv
283.979 161.882 284.016 162.181 284.027 162.228 cv
276.988 162.237 li
269.951 162.228 li
269.961 162.181 269.998 161.882 270.137 160.329 cv
270.324 158.178 271.338 159.506 273.49 157.292 cv
cp
f
284.027 162.228 mo
284.031 162.228 li
284.027 162.228 li
cp
f
276.988 162.237 mo
272.811 162.237 269.314 162.237 268.807 162.237 cv
268.303 162.237 268.238 162.364 268.174 162.774 cv
268.113 163.187 267.986 163.946 267.953 164.326 cv
267.922 164.706 268.143 164.769 268.555 164.769 cv
268.967 164.769 276.988 164.769 276.988 164.769 cv
276.988 162.237 li
cp
f
276.988 162.237 mo
276.988 145.14 li
275.674 145.14 li
275.609 148.779 275.641 155.076 273.49 157.292 cv
271.338 159.506 270.324 158.178 270.137 160.329 cv
269.945 162.481 269.945 162.228 269.945 162.228 cv
276.988 162.237 li
cp
.996078 .756863 .215686 rgb
f
283.174 140.695 mo
284.789 140.696 li
286.4 140.695 li
286.543 140.956 286.623 141.253 286.623 141.57 cv
286.623 141.959 286.5 142.32 286.295 142.618 cv
284.789 142.618 li
283.268 142.596 li
283.068 142.303 282.949 141.951 282.949 141.57 cv
282.949 141.253 283.033 140.956 283.174 140.695 cv
cp
0 .576471 .560784 rgb
f
284.789 124.423 mo
284.789 124.423 286.471 130.241 286.471 131.17 cv
284.789 131.17 li
283.104 131.17 li
283.104 130.241 284.789 124.423 284.789 124.423 cv
cp
.639216 .87451 .878431 rgb
f
284.789 140.696 mo
284.789 142.618 li
286.295 142.618 li
286.5 142.32 286.623 141.959 286.623 141.57 cv
286.623 141.253 286.543 140.956 286.4 140.695 cv
284.789 140.696 li
cp
.0352941 .666667 .678431 rgb
f
283.104 131.17 mo
283.104 130.241 284.789 124.423 284.789 124.423 cv
284.789 131.17 li
283.104 131.17 li
cp
.435294 .803922 .811765 rgb
f
281.34 131.17 mo
281.783 131.17 281.875 131.17 284.789 131.17 cv
287.699 131.17 287.793 131.17 288.234 131.17 cv
288.68 131.17 288.965 131.393 288.836 132.247 cv
288.713 133.101 288.555 134.557 288.459 135.063 cv
288.363 135.57 287.857 135.475 287.414 135.475 cv
286.971 135.475 284.789 135.475 284.789 135.475 cv
284.789 135.475 282.604 135.475 282.16 135.475 cv
281.717 135.475 281.211 135.57 281.117 135.063 cv
281.02 134.557 280.861 133.101 280.738 132.247 cv
280.609 131.393 280.895 131.17 281.34 131.17 cv
cp
.286275 .752941 .756863 rgb
f
284.789 131.17 mo
287.699 131.17 287.793 131.17 288.234 131.17 cv
288.68 131.17 288.965 131.393 288.836 132.247 cv
288.713 133.101 288.555 134.557 288.459 135.063 cv
288.363 135.57 287.857 135.475 287.414 135.475 cv
286.971 135.475 284.789 135.475 284.789 135.475 cv
284.789 131.17 li
cp
.435294 .803922 .811765 rgb
f
277.604 159.484 mo
277.668 158.219 278.078 158.598 279.818 158.25 cv
281.559 157.902 283.775 154.737 283.775 151.604 cv
283.775 148.471 282.035 143.946 281.875 143.376 cv
281.717 142.807 282.256 142.618 282.604 142.618 cv
282.949 142.618 283.207 142.618 284.789 142.618 cv
286.369 142.618 286.623 142.618 286.971 142.618 cv
287.318 142.618 287.857 142.807 287.699 143.376 cv
287.539 143.946 285.799 148.471 285.799 151.604 cv
285.799 154.737 288.016 157.902 289.756 158.25 cv
291.496 158.598 291.906 158.219 291.971 159.484 cv
291.998 160.021 292.064 161.133 292.133 162.237 cv
284.789 162.237 li
277.439 162.237 li
277.51 161.133 277.576 160.021 277.604 159.484 cv
cp
.286275 .752941 .756863 rgb
f
282.35 136.393 mo
282.793 136.393 281.875 136.393 284.789 136.393 cv
287.699 136.393 286.783 136.393 287.227 136.393 cv
287.668 136.393 287.951 136.614 287.824 137.469 cv
287.699 138.323 287.539 139.778 287.445 140.285 cv
287.35 140.792 286.844 140.696 286.4 140.696 cv
285.957 140.696 284.789 140.696 284.789 140.696 cv
284.789 140.696 283.615 140.696 283.174 140.696 cv
282.73 140.696 282.225 140.792 282.131 140.285 cv
282.035 139.778 281.875 138.323 281.75 137.469 cv
281.623 136.614 281.906 136.393 282.35 136.393 cv
cp
f
284.789 136.393 mo
287.699 136.393 286.783 136.393 287.227 136.393 cv
287.668 136.393 287.951 136.614 287.824 137.469 cv
287.699 138.323 287.539 139.778 287.445 140.285 cv
287.35 140.792 286.844 140.696 286.4 140.696 cv
285.957 140.696 284.789 140.696 284.789 140.696 cv
284.789 136.393 li
cp
.435294 .803922 .811765 rgb
f
284.789 142.618 mo
286.369 142.618 286.623 142.618 286.971 142.618 cv
287.318 142.618 287.857 142.807 287.699 143.376 cv
287.539 143.946 285.799 148.471 285.799 151.604 cv
285.799 154.737 288.016 157.902 289.756 158.25 cv
291.496 158.598 291.906 158.219 291.971 159.484 cv
291.998 160.021 292.064 161.133 292.133 162.237 cv
284.789 162.237 li
284.789 142.618 li
cp
f
282.16 135.475 mo
284.789 135.475 li
287.414 135.475 li
287.414 135.475 287.002 135.854 287.227 136.393 cv
284.789 136.393 li
282.35 136.393 li
282.572 135.854 282.16 135.475 282.16 135.475 cv
cp
0 .576471 .560784 rgb
f
275.295 162.774 mo
275.357 162.364 275.42 162.237 275.928 162.237 cv
276.434 162.237 280.609 162.237 284.789 162.237 cv
288.965 162.237 293.143 162.237 293.646 162.237 cv
294.152 162.237 294.215 162.364 294.279 162.774 cv
294.344 163.187 294.471 163.946 294.502 164.326 cv
294.535 164.706 294.313 164.769 293.902 164.769 cv
293.49 164.769 284.789 164.769 284.789 164.769 cv
284.789 164.769 276.084 164.769 275.674 164.769 cv
275.264 164.769 275.039 164.706 275.07 164.326 cv
275.104 163.946 275.23 163.187 275.295 162.774 cv
cp
.435294 .803922 .811765 rgb
f
284.789 135.475 mo
284.789 136.393 li
287.227 136.393 li
287.002 135.854 287.414 135.475 287.414 135.475 cv
284.789 135.475 li
cp
.0352941 .666667 .678431 rgb
f
284.789 162.237 mo
288.965 162.237 293.143 162.237 293.646 162.237 cv
294.152 162.237 294.215 162.364 294.279 162.774 cv
294.344 163.187 294.471 163.946 294.502 164.326 cv
294.535 164.706 294.313 164.769 293.902 164.769 cv
293.49 164.769 284.789 164.769 284.789 164.769 cv
284.789 162.237 li
cp
.639216 .87451 .878431 rgb
f
194.448 131.702 mo
185.433 134.86 li
188.907 136.786 li
197.894 133.61 li
194.448 131.702 li
cp
.972549 .419608 .254902 rgb
f
217.347 108.037 mo
207.032 108.037 198.67 116.399 198.67 126.714 cv
198.67 137.027 207.032 145.389 217.347 145.389 cv
227.662 145.389 236.023 137.027 236.023 126.714 cv
236.023 116.399 227.662 108.037 217.347 108.037 cv
cp
f
188.925 136.765 mo
197.928 133.568 li
196.43 137.249 li
187.439 140.413 li
188.925 136.765 li
cp
.858824 .360784 .215686 rgb
f
217.347 111.784 mo
209.114 111.784 202.417 118.481 202.417 126.714 cv
202.417 134.945 209.114 141.643 217.347 141.643 cv
225.58 141.643 232.277 134.945 232.277 126.714 cv
232.277 118.481 225.58 111.784 217.347 111.784 cv
cp
1 1 1 rgb
f
217.347 108.037 mo
227.662 108.037 236.023 116.399 236.023 126.714 cv
236.023 137.027 227.662 145.389 217.347 145.389 cv
217.347 108.037 li
cp
.858824 .360784 .215686 rgb
f
217.347 111.784 mo
225.58 111.784 232.277 118.481 232.277 126.714 cv
232.277 134.945 225.58 141.643 217.347 141.643 cv
217.347 111.784 li
cp
.929412 .929412 .937255 rgb
f
217.347 115.531 mo
211.181 115.531 206.165 120.548 206.165 126.714 cv
206.165 132.879 211.181 137.896 217.347 137.896 cv
223.513 137.896 228.529 132.879 228.529 126.714 cv
228.529 120.548 223.513 115.531 217.347 115.531 cv
cp
.972549 .419608 .254902 rgb
f
217.347 115.531 mo
223.513 115.531 228.529 120.548 228.529 126.714 cv
228.529 132.879 223.513 137.896 217.347 137.896 cv
217.347 115.531 li
cp
.858824 .360784 .215686 rgb
f
217.347 119.277 mo
213.247 119.277 209.911 122.613 209.911 126.714 cv
209.911 130.813 213.247 134.149 217.347 134.149 cv
221.447 134.149 224.784 130.813 224.784 126.714 cv
224.784 122.613 221.447 119.277 217.347 119.277 cv
cp
1 1 1 rgb
f
217.347 119.277 mo
221.447 119.277 224.784 122.613 224.784 126.714 cv
224.784 130.813 221.447 134.149 217.347 134.149 cv
217.347 119.277 li
cp
.929412 .929412 .937255 rgb
f
217.347 123.025 mo
215.312 123.025 213.658 124.679 213.658 126.714 cv
213.658 128.748 215.312 130.402 217.347 130.402 cv
219.381 130.402 221.035 128.748 221.035 126.714 cv
221.035 124.679 219.381 123.025 217.347 123.025 cv
cp
.972549 .419608 .254902 rgb
f
217.347 123.025 mo
219.381 123.025 221.035 124.679 221.035 126.714 cv
221.035 128.748 219.381 130.402 217.347 130.402 cv
217.347 123.025 li
cp
.858824 .360784 .215686 rgb
f
189.232 137.387 mo
188.923 137.387 188.634 137.195 188.525 136.888 cv
188.388 136.497 188.592 136.069 188.983 135.931 cv
217.097 126.006 li
217.486 125.869 217.916 126.074 218.054 126.463 cv
218.191 126.854 217.987 127.282 217.596 127.42 cv
189.481 137.344 li
189.232 137.387 li
cp
.14902 .188235 .282353 rgb
f
251.656 65.4277 mo
250.684 65.4277 249.828 66.0303 249.346 66.9346 cv
249.453 64.4297 249.707 60.8164 249.707 60.8164 cv
249.707 60.4854 249.438 60.2168 249.107 60.2168 cv
249.107 60.2168 245.805 60.3682 243.338 60.4424 cv
244.07 59.9404 244.541 59.1733 244.541 58.3115 cv
244.541 56.8003 243.098 55.5747 241.316 55.5747 cv
239.537 55.5747 238.092 56.8003 238.092 58.3115 cv
238.092 59.1714 238.561 59.9375 239.291 60.4395 cv
236.922 60.3638 233.809 60.2168 233.809 60.2168 cv
233.48 60.2168 233.211 60.4854 233.211 60.8164 cv
233.211 60.8164 232.957 64.4175 232.848 66.9214 cv
233.334 66.0244 234.182 65.4277 235.152 65.4277 cv
236.666 65.4277 237.891 66.8721 237.891 68.6528 cv
237.891 70.4336 236.666 71.877 235.152 71.877 cv
234.182 71.877 233.334 71.2808 232.848 70.3838 cv
232.957 72.8877 233.211 76.4888 233.211 76.4888 cv
233.211 76.8193 233.48 77.0884 233.809 77.0884 cv
241.316 77.0884 li
249.107 77.0884 li
249.438 77.0884 249.707 76.8193 249.707 76.4888 cv
249.707 76.4888 249.453 72.875 249.346 70.3706 cv
249.828 71.2754 250.684 71.877 251.656 71.877 cv
253.17 71.877 254.395 70.4336 254.395 68.6528 cv
254.395 66.8721 253.17 65.4277 251.656 65.4277 cv
cp
.247059 .278431 .372549 rgb
f
268.166 65.4507 mo
267.189 65.4507 266.336 66.0532 265.854 66.957 cv
265.961 64.4526 266.215 60.8394 266.215 60.8394 cv
266.215 60.5083 265.947 60.2393 265.615 60.2393 cv
265.615 60.2393 262.313 60.3911 259.846 60.4648 cv
260.578 59.9634 261.049 59.1958 261.049 58.334 cv
261.049 56.8232 259.605 55.5977 257.824 55.5977 cv
256.045 55.5977 254.6 56.8232 254.6 58.334 cv
254.6 59.1943 255.068 59.9604 255.801 60.4624 cv
253.43 60.3867 250.316 60.2393 250.316 60.2393 cv
249.986 60.2393 249.719 60.5083 249.719 60.8394 cv
249.719 60.8394 249.465 64.4399 249.355 66.9434 cv
249.84 66.0474 250.689 65.4507 251.662 65.4507 cv
253.174 65.4507 254.398 66.8945 254.398 68.6753 cv
254.398 70.4565 253.174 71.8999 251.662 71.8999 cv
250.689 71.8999 249.84 71.3037 249.355 70.4067 cv
249.465 72.9106 249.719 76.5112 249.719 76.5112 cv
249.719 76.8428 249.986 77.1113 250.316 77.1113 cv
257.824 77.1113 li
265.615 77.1113 li
265.947 77.1113 266.215 76.8428 266.215 76.5112 cv
266.215 76.5112 265.961 72.8984 265.854 70.3931 cv
266.336 71.2979 267.189 71.8999 268.166 71.8999 cv
269.678 71.8999 270.902 70.4565 270.902 68.6753 cv
270.902 66.8945 269.678 65.4507 268.166 65.4507 cv
cp
.972549 .419608 .254902 rgb
f
238.219 41.7798 mo
238.213 42.7539 238.809 43.6118 239.709 44.1016 cv
237.205 43.9771 233.594 43.7017 233.594 43.7017 cv
233.262 43.6997 232.992 43.9663 232.99 44.2979 cv
232.99 44.2979 233.121 47.6011 233.182 50.0679 cv
232.684 49.3325 231.918 48.8579 231.057 48.8521 cv
229.545 48.8433 228.313 50.2788 228.299 52.0591 cv
228.289 53.8403 229.506 55.292 231.018 55.3018 cv
231.877 55.3066 232.646 54.8428 233.152 54.1152 cv
233.063 56.4834 232.896 59.5952 232.896 59.5952 cv
232.895 59.9263 233.162 60.1973 233.492 60.1987 cv
233.492 60.1987 237.092 60.4727 239.594 60.5981 cv
238.701 60.1064 238.111 59.2534 238.115 58.2822 cv
238.127 56.77 239.576 55.5557 241.357 55.5664 cv
243.137 55.5767 244.574 56.811 244.564 58.3223 cv
244.559 59.2925 243.957 60.1392 243.057 60.6196 cv
245.563 60.5244 249.162 60.2944 249.162 60.2944 cv
249.496 60.2969 249.766 60.0298 249.768 59.6982 cv
249.768 59.6982 249.639 56.585 249.578 54.2163 cv
250.074 54.9502 250.84 55.4229 251.697 55.4277 cv
253.211 55.438 254.443 54.0005 254.457 52.2197 cv
254.465 50.4399 253.25 48.9888 251.738 48.979 cv
250.875 48.9736 250.107 49.439 249.6 50.1685 cv
249.689 47.7021 249.861 44.4023 249.861 44.4023 cv
249.863 44.0698 249.596 43.8003 249.264 43.7974 cv
249.264 43.7974 245.648 44.0293 243.145 44.123 cv
244.053 43.644 244.66 42.7939 244.666 41.8188 cv
244.676 40.3071 243.238 39.0737 241.459 39.062 cv
239.678 39.0518 238.227 40.2676 238.219 41.7798 cv
cp
.996078 .792157 .345098 rgb
f
230.355 175.676 mo
229.381 175.676 228.527 176.278 228.043 177.183 cv
228.152 174.678 228.406 171.064 228.406 171.064 cv
228.406 170.733 228.139 170.465 227.807 170.465 cv
227.807 170.465 224.504 170.616 222.037 170.69 cv
222.769 170.188 223.24 169.421 223.24 168.559 cv
223.24 167.048 221.797 165.823 220.015 165.823 cv
218.235 165.823 216.791 167.048 216.791 168.559 cv
216.791 169.419 217.258 170.186 217.99 170.688 cv
215.622 170.612 212.509 170.465 212.509 170.465 cv
212.178 170.465 211.91 170.733 211.91 171.064 cv
211.91 171.064 211.657 174.665 211.547 177.169 cv
212.033 176.272 212.882 175.676 213.852 175.676 cv
215.364 175.676 216.59 177.12 216.59 178.9 cv
216.59 180.682 215.364 182.125 213.852 182.125 cv
212.882 182.125 212.033 181.529 211.547 180.632 cv
211.657 183.136 211.91 186.737 211.91 186.737 cv
211.91 187.067 212.178 187.336 212.509 187.336 cv
220.015 187.336 li
227.807 187.336 li
228.139 187.336 228.406 187.067 228.406 186.737 cv
228.406 186.737 228.152 183.123 228.043 180.618 cv
228.527 181.523 229.381 182.125 230.355 182.125 cv
231.867 182.125 233.094 180.682 233.094 178.9 cv
233.094 177.12 231.867 175.676 230.355 175.676 cv
cp
.247059 .278431 .372549 rgb
f
246.863 175.699 mo
245.891 175.699 245.035 176.301 244.551 177.205 cv
244.658 174.701 244.914 171.087 244.914 171.087 cv
244.914 170.756 244.645 170.487 244.314 170.487 cv
244.314 170.487 241.012 170.639 238.543 170.713 cv
239.277 170.211 239.746 169.444 239.746 168.582 cv
239.746 167.071 238.305 165.845 236.525 165.845 cv
234.744 165.845 233.299 167.071 233.299 168.582 cv
233.299 169.442 233.766 170.208 234.498 170.71 cv
232.129 170.635 229.018 170.487 229.018 170.487 cv
228.686 170.487 228.416 170.756 228.416 171.087 cv
228.416 171.087 228.166 174.688 228.055 177.191 cv
228.541 176.295 229.391 175.699 230.359 175.699 cv
231.873 175.699 233.096 177.142 233.096 178.923 cv
233.096 180.705 231.873 182.147 230.359 182.147 cv
229.391 182.147 228.541 181.552 228.055 180.655 cv
228.166 183.159 228.416 186.759 228.416 186.759 cv
228.416 187.091 228.686 187.359 229.018 187.359 cv
236.525 187.359 li
244.314 187.359 li
244.645 187.359 244.914 187.091 244.914 186.759 cv
244.914 186.759 244.658 183.146 244.551 180.641 cv
245.035 181.546 245.891 182.147 246.863 182.147 cv
248.375 182.147 249.6 180.705 249.6 178.923 cv
249.6 177.142 248.375 175.699 246.863 175.699 cv
cp
.972549 .419608 .254902 rgb
f
216.917 152.027 mo
216.91 153.002 217.508 153.86 218.408 154.35 cv
215.904 154.225 212.292 153.95 212.292 153.95 cv
211.961 153.947 211.691 154.214 211.69 154.546 cv
211.69 154.546 211.819 157.849 211.879 160.315 cv
211.383 159.581 210.618 159.105 209.756 159.1 cv
208.245 159.091 207.01 160.526 206.999 162.307 cv
206.988 164.088 208.205 165.54 209.715 165.549 cv
210.576 165.555 211.345 165.091 211.852 164.363 cv
211.761 166.731 211.596 169.843 211.596 169.843 cv
211.593 170.174 211.861 170.445 212.191 170.447 cv
212.191 170.447 215.791 170.721 218.293 170.846 cv
217.4 170.354 216.809 169.501 216.814 168.53 cv
216.825 167.018 218.275 165.803 220.056 165.814 cv
221.836 165.825 223.271 167.059 223.263 168.57 cv
223.257 169.54 222.656 170.387 221.755 170.867 cv
224.261 170.772 227.863 170.542 227.863 170.542 cv
228.193 170.545 228.465 170.278 228.465 169.946 cv
228.465 169.946 228.338 166.833 228.277 164.464 cv
228.775 165.198 229.539 165.671 230.398 165.675 cv
231.91 165.686 233.145 164.249 233.154 162.468 cv
233.164 160.688 231.947 159.237 230.439 159.227 cv
229.574 159.222 228.805 159.687 228.297 160.416 cv
228.389 157.95 228.561 154.65 228.561 154.65 cv
228.563 154.318 228.295 154.048 227.965 154.045 cv
227.965 154.045 224.349 154.277 221.845 154.371 cv
222.751 153.892 223.36 153.042 223.365 152.067 cv
223.374 150.555 221.938 149.321 220.156 149.31 cv
218.376 149.3 216.925 150.516 216.917 152.027 cv
cp
.996078 .792157 .345098 rgb
f
136.47 123.398 mo
136.47 125.971 li
136.47 131.164 li
139.115 131.164 li
139.115 125.971 li
146.76 125.971 li
146.76 128.567 li
141.651 128.567 li
141.651 131.021 li
141.651 133.689 li
144.188 133.689 li
144.188 131.021 li
146.76 131.021 li
146.76 136.262 li
144.188 136.262 li
144.188 138.834 li
146.76 138.834 li
146.76 141.359 li
144.206 141.359 li
144.206 143.956 li
146.76 143.956 li
146.76 146.552 li
144.188 146.552 li
141.651 146.552 li
141.651 149.125 li
144.188 149.125 li
149.239 149.125 li
149.239 123.398 li
136.47 123.398 li
cp
.996078 .756863 .215686 rgb
f
133.896 136.262 mo
136.47 136.262 li
136.47 133.689 li
133.896 133.689 li
133.896 131.164 li
128.752 131.164 li
128.752 133.689 li
131.324 133.689 li
131.324 138.834 li
133.896 138.834 li
133.896 136.262 li
cp
f
141.651 141.395 mo
141.651 136.262 li
138.947 136.262 li
138.947 141.395 li
136.375 141.395 li
136.375 143.92 li
136.375 146.552 li
126.18 146.552 li
126.18 138.834 li
128.752 138.834 li
128.752 136.262 li
126.18 136.262 li
126.18 125.971 li
128.752 125.971 li
128.752 128.543 li
131.324 128.543 li
133.896 128.543 li
133.896 125.971 li
131.324 125.971 li
131.324 123.398 li
123.511 123.398 li
123.511 149.125 li
139.115 149.125 li
139.115 146.552 li
139.115 143.92 li
141.651 143.92 li
141.651 141.395 li
cp
f
128.752 143.956 mo
133.896 143.956 li
133.896 141.359 li
128.752 141.359 li
128.752 143.956 li
cp
f
201.655 45.5781 mo
191.135 45.5781 li
180.614 45.5781 li
179.975 45.5781 179.457 46.0967 179.457 46.7368 cv
179.457 76.1743 li
179.457 76.8145 179.975 77.3325 180.614 77.3325 cv
191.135 77.3325 li
201.655 77.3325 li
202.294 77.3325 202.813 76.8145 202.813 76.1743 cv
202.813 46.7368 li
202.813 46.0967 202.294 45.5781 201.655 45.5781 cv
cp
.247059 .278431 .372549 rgb
f
191.135 45.5781 mo
201.655 45.5781 li
202.294 45.5781 202.813 46.0967 202.813 46.7368 cv
202.813 76.1743 li
202.813 76.8145 202.294 77.3325 201.655 77.3325 cv
191.135 77.3325 li
191.135 45.5781 li
cp
.14902 .188235 .282353 rgb
f
199.531 73.8589 mo
182.738 73.8589 li
182.738 49.5361 li
199.531 49.5361 li
199.531 73.8589 li
cp
.933333 .933333 .937255 rgb
f
191.135 73.8589 mo
182.738 73.8589 li
182.738 49.5361 li
191.135 49.5361 li
191.135 73.8589 li
cp
1 1 .996078 rgb
f
185.778 52.7446 mo
186.897 52.7446 187.808 53.6553 187.808 54.7739 cv
187.808 55.8931 186.897 56.8037 185.778 56.8037 cv
184.659 56.8037 183.749 55.8931 183.749 54.7739 cv
183.749 53.6553 184.659 52.7446 185.778 52.7446 cv
cp
185.778 57.2378 mo
187.137 57.2378 188.242 56.1328 188.242 54.7739 cv
188.242 53.416 187.137 52.3105 185.778 52.3105 cv
184.42 52.3105 183.313 53.416 183.313 54.7739 cv
183.313 56.1328 184.42 57.2378 185.778 57.2378 cv
cp
.972549 .419608 .254902 rgb
f
185.778 63.9805 mo
184.659 63.9805 183.749 63.0698 183.749 61.9512 cv
183.749 60.8315 184.659 59.9214 185.778 59.9214 cv
186.897 59.9214 187.808 60.8315 187.808 61.9512 cv
187.808 63.0698 186.897 63.9805 185.778 63.9805 cv
cp
185.778 59.4868 mo
184.42 59.4868 183.313 60.5923 183.313 61.9512 cv
183.313 63.3096 184.42 64.4146 185.778 64.4146 cv
187.137 64.4146 188.242 63.3096 188.242 61.9512 cv
188.242 60.5923 187.137 59.4868 185.778 59.4868 cv
cp
f
185.778 71.1567 mo
184.659 71.1567 183.749 70.2466 183.749 69.1279 cv
183.749 68.0083 184.659 67.0986 185.778 67.0986 cv
186.897 67.0986 187.808 68.0083 187.808 69.1279 cv
187.808 70.2466 186.897 71.1567 185.778 71.1567 cv
cp
185.778 66.6631 mo
184.42 66.6631 183.313 67.7686 183.313 69.1279 cv
183.313 70.4858 184.42 71.5913 185.778 71.5913 cv
187.137 71.5913 188.242 70.4858 188.242 69.1279 cv
188.242 67.7686 187.137 66.6631 185.778 66.6631 cv
cp
f
186.665 55.8418 mo
186.665 56.0718 li
185.887 56.0718 li
185.856 56.0718 li
185.078 56.0718 li
185.078 55.8418 li
185.157 55.7427 li
185.184 55.7378 185.351 55.7222 185.657 55.6987 cv
185.657 54.0322 li
185.665 53.8257 li
185.252 54.1709 li
185.201 54.2031 li
185.146 54.2109 li
185.074 54.1948 li
185.026 54.1553 li
184.871 53.9448 li
185.745 53.1987 li
186.149 53.1987 li
186.149 55.7026 li
186.415 55.7222 186.561 55.7378 186.586 55.7427 cv
186.665 55.8418 li
cp
f
186.772 63.2417 mo
186.729 63.2417 li
186.614 63.2417 li
184.761 63.2417 li
184.761 63.0786 li
184.78 62.9756 li
184.848 62.876 li
185.717 62.0034 li
185.916 61.793 li
186.058 61.5908 li
186.149 61.3892 li
186.177 61.1738 li
186.149 60.9922 li
186.063 60.8608 li
185.932 60.7817 li
185.761 60.7539 li
185.641 60.7539 185.546 60.7856 185.471 60.8447 cv
185.396 60.9043 185.344 60.9839 185.312 61.083 cv
185.244 61.1904 li
185.133 61.2256 li
185.07 61.2178 li
184.812 61.1738 li
184.833 61.0356 184.872 60.9126 184.928 60.8096 cv
184.983 60.7061 185.05 60.6226 185.138 60.5518 cv
185.222 60.48 185.32 60.4287 185.431 60.3926 cv
185.542 60.3574 185.662 60.3413 185.789 60.3413 cv
185.919 60.3413 186.042 60.3608 186.154 60.4009 cv
186.265 60.4399 186.352 60.4956 186.432 60.5669 cv
186.51 60.6392 186.57 60.7261 186.614 60.8252 cv
186.657 60.9248 186.682 61.0356 186.682 61.1582 cv
186.682 61.2656 186.665 61.3608 186.634 61.4521 cv
186.602 61.5435 186.562 61.627 186.51 61.7095 cv
186.328 61.9482 li
186.106 62.1821 li
185.459 62.8447 li
185.646 62.8013 li
185.82 62.7856 li
186.455 62.7856 li
186.462 62.6816 186.467 62.6221 186.471 62.6069 cv
186.562 62.5352 li
186.772 62.5352 li
186.772 62.813 li
186.772 63.2417 li
cp
f
186.174 67.5488 mo
186.28 67.5889 186.372 67.6406 186.447 67.708 cv
186.522 67.7754 186.583 67.8511 186.622 67.9424 cv
186.662 68.0332 186.682 68.1323 186.682 68.2354 cv
186.682 68.3267 186.669 68.4023 186.649 68.4736 cv
186.562 68.6563 li
186.419 68.7871 li
186.225 68.8784 li
186.396 68.9336 186.53 69.0132 186.614 69.124 cv
186.697 69.2354 186.74 69.3779 186.74 69.5449 cv
186.74 69.688 186.712 69.811 186.662 69.9224 cv
186.61 70.0327 186.538 70.1245 186.447 70.1992 cv
186.356 70.2749 186.253 70.3306 186.133 70.3701 cv
186.015 70.4097 185.888 70.4258 185.757 70.4258 cv
185.613 70.4258 185.487 70.4097 185.38 70.3784 cv
185.272 70.3467 185.177 70.291 185.098 70.2275 cv
185.02 70.1641 184.956 70.0845 184.9 69.9893 cv
184.845 69.894 184.797 69.7871 184.757 69.6641 cv
184.971 69.5767 li
185.083 69.5527 li
185.177 69.5767 li
185.241 69.6401 li
185.316 69.7749 li
185.419 69.894 li
185.558 69.9814 li
185.749 70.0127 li
185.971 69.9736 li
186.126 69.8662 li
186.217 69.7197 li
186.249 69.561 li
186.225 69.3701 li
186.138 69.2275 li
185.935 69.1323 li
185.848 69.1084 185.737 69.1006 185.59 69.1006 cv
185.59 68.7515 li
185.709 68.7515 185.808 68.7397 185.888 68.7192 cv
186.078 68.6284 li
186.177 68.4937 li
186.201 68.3188 li
186.201 68.1841 186.165 68.0811 186.09 68.0098 cv
186.015 67.938 185.916 67.9063 185.789 67.9063 cv
185.674 67.9063 185.574 67.9346 185.499 67.9976 cv
185.423 68.0615 185.368 68.1401 185.336 68.2354 cv
185.272 68.3428 li
185.161 68.3784 li
185.098 68.3706 li
184.836 68.3232 li
184.856 68.1841 184.9 68.0649 184.956 67.9619 cv
185.012 67.8589 185.078 67.7754 185.166 67.7036 cv
185.253 67.6323 185.348 67.5811 185.459 67.5454 cv
185.57 67.5093 185.689 67.4932 185.816 67.4932 cv
185.947 67.4932 186.065 67.5093 186.174 67.5488 cv
cp
f
198.494 54.1206 mo
189.591 54.1206 li
189.591 53.2515 li
198.494 53.2515 li
198.494 54.1206 li
cp
.286275 .752941 .756863 rgb
f
198.494 55.4717 mo
189.591 55.4717 li
189.591 54.6025 li
198.494 54.6025 li
198.494 55.4717 li
cp
f
196.178 56.8232 mo
189.591 56.8232 li
189.591 55.9541 li
196.178 55.9541 li
196.178 56.8232 li
cp
f
198.494 68.2109 mo
189.591 68.2109 li
189.591 67.3423 li
198.494 67.3423 li
198.494 68.2109 li
cp
f
198.494 69.562 mo
189.591 69.562 li
189.591 68.6929 li
198.494 68.6929 li
198.494 69.562 li
cp
f
197.336 70.9136 mo
189.591 70.9136 li
189.591 70.0449 li
197.336 70.0449 li
197.336 70.9136 li
cp
f
198.494 61.8901 mo
189.591 61.8901 li
189.591 61.021 li
198.494 61.021 li
198.494 61.8901 li
cp
f
197.336 63.2417 mo
189.591 63.2417 li
189.591 62.373 li
197.336 62.373 li
197.336 63.2417 li
cp
f
191.135 45.2417 mo
191.11 45.2446 li
190.704 45.2446 190.375 44.915 190.375 44.5083 cv
190.375 44.1021 190.704 43.7725 191.11 43.7725 cv
191.135 43.7754 li
191.53 43.7881 191.847 44.1104 191.847 44.5083 cv
191.847 44.9067 191.53 45.2295 191.135 45.2417 cv
cp
196.684 44.7378 mo
193.199 44.7256 li
193.199 43.5864 192.274 42.6626 191.135 42.6626 cv
189.996 42.6626 189.072 43.5864 189.072 44.7256 cv
185.585 44.7378 li
185.425 44.7378 185.295 44.8677 185.295 45.0278 cv
185.295 49.9985 li
186.462 50.5771 li
187.629 49.9985 li
188.796 50.5771 li
189.966 49.9985 li
191.135 50.5771 li
192.303 49.9985 li
193.473 50.5771 li
194.64 49.9985 li
195.807 50.5771 li
196.974 49.9985 li
196.974 45.0278 li
196.974 44.8677 196.845 44.7378 196.684 44.7378 cv
cp
.435294 .803922 .811765 rgb
f
196.684 44.7378 mo
193.199 44.7256 li
193.199 43.5864 192.274 42.6626 191.135 42.6626 cv
191.135 43.7754 li
191.53 43.7881 191.847 44.1104 191.847 44.5083 cv
191.847 44.9067 191.53 45.2295 191.135 45.2417 cv
191.135 50.5771 li
192.303 49.9985 li
193.473 50.5771 li
194.64 49.9985 li
195.807 50.5771 li
196.974 49.9985 li
196.974 45.0278 li
196.974 44.8677 196.845 44.7378 196.684 44.7378 cv
cp
.286275 .752941 .756863 rgb
f
185.039 214.997 mo
174.519 214.997 li
163.998 214.997 li
163.359 214.997 162.84 215.515 162.84 216.155 cv
162.84 245.593 li
162.84 246.232 163.359 246.751 163.998 246.751 cv
174.519 246.751 li
185.039 246.751 li
185.678 246.751 186.196 246.232 186.196 245.593 cv
186.196 216.155 li
186.196 215.515 185.678 214.997 185.039 214.997 cv
cp
.247059 .278431 .372549 rgb
f
174.519 214.997 mo
185.039 214.997 li
185.678 214.997 186.196 215.515 186.196 216.155 cv
186.196 245.593 li
186.196 246.232 185.678 246.751 185.039 246.751 cv
174.519 246.751 li
174.519 214.997 li
cp
.14902 .188235 .282353 rgb
f
182.915 243.277 mo
166.122 243.277 li
166.122 218.955 li
182.915 218.955 li
182.915 243.277 li
cp
.933333 .933333 .937255 rgb
f
174.519 243.277 mo
166.122 243.277 li
166.122 218.955 li
174.519 218.955 li
174.519 243.277 li
cp
1 1 .996078 rgb
f
169.162 222.164 mo
170.281 222.164 171.191 223.074 171.191 224.192 cv
171.191 225.312 170.281 226.223 169.162 226.223 cv
168.042 226.223 167.132 225.312 167.132 224.192 cv
167.132 223.074 168.042 222.164 169.162 222.164 cv
cp
169.162 226.656 mo
170.521 226.656 171.626 225.551 171.626 224.192 cv
171.626 222.834 170.521 221.729 169.162 221.729 cv
167.804 221.729 166.697 222.834 166.697 224.192 cv
166.697 225.551 167.804 226.656 169.162 226.656 cv
cp
.972549 .419608 .254902 rgb
f
169.162 233.399 mo
168.042 233.399 167.132 232.488 167.132 231.37 cv
167.132 230.25 168.042 229.34 169.162 229.34 cv
170.281 229.34 171.191 230.25 171.191 231.37 cv
171.191 232.488 170.281 233.399 169.162 233.399 cv
cp
169.162 228.905 mo
167.804 228.905 166.697 230.011 166.697 231.37 cv
166.697 232.729 167.804 233.833 169.162 233.833 cv
170.521 233.833 171.626 232.729 171.626 231.37 cv
171.626 230.011 170.521 228.905 169.162 228.905 cv
cp
f
169.162 240.575 mo
168.042 240.575 167.132 239.665 167.132 238.547 cv
167.132 237.428 168.042 236.518 169.162 236.518 cv
170.281 236.518 171.191 237.428 171.191 238.547 cv
171.191 239.665 170.281 240.575 169.162 240.575 cv
cp
169.162 236.082 mo
167.804 236.082 166.697 237.188 166.697 238.547 cv
166.697 239.904 167.804 241.01 169.162 241.01 cv
170.521 241.01 171.626 239.904 171.626 238.547 cv
171.626 237.188 170.521 236.082 169.162 236.082 cv
cp
f
170.048 225.26 mo
170.048 225.49 li
169.271 225.49 li
169.24 225.49 li
168.462 225.49 li
168.462 225.26 li
168.541 225.161 li
168.568 225.156 168.735 225.141 169.041 225.117 cv
169.041 223.451 li
169.048 223.244 li
168.636 223.589 li
168.585 223.622 li
168.53 223.629 li
168.458 223.613 li
168.41 223.574 li
168.255 223.363 li
169.128 222.617 li
169.533 222.617 li
169.533 225.121 li
169.798 225.141 169.945 225.156 169.97 225.161 cv
170.048 225.26 li
cp
f
170.156 232.66 mo
170.113 232.66 li
169.998 232.66 li
168.145 232.66 li
168.145 232.497 li
168.164 232.395 li
168.231 232.295 li
169.101 231.423 li
169.3 231.211 li
169.441 231.01 li
169.533 230.807 li
169.561 230.593 li
169.533 230.41 li
169.446 230.279 li
169.315 230.2 li
169.145 230.173 li
169.025 230.173 168.93 230.204 168.855 230.264 cv
168.779 230.323 168.728 230.402 168.696 230.502 cv
168.628 230.609 li
168.517 230.645 li
168.454 230.637 li
168.196 230.593 li
168.216 230.454 168.256 230.331 168.312 230.229 cv
168.367 230.125 168.434 230.041 168.522 229.97 cv
168.605 229.898 168.704 229.848 168.815 229.811 cv
168.926 229.775 169.045 229.76 169.172 229.76 cv
169.303 229.76 169.426 229.779 169.538 229.819 cv
169.648 229.858 169.736 229.914 169.815 229.985 cv
169.894 230.058 169.954 230.145 169.998 230.244 cv
170.041 230.343 170.065 230.454 170.065 230.577 cv
170.065 230.685 170.049 230.78 170.018 230.871 cv
169.985 230.963 169.946 231.045 169.894 231.128 cv
169.712 231.366 li
169.49 231.601 li
168.843 232.263 li
169.03 232.22 li
169.204 232.204 li
169.838 232.204 li
169.846 232.101 169.851 232.04 169.854 232.025 cv
169.946 231.953 li
170.156 231.953 li
170.156 232.231 li
170.156 232.66 li
cp
f
169.558 236.968 mo
169.664 237.007 169.755 237.059 169.831 237.127 cv
169.906 237.193 169.966 237.271 170.005 237.361 cv
170.045 237.452 170.065 237.551 170.065 237.653 cv
170.065 237.745 170.053 237.821 170.033 237.892 cv
169.946 238.074 li
169.803 238.206 li
169.608 238.297 li
169.78 238.352 169.914 238.432 169.998 238.543 cv
170.081 238.654 170.124 238.797 170.124 238.964 cv
170.124 239.106 170.096 239.229 170.045 239.341 cv
169.994 239.45 169.922 239.543 169.831 239.618 cv
169.74 239.693 169.637 239.749 169.517 239.788 cv
169.398 239.828 169.272 239.845 169.141 239.845 cv
168.997 239.845 168.871 239.828 168.764 239.797 cv
168.656 239.766 168.561 239.71 168.481 239.646 cv
168.403 239.583 168.339 239.503 168.284 239.407 cv
168.229 239.313 168.181 239.206 168.141 239.083 cv
168.355 238.994 li
168.466 238.972 li
168.561 238.994 li
168.625 239.059 li
168.7 239.193 li
168.803 239.313 li
168.941 239.399 li
169.133 239.432 li
169.355 239.393 li
169.509 239.285 li
169.601 239.138 li
169.632 238.98 li
169.608 238.789 li
169.521 238.646 li
169.319 238.551 li
169.232 238.527 169.121 238.519 168.974 238.519 cv
168.974 238.17 li
169.093 238.17 169.192 238.158 169.272 238.139 cv
169.462 238.047 li
169.561 237.913 li
169.585 237.737 li
169.585 237.603 169.549 237.5 169.474 237.428 cv
169.398 237.357 169.3 237.325 169.172 237.325 cv
169.058 237.325 168.958 237.353 168.883 237.416 cv
168.807 237.479 168.752 237.559 168.72 237.653 cv
168.656 237.762 li
168.545 237.797 li
168.481 237.789 li
168.22 237.741 li
168.24 237.603 168.284 237.483 168.339 237.38 cv
168.396 237.277 168.462 237.193 168.549 237.123 cv
168.637 237.051 168.732 237 168.843 236.963 cv
168.954 236.928 169.073 236.911 169.2 236.911 cv
169.331 236.911 169.449 236.928 169.558 236.968 cv
cp
f
181.877 223.539 mo
172.975 223.539 li
172.975 222.67 li
181.877 222.67 li
181.877 223.539 li
cp
.286275 .752941 .756863 rgb
f
181.877 224.89 mo
172.975 224.89 li
172.975 224.021 li
181.877 224.021 li
181.877 224.89 li
cp
f
179.562 226.241 mo
172.975 226.241 li
172.975 225.373 li
179.562 225.373 li
179.562 226.241 li
cp
f
181.877 237.63 mo
172.975 237.63 li
172.975 236.76 li
181.877 236.76 li
181.877 237.63 li
cp
f
181.877 238.98 mo
172.975 238.98 li
172.975 238.111 li
181.877 238.111 li
181.877 238.98 li
cp
f
180.72 240.332 mo
172.975 240.332 li
172.975 239.463 li
180.72 239.463 li
180.72 240.332 li
cp
f
181.877 231.309 mo
172.975 231.309 li
172.975 230.439 li
181.877 230.439 li
181.877 231.309 li
cp
f
180.72 232.66 mo
172.975 232.66 li
172.975 231.792 li
180.72 231.792 li
180.72 232.66 li
cp
f
174.519 214.66 mo
174.494 214.664 li
174.088 214.664 173.759 214.334 173.759 213.927 cv
173.759 213.521 174.088 213.191 174.494 213.191 cv
174.519 213.194 li
174.914 213.207 175.231 213.529 175.231 213.927 cv
175.231 214.326 174.914 214.648 174.519 214.66 cv
cp
180.068 214.157 mo
176.583 214.144 li
176.583 213.005 175.658 212.081 174.519 212.081 cv
173.38 212.081 172.456 213.005 172.456 214.144 cv
168.969 214.157 li
168.809 214.157 168.679 214.286 168.679 214.446 cv
168.679 219.417 li
169.846 219.996 li
171.013 219.417 li
172.18 219.996 li
173.35 219.417 li
174.519 219.996 li
175.687 219.417 li
176.857 219.996 li
178.024 219.417 li
179.191 219.996 li
180.358 219.417 li
180.358 214.446 li
180.358 214.286 180.229 214.157 180.068 214.157 cv
cp
.435294 .803922 .811765 rgb
f
180.068 214.157 mo
176.583 214.144 li
176.583 213.005 175.658 212.081 174.519 212.081 cv
174.519 213.194 li
174.914 213.207 175.231 213.529 175.231 213.927 cv
175.231 214.326 174.914 214.648 174.519 214.66 cv
174.519 219.996 li
175.687 219.417 li
176.857 219.996 li
178.024 219.417 li
179.191 219.996 li
180.358 219.417 li
180.358 214.446 li
180.358 214.286 180.229 214.157 180.068 214.157 cv
cp
.286275 .752941 .756863 rgb
f
323.504 136.58 mo
312.984 136.58 li
302.463 136.58 li
301.824 136.58 301.307 137.099 301.307 137.739 cv
301.307 167.176 li
301.307 167.816 301.824 168.334 302.463 168.334 cv
312.984 168.334 li
323.504 168.334 li
324.145 168.334 324.662 167.816 324.662 167.176 cv
324.662 137.739 li
324.662 137.099 324.145 136.58 323.504 136.58 cv
cp
.247059 .278431 .372549 rgb
f
312.984 136.58 mo
323.504 136.58 li
324.145 136.58 324.662 137.099 324.662 137.739 cv
324.662 167.176 li
324.662 167.816 324.145 168.334 323.504 168.334 cv
312.984 168.334 li
312.984 136.58 li
cp
.14902 .188235 .282353 rgb
f
321.381 164.861 mo
304.588 164.861 li
304.588 140.538 li
321.381 140.538 li
321.381 164.861 li
cp
.933333 .933333 .937255 rgb
f
312.984 164.861 mo
304.588 164.861 li
304.588 140.538 li
312.984 140.538 li
312.984 164.861 li
cp
1 1 .996078 rgb
f
307.629 143.747 mo
308.746 143.747 309.658 144.657 309.658 145.776 cv
309.658 146.895 308.746 147.806 307.629 147.806 cv
306.51 147.806 305.6 146.895 305.6 145.776 cv
305.6 144.657 306.51 143.747 307.629 143.747 cv
cp
307.629 148.239 mo
308.986 148.239 310.092 147.135 310.092 145.776 cv
310.092 144.417 308.986 143.313 307.629 143.313 cv
306.271 143.313 305.164 144.417 305.164 145.776 cv
305.164 147.135 306.271 148.239 307.629 148.239 cv
cp
.972549 .419608 .254902 rgb
f
307.629 154.982 mo
306.51 154.982 305.6 154.072 305.6 152.953 cv
305.6 151.833 306.51 150.923 307.629 150.923 cv
308.746 150.923 309.658 151.833 309.658 152.953 cv
309.658 154.072 308.746 154.982 307.629 154.982 cv
cp
307.629 150.488 mo
306.271 150.488 305.164 151.594 305.164 152.953 cv
305.164 154.311 306.271 155.417 307.629 155.417 cv
308.986 155.417 310.092 154.311 310.092 152.953 cv
310.092 151.594 308.986 150.488 307.629 150.488 cv
cp
f
307.629 162.158 mo
306.51 162.158 305.6 161.249 305.6 160.13 cv
305.6 159.01 306.51 158.101 307.629 158.101 cv
308.746 158.101 309.658 159.01 309.658 160.13 cv
309.658 161.249 308.746 162.158 307.629 162.158 cv
cp
307.629 157.665 mo
306.271 157.665 305.164 158.771 305.164 160.13 cv
305.164 161.488 306.271 162.593 307.629 162.593 cv
308.986 162.593 310.092 161.488 310.092 160.13 cv
310.092 158.771 308.986 157.665 307.629 157.665 cv
cp
f
308.514 146.843 mo
308.514 147.073 li
307.736 147.073 li
307.705 147.073 li
306.928 147.073 li
306.928 146.843 li
307.006 146.745 li
307.033 146.74 307.201 146.724 307.506 146.7 cv
307.506 145.034 li
307.514 144.828 li
307.102 145.173 li
307.051 145.205 li
306.996 145.212 li
306.924 145.197 li
306.877 145.157 li
306.721 144.947 li
307.596 144.201 li
308 144.201 li
308 146.705 li
308.266 146.724 308.41 146.74 308.436 146.745 cv
308.514 146.843 li
cp
f
308.621 154.243 mo
308.578 154.243 li
308.465 154.243 li
306.611 154.243 li
306.611 154.081 li
306.629 153.978 li
306.697 153.878 li
307.566 153.005 li
307.766 152.795 li
307.908 152.593 li
308 152.391 li
308.027 152.176 li
308 151.994 li
307.912 151.863 li
307.781 151.783 li
307.609 151.756 li
307.492 151.756 307.396 151.788 307.322 151.847 cv
307.244 151.906 307.193 151.985 307.162 152.085 cv
307.094 152.192 li
306.984 152.228 li
306.92 152.22 li
306.662 152.176 li
306.682 152.038 306.723 151.915 306.779 151.812 cv
306.832 151.708 306.898 151.625 306.988 151.553 cv
307.07 151.482 307.17 151.431 307.281 151.394 cv
307.393 151.359 307.51 151.343 307.639 151.343 cv
307.77 151.343 307.893 151.363 308.004 151.402 cv
308.113 151.442 308.203 151.498 308.281 151.569 cv
308.359 151.641 308.42 151.728 308.465 151.827 cv
308.508 151.926 308.533 152.038 308.533 152.16 cv
308.533 152.268 308.516 152.363 308.482 152.454 cv
308.451 152.545 308.412 152.628 308.359 152.711 cv
308.178 152.95 li
307.957 153.184 li
307.309 153.846 li
307.496 153.803 li
307.67 153.787 li
308.305 153.787 li
308.313 153.684 308.316 153.624 308.32 153.608 cv
308.412 153.537 li
308.621 153.537 li
308.621 153.815 li
308.621 154.243 li
cp
f
308.025 158.551 mo
308.131 158.591 308.221 158.643 308.297 158.71 cv
308.373 158.777 308.434 158.853 308.473 158.944 cv
308.512 159.035 308.533 159.134 308.533 159.237 cv
308.533 159.329 308.52 159.404 308.5 159.476 cv
308.412 159.658 li
308.27 159.789 li
308.074 159.88 li
308.246 159.936 308.381 160.015 308.465 160.126 cv
308.547 160.237 308.59 160.38 308.59 160.547 cv
308.59 160.69 308.561 160.813 308.512 160.924 cv
308.459 161.034 308.387 161.126 308.297 161.201 cv
308.205 161.277 308.104 161.333 307.982 161.372 cv
307.865 161.412 307.738 161.428 307.605 161.428 cv
307.463 161.428 307.336 161.412 307.23 161.38 cv
307.123 161.349 307.027 161.293 306.947 161.229 cv
306.869 161.166 306.807 161.086 306.75 160.991 cv
306.693 160.896 306.646 160.789 306.607 160.666 cv
306.82 160.579 li
306.932 160.555 li
307.027 160.579 li
307.092 160.642 li
307.166 160.777 li
307.268 160.896 li
307.406 160.983 li
307.6 161.015 li
307.822 160.976 li
307.975 160.868 li
308.066 160.722 li
308.1 160.563 li
308.074 160.372 li
307.986 160.229 li
307.783 160.134 li
307.697 160.11 307.588 160.102 307.439 160.102 cv
307.439 159.753 li
307.559 159.753 307.658 159.742 307.738 159.721 cv
307.928 159.63 li
308.027 159.495 li
308.051 159.321 li
308.051 159.186 308.014 159.083 307.939 159.011 cv
307.865 158.94 307.766 158.908 307.639 158.908 cv
307.523 158.908 307.424 158.936 307.35 159 cv
307.273 159.063 307.219 159.142 307.188 159.237 cv
307.123 159.345 li
307.012 159.38 li
306.947 159.373 li
306.686 159.325 li
306.707 159.186 306.75 159.067 306.807 158.964 cv
306.861 158.86 306.928 158.777 307.016 158.706 cv
307.102 158.634 307.197 158.583 307.309 158.547 cv
307.42 158.511 307.539 158.495 307.666 158.495 cv
307.797 158.495 307.914 158.511 308.025 158.551 cv
cp
f
320.344 145.123 mo
311.441 145.123 li
311.441 144.253 li
320.344 144.253 li
320.344 145.123 li
cp
.286275 .752941 .756863 rgb
f
320.344 146.474 mo
311.441 146.474 li
311.441 145.604 li
320.344 145.604 li
320.344 146.474 li
cp
f
318.027 147.825 mo
311.441 147.825 li
311.441 146.956 li
318.027 146.956 li
318.027 147.825 li
cp
f
320.344 159.213 mo
311.441 159.213 li
311.441 158.344 li
320.344 158.344 li
320.344 159.213 li
cp
f
320.344 160.564 mo
311.441 160.564 li
311.441 159.695 li
320.344 159.695 li
320.344 160.564 li
cp
f
319.188 161.916 mo
311.441 161.916 li
311.441 161.047 li
319.188 161.047 li
319.188 161.916 li
cp
f
320.344 152.892 mo
311.441 152.892 li
311.441 152.023 li
320.344 152.023 li
320.344 152.892 li
cp
f
319.188 154.243 mo
311.441 154.243 li
311.441 153.375 li
319.188 153.375 li
319.188 154.243 li
cp
f
312.984 136.244 mo
312.959 136.247 li
312.553 136.247 312.227 135.917 312.227 135.51 cv
312.227 135.104 312.553 134.774 312.959 134.774 cv
312.984 134.777 li
313.381 134.79 313.697 135.112 313.697 135.51 cv
313.697 135.909 313.381 136.231 312.984 136.244 cv
cp
318.533 135.74 mo
315.049 135.728 li
315.049 134.588 314.125 133.665 312.984 133.665 cv
311.848 133.665 310.922 134.588 310.922 135.728 cv
307.434 135.74 li
307.273 135.74 307.146 135.87 307.146 136.029 cv
307.146 141 li
308.313 141.579 li
309.48 141 li
310.646 141.579 li
311.816 141 li
312.984 141.579 li
314.154 141 li
315.322 141.579 li
316.49 141 li
317.656 141.579 li
318.824 141 li
318.824 136.029 li
318.824 135.87 318.695 135.74 318.533 135.74 cv
cp
.435294 .803922 .811765 rgb
f
318.533 135.74 mo
315.049 135.728 li
315.049 134.588 314.125 133.665 312.984 133.665 cv
312.984 134.777 li
313.381 134.79 313.697 135.112 313.697 135.51 cv
313.697 135.909 313.381 136.231 312.984 136.244 cv
312.984 141.579 li
314.154 141 li
315.322 141.579 li
316.49 141 li
317.656 141.579 li
318.824 141 li
318.824 136.029 li
318.824 135.87 318.695 135.74 318.533 135.74 cv
cp
.286275 .752941 .756863 rgb
f
286.398 63.6196 mo
293.775 63.6196 299.756 69.6001 299.756 76.9761 cv
299.756 84.3521 293.775 90.3325 286.398 90.3325 cv
286.398 63.6196 li
cp
.14902 .188235 .282353 rgb
f
286.398 90.3325 mo
279.021 90.3325 273.041 84.3521 273.041 76.9761 cv
273.041 69.6001 279.021 63.6196 286.398 63.6196 cv
286.398 90.3325 li
cp
.247059 .278431 .368627 rgb
f
286.398 66.062 mo
280.379 66.062 275.486 70.958 275.486 76.9761 cv
275.486 82.9946 280.379 87.8906 286.398 87.8906 cv
292.416 87.8906 297.313 82.9946 297.313 76.9761 cv
297.313 70.958 292.416 66.062 286.398 66.062 cv
cp
.992157 .992157 .984314 rgb
f
287.225 76.1514 mo
286.398 68.6572 li
285.574 76.1514 li
278.078 76.9761 li
285.574 77.8008 li
286.398 85.2954 li
287.225 77.8008 li
294.717 76.9761 li
287.225 76.1514 li
cp
.247059 .278431 .368627 rgb
f
286.398 66.062 mo
292.416 66.062 297.313 70.958 297.313 76.9761 cv
297.313 82.9946 292.416 87.8906 286.398 87.8906 cv
286.398 66.062 li
cp
.933333 .933333 .937255 rgb
f
286.398 85.2954 mo
287.225 77.8008 li
294.717 76.9761 li
287.225 76.1514 li
286.398 68.6572 li
286.398 85.2954 li
cp
.14902 .188235 .282353 rgb
f
288.1 78.835 mo
289.086 77.8506 289.086 76.2563 288.1 75.2725 cv
287.117 74.2886 285.523 74.2886 284.539 75.2725 cv
283.557 76.2563 279.359 84.0151 279.359 84.0151 cv
279.359 84.0151 287.117 79.8184 288.1 78.835 cv
cp
.996078 .792157 .345098 rgb
f
288.256 78.6797 mo
287.273 79.6641 285.678 79.6631 284.695 78.6797 cv
283.713 77.6958 283.713 76.1011 284.695 75.1177 cv
285.678 74.1338 293.438 69.937 293.438 69.937 cv
293.438 69.937 289.24 77.6958 288.256 78.6797 cv
cp
.972549 .419608 .254902 rgb
f
286.398 76.1514 mo
286.855 76.1514 287.225 76.5205 287.225 76.9761 cv
287.225 77.4321 286.855 77.8013 286.398 77.8013 cv
286.398 76.1514 li
cp
.14902 .188235 .282353 rgb
f
286.398 77.8013 mo
285.943 77.8013 285.574 77.4321 285.574 76.9761 cv
285.574 76.5205 285.943 76.1514 286.398 76.1514 cv
286.398 77.8013 li
cp
.247059 .278431 .368627 rgb
f
208.778 264.646 mo
214.527 264.646 219.188 269.307 219.188 275.055 cv
219.188 280.804 214.527 285.463 208.778 285.463 cv
208.778 264.646 li
cp
.14902 .188235 .282353 rgb
f
208.778 285.463 mo
203.029 285.463 198.369 280.804 198.369 275.055 cv
198.369 269.307 203.029 264.646 208.778 264.646 cv
208.778 285.463 li
cp
.247059 .278431 .368627 rgb
f
208.778 266.55 mo
204.088 266.55 200.273 270.364 200.273 275.055 cv
200.273 279.745 204.088 283.561 208.778 283.561 cv
213.468 283.561 217.283 279.745 217.283 275.055 cv
217.283 270.364 213.468 266.55 208.778 266.55 cv
cp
.992157 .992157 .984314 rgb
f
209.421 274.413 mo
208.778 268.571 li
208.135 274.413 li
202.295 275.055 li
208.135 275.698 li
208.778 281.538 li
209.421 275.698 li
215.261 275.055 li
209.421 274.413 li
cp
.247059 .278431 .368627 rgb
f
208.778 266.55 mo
213.468 266.55 217.283 270.364 217.283 275.055 cv
217.283 279.745 213.468 283.561 208.778 283.561 cv
208.778 266.55 li
cp
.933333 .933333 .937255 rgb
f
208.778 281.538 mo
209.421 275.698 li
215.261 275.055 li
209.421 274.413 li
208.778 268.571 li
208.778 281.538 li
cp
.14902 .188235 .282353 rgb
f
210.105 276.503 mo
210.872 275.736 210.872 274.494 210.105 273.728 cv
209.34 272.961 208.097 272.961 207.33 273.728 cv
206.564 274.494 203.292 280.54 203.292 280.54 cv
203.292 280.54 209.339 277.271 210.105 276.503 cv
cp
.996078 .792157 .345098 rgb
f
210.227 276.382 mo
209.46 277.149 208.217 277.149 207.451 276.382 cv
206.685 275.616 206.685 274.373 207.451 273.606 cv
208.217 272.84 214.264 269.569 214.264 269.569 cv
214.264 269.569 210.993 275.616 210.227 276.382 cv
cp
.972549 .419608 .254902 rgb
f
208.778 274.413 mo
209.133 274.413 209.421 274.7 209.421 275.055 cv
209.421 275.41 209.133 275.698 208.778 275.698 cv
208.778 274.413 li
cp
.14902 .188235 .282353 rgb
f
208.778 275.698 mo
208.423 275.698 208.135 275.41 208.135 275.055 cv
208.135 274.7 208.423 274.413 208.778 274.413 cv
208.778 275.698 li
cp
.247059 .278431 .368627 rgb
f
305.637 96.5601 mo
305.301 96.5537 304.957 96.5527 304.604 96.564 cv
290.355 96.9961 291.65 107.273 292.688 110.036 cv
291.564 112.541 288.973 115.649 288.715 116.513 cv
288.457 117.376 291.221 118.067 291.221 118.067 cv
291.221 118.067 291.305 124.889 292.604 126.703 cv
293.896 128.516 299.768 126.616 299.768 126.616 cv
299.684 130.417 li
305.637 130.417 li
312.205 130.417 li
312.205 130.417 311.945 126.962 311.6 124.112 cv
311.254 121.263 314.969 118.067 317.816 113.921 cv
320.596 109.879 318.939 96.8042 305.637 96.5601 cv
cp
.996078 .756863 .215686 rgb
f
305.637 130.417 mo
305.637 96.5601 li
305.301 96.5537 304.957 96.5527 304.604 96.564 cv
290.355 96.9961 291.65 107.273 292.688 110.036 cv
291.564 112.541 288.973 115.649 288.715 116.513 cv
288.457 117.376 291.221 118.067 291.221 118.067 cv
291.221 118.067 291.305 124.889 292.604 126.703 cv
293.896 128.516 299.768 126.616 299.768 126.616 cv
299.684 130.417 li
305.637 130.417 li
cp
.996078 .792157 .345098 rgb
f
315.471 91.7773 mo
306.025 104.666 li
310.748 92.9492 li
315.471 91.7773 li
cp
0 .576471 .560784 rgb
f
315.471 91.7773 mo
310.748 92.9492 li
306.025 85.6577 li
315.471 91.7773 li
cp
.0352941 .666667 .678431 rgb
f
306.025 85.6577 mo
310.748 92.9492 li
306.025 93.4683 li
306.025 85.6577 li
cp
.286275 .752941 .756863 rgb
f
310.748 92.9492 mo
306.025 104.666 li
306.025 93.4683 li
310.748 92.9492 li
cp
.0352941 .666667 .678431 rgb
f
306.025 93.4683 mo
306.025 104.666 li
301.309 92.9492 li
306.025 93.4683 li
cp
.286275 .752941 .756863 rgb
f
306.025 85.6577 mo
306.025 93.4683 li
301.309 92.9492 li
306.025 85.6577 li
cp
.435294 .803922 .811765 rgb
f
306.025 85.6577 mo
301.309 92.9492 li
296.586 91.7773 li
306.025 85.6577 li
cp
.639216 .87451 .878431 rgb
f
301.309 92.9492 mo
306.025 104.666 li
296.586 91.7773 li
301.309 92.9492 li
cp
.435294 .803922 .811765 rgb
f
171.986 174.633 mo
171.651 174.627 171.308 174.626 170.956 174.637 cv
156.707 175.069 158.002 185.346 159.039 188.109 cv
157.915 190.613 155.324 193.722 155.065 194.586 cv
154.807 195.449 157.57 196.14 157.57 196.14 cv
157.57 196.14 157.655 202.962 158.953 204.776 cv
160.247 206.589 166.12 204.689 166.12 204.689 cv
166.033 208.489 li
171.986 208.489 li
178.555 208.489 li
178.555 208.489 178.296 205.035 177.95 202.186 cv
177.605 199.336 181.318 196.14 184.167 191.995 cv
186.947 187.952 185.29 174.877 171.986 174.633 cv
cp
.996078 .756863 .215686 rgb
f
171.986 208.489 mo
171.986 174.633 li
171.651 174.627 171.308 174.626 170.956 174.637 cv
156.707 175.069 158.002 185.346 159.039 188.109 cv
157.915 190.613 155.324 193.722 155.065 194.586 cv
154.807 195.449 157.57 196.14 157.57 196.14 cv
157.57 196.14 157.655 202.962 158.953 204.776 cv
160.247 206.589 166.12 204.689 166.12 204.689 cv
166.033 208.489 li
171.986 208.489 li
cp
.996078 .792157 .345098 rgb
f
181.82 169.851 mo
172.376 182.739 li
177.098 171.022 li
181.82 169.851 li
cp
0 .576471 .560784 rgb
f
181.82 169.851 mo
177.098 171.022 li
172.376 163.73 li
181.82 169.851 li
cp
.0352941 .666667 .678431 rgb
f
172.376 163.73 mo
177.098 171.022 li
172.376 171.542 li
172.376 163.73 li
cp
.286275 .752941 .756863 rgb
f
177.098 171.022 mo
172.376 182.739 li
172.376 171.542 li
177.098 171.022 li
cp
.0352941 .666667 .678431 rgb
f
172.376 171.542 mo
172.376 182.739 li
167.659 171.022 li
172.376 171.542 li
cp
.286275 .752941 .756863 rgb
f
172.376 163.73 mo
172.376 171.542 li
167.659 171.022 li
172.376 163.73 li
cp
.435294 .803922 .811765 rgb
f
172.376 163.73 mo
167.659 171.022 li
162.937 169.851 li
172.376 163.73 li
cp
.639216 .87451 .878431 rgb
f
167.659 171.022 mo
172.376 182.739 li
162.937 169.851 li
167.659 171.022 li
cp
.435294 .803922 .811765 rgb
f
155.87 75.79 mo
151.468 75.79 li
151.468 73.0952 li
155.87 73.0952 li
154.232 74.4424 li
155.87 75.79 li
cp
.858824 .360784 .215686 rgb
f
152.87 75.1597 mo
148.468 75.1597 li
148.468 72.4629 li
152.87 72.4629 li
152.87 75.1597 li
cp
.972549 .419608 .254902 rgb
f
152.87 75.1597 mo
151.468 75.79 li
151.468 75.1597 li
152.87 75.1597 li
cp
.839216 .309804 .0980392 rgb
f
148.671 80.4829 mo
148.263 80.4829 li
148.263 71.3706 li
148.671 71.3706 li
148.671 80.4829 li
cp
.14902 .188235 .282353 rgb
f
148.468 71.1323 mo
148.769 71.1323 149.013 71.377 149.013 71.6797 cv
149.013 71.98 148.769 72.2246 148.468 72.2246 cv
148.468 71.1323 li
cp
f
148.468 72.2246 mo
148.165 72.2246 147.92 71.98 147.92 71.6797 cv
147.92 71.377 148.165 71.1323 148.468 71.1323 cv
148.468 72.2246 li
cp
.239216 .27451 .360784 rgb
f
157.682 89.2861 mo
154.917 91.2324 li
148.468 78.8452 li
141.609 93.3799 li
139.665 93.3799 li
132.293 117.642 li
148.468 117.642 li
167.098 117.642 li
157.682 89.2861 li
cp
.14902 .188235 .282353 rgb
f
148.468 78.8452 mo
141.609 93.3799 li
139.665 93.3799 li
132.293 117.642 li
148.468 117.642 li
148.468 78.8452 li
cp
.239216 .27451 .360784 rgb
f
157.682 89.2861 mo
154.917 91.2324 li
148.468 78.8452 li
141.609 93.3799 li
139.665 93.3799 li
136.375 104.204 li
141.198 97.4404 li
142.154 98.9434 li
146.113 93.8252 li
148.468 98.2427 li
150.412 94.9839 li
155.668 101.808 li
157.101 99.3516 li
163.272 106.122 li
157.682 89.2861 li
cp
1 1 .996078 rgb
f
148.468 78.8452 mo
154.917 91.2324 li
157.682 89.2861 li
163.272 106.122 li
157.101 99.3516 li
155.668 101.808 li
150.412 94.9839 li
148.468 98.2427 li
148.468 78.8452 li
cp
.435294 .803922 .811765 rgb
f
148.468 98.2427 mo
146.113 93.8252 li
142.154 98.9434 li
141.198 97.4404 li
136.375 104.204 li
139.665 93.3799 li
141.609 93.3799 li
148.468 78.8452 li
148.468 98.2427 li
cp
.639216 .87451 .878431 rgb
f
259.77 192.467 mo
255.938 192.467 li
255.938 190.121 li
259.77 190.121 li
258.346 191.294 li
259.77 192.467 li
cp
.858824 .360784 .215686 rgb
f
257.158 191.919 mo
253.324 191.919 li
253.324 189.571 li
257.158 189.571 li
257.158 191.919 li
cp
.972549 .419608 .254902 rgb
f
257.158 191.919 mo
255.938 192.467 li
255.938 191.919 li
257.158 191.919 li
cp
.839216 .309804 .0980392 rgb
f
253.504 196.553 mo
253.146 196.553 li
253.146 188.62 li
253.504 188.62 li
253.504 196.553 li
cp
.14902 .188235 .282353 rgb
f
253.324 188.412 mo
253.588 188.412 253.799 188.625 253.799 188.888 cv
253.799 189.15 253.588 189.363 253.324 189.363 cv
253.324 188.412 li
cp
f
253.324 189.363 mo
253.063 189.363 252.85 189.15 252.85 188.888 cv
252.85 188.625 253.063 188.412 253.324 188.412 cv
253.324 189.363 li
cp
.239216 .27451 .360784 rgb
f
261.348 204.217 mo
258.939 205.913 li
253.324 195.127 li
247.354 207.782 li
245.662 207.782 li
239.244 228.905 li
253.324 228.905 li
269.547 228.905 li
261.348 204.217 li
cp
.14902 .188235 .282353 rgb
f
253.324 195.127 mo
247.354 207.782 li
245.662 207.782 li
239.244 228.905 li
253.324 228.905 li
253.324 195.127 li
cp
.239216 .27451 .360784 rgb
f
261.348 204.217 mo
258.939 205.913 li
253.324 195.127 li
247.354 207.782 li
245.662 207.782 li
242.797 217.206 li
246.996 211.317 li
247.828 212.626 li
251.275 208.17 li
253.324 212.016 li
255.018 209.179 li
259.594 215.12 li
260.844 212.981 li
266.215 218.875 li
261.348 204.217 li
cp
1 1 .996078 rgb
f
253.324 195.127 mo
258.939 205.913 li
261.348 204.217 li
266.215 218.875 li
260.844 212.981 li
259.594 215.12 li
255.018 209.179 li
253.324 212.016 li
253.324 195.127 li
cp
.435294 .803922 .811765 rgb
f
253.324 212.016 mo
251.275 208.17 li
247.828 212.626 li
246.996 211.317 li
242.797 217.206 li
245.662 207.782 li
247.354 207.782 li
253.324 195.127 li
253.324 212.016 li
cp
.639216 .87451 .878431 rgb
f
175.381 96.7051 mo
176.259 97.5757 176.259 99.002 175.381 99.8726 cv
174.501 100.753 173.082 100.753 172.202 99.8726 cv
171.324 99.002 171.324 97.5757 172.202 96.7051 cv
173.082 95.8281 174.501 95.8281 175.381 96.7051 cv
cp
.435294 .803922 .811765 rgb
f
170.075 96.7339 mo
170.953 97.6069 170.953 99.0327 170.075 99.9033 cv
169.195 100.784 167.775 100.784 166.895 99.9033 cv
166.018 99.0327 166.018 97.6069 166.895 96.7339 cv
167.775 95.8594 169.195 95.8594 170.075 96.7339 cv
cp
f
215.375 96.7051 mo
216.253 97.5757 216.253 99.002 215.375 99.8726 cv
214.495 100.753 213.076 100.753 212.196 99.8726 cv
211.319 99.002 211.319 97.5757 212.196 96.7051 cv
213.076 95.8281 214.495 95.8281 215.375 96.7051 cv
cp
.0352941 .666667 .678431 rgb
f
210.069 96.7339 mo
210.947 97.6069 210.947 99.0327 210.069 99.9033 cv
209.189 100.784 207.769 100.784 206.889 99.9033 cv
206.012 99.0327 206.012 97.6069 206.889 96.7339 cv
207.769 95.8594 209.189 95.8594 210.069 96.7339 cv
cp
f
203.904 97.7437 mo
203.904 104.721 198.248 110.377 191.271 110.377 cv
184.293 110.377 178.638 104.721 178.638 97.7437 cv
178.638 90.7666 184.293 85.1099 191.271 85.1099 cv
198.248 85.1099 203.904 90.7666 203.904 97.7437 cv
cp
.933333 .933333 .937255 rgb
f
203.957 95.1421 mo
205.327 96.5122 205.322 98.7324 203.957 100.096 cv
202.587 101.466 200.372 101.466 199.003 100.096 cv
197.633 98.7324 197.633 96.5122 199.003 95.1421 cv
200.372 93.7783 202.587 93.7783 203.957 95.1421 cv
cp
.0352941 .666667 .678431 rgb
f
203.474 101.019 mo
203.354 101.456 203.212 101.885 203.048 102.306 cv
201.219 107.02 196.631 110.373 191.272 110.373 cv
190.314 110.373 189.381 110.268 188.484 110.064 cv
182.854 108.792 178.638 103.749 178.638 97.7373 cv
178.638 97.5239 178.641 97.3081 178.655 97.0967 cv
178.987 90.4268 184.52 85.1055 191.272 85.1055 cv
193.032 85.1055 194.709 85.4663 196.237 86.1235 cv
200.049 87.7588 202.902 91.2227 203.686 95.4014 cv
203.832 96.1602 203.904 96.9395 203.904 97.7373 cv
203.904 98.8711 203.755 99.9717 203.474 101.019 cv
cp
191.272 126.975 mo
190.5 126.975 189.874 126.346 189.874 125.58 cv
189.874 124.806 190.5 124.178 191.272 124.178 cv
192.042 124.178 192.668 124.806 192.668 125.58 cv
192.668 126.346 192.042 126.975 191.272 126.975 cv
cp
205.69 96.728 mo
205.588 95.2231 205.254 93.7803 204.724 92.4395 cv
204.721 92.4312 li
202.604 87.0747 197.381 83.2837 191.272 83.2837 cv
183.553 83.2837 177.249 89.3301 176.836 96.9434 cv
176.823 97.2065 176.814 97.4722 176.814 97.7373 cv
176.814 103.048 179.679 107.691 183.947 110.203 cv
184.322 110.425 184.705 110.628 185.103 110.819 cv
185.882 111.186 186.702 111.488 187.556 111.712 cv
187.817 111.785 188.088 111.845 188.357 111.901 cv
188.357 126.044 li
188.357 127.656 189.662 128.96 191.272 128.96 cv
192.883 128.96 194.189 127.656 194.189 126.044 cv
194.189 111.901 li
199.203 110.873 203.27 107.25 204.925 102.495 cv
205.221 101.649 205.439 100.764 205.57 99.8516 cv
205.677 99.1636 205.726 98.4565 205.726 97.7373 cv
205.726 97.3994 205.716 97.0596 205.69 96.728 cv
cp
.239216 .27451 .360784 rgb
f
194.189 111.901 mo
194.189 126.044 li
194.189 127.656 192.883 128.96 191.272 128.96 cv
191.272 126.975 li
192.042 126.975 192.668 126.346 192.668 125.58 cv
192.668 124.806 192.042 124.178 191.272 124.178 cv
191.272 112.195 li
191.648 112.195 192.02 112.181 192.385 112.152 cv
192.628 112.135 192.873 112.112 193.113 112.079 cv
193.477 112.031 193.834 111.974 194.189 111.901 cv
cp
.14902 .188235 .282353 rgb
f
205.69 96.728 mo
205.588 95.2231 205.254 93.7803 204.724 92.4395 cv
204.721 92.4312 li
202.604 87.0747 197.381 83.2837 191.272 83.2837 cv
191.272 85.1055 li
193.032 85.1055 194.709 85.4663 196.237 86.1235 cv
200.049 87.7588 202.902 91.2227 203.686 95.4014 cv
203.832 96.1602 203.904 96.9395 203.904 97.7373 cv
203.904 98.8711 203.755 99.9717 203.474 101.019 cv
203.354 101.456 203.212 101.885 203.048 102.306 cv
201.219 107.02 196.631 110.373 191.272 110.373 cv
191.272 112.195 li
191.648 112.195 192.02 112.181 192.385 112.152 cv
192.628 112.135 192.873 112.108 193.113 112.079 cv
193.477 112.031 193.834 111.974 194.189 111.901 cv
199.203 110.873 203.27 107.25 204.925 102.495 cv
205.221 101.649 205.439 100.764 205.57 99.8516 cv
205.677 99.1636 205.726 98.4565 205.726 97.7373 cv
205.726 97.3994 205.716 97.0596 205.69 96.728 cv
cp
f
191.271 85.1099 mo
184.293 85.1099 178.638 90.7666 178.638 97.7437 cv
178.638 104.721 184.293 110.377 191.271 110.377 cv
191.271 85.1099 li
cp
.992157 .992157 .984314 rgb
f
183.859 95.229 mo
185.343 96.7173 185.343 99.1035 183.859 100.587 cv
182.392 102.074 179.987 102.074 178.503 100.587 cv
177.036 99.1035 177.036 96.7173 178.503 95.229 cv
179.987 93.7451 182.392 93.7451 183.859 95.229 cv
cp
.0352941 .666667 .678431 rgb
f
194.789 94.2676 mo
196.741 96.2241 196.741 99.3623 194.789 101.315 cv
192.856 103.272 189.693 103.272 187.74 101.315 cv
185.81 99.3623 185.81 96.2241 187.74 94.2676 cv
189.693 92.313 192.856 92.313 194.789 94.2676 cv
cp
.972549 .419608 .254902 rgb
f
191.272 85.1055 mo
191.272 83.2837 li
183.553 83.2837 177.249 89.3301 176.836 96.9434 cv
176.823 97.2065 176.814 97.4722 176.814 97.7373 cv
176.814 103.048 179.679 107.691 183.947 110.203 cv
184.322 110.425 184.705 110.628 185.103 110.819 cv
185.882 111.186 186.702 111.488 187.556 111.712 cv
187.817 111.785 188.088 111.845 188.357 111.901 cv
188.357 126.044 li
188.357 127.656 189.662 128.96 191.272 128.96 cv
191.272 126.975 li
190.5 126.975 189.874 126.346 189.874 125.58 cv
189.874 124.806 190.5 124.178 191.272 124.178 cv
191.272 112.195 li
191.272 110.373 li
190.314 110.373 189.381 110.268 188.484 110.064 cv
182.854 108.792 178.638 103.749 178.638 97.7373 cv
178.638 97.5239 178.641 97.3081 178.655 97.0967 cv
178.987 90.4268 184.52 85.1055 191.272 85.1055 cv
cp
.239216 .27451 .360784 rgb
f
260.824 180.643 mo
261.535 181.349 261.535 182.505 260.824 183.21 cv
260.111 183.924 258.959 183.924 258.248 183.21 cv
257.535 182.505 257.535 181.349 258.248 180.643 cv
258.959 179.932 260.111 179.932 260.824 180.643 cv
cp
.435294 .803922 .811765 rgb
f
256.523 180.666 mo
257.234 181.374 257.234 182.53 256.523 183.235 cv
255.811 183.949 254.658 183.949 253.945 183.235 cv
253.234 182.53 253.234 181.374 253.945 180.666 cv
254.658 179.958 255.811 179.958 256.523 180.666 cv
cp
f
293.244 180.643 mo
293.955 181.349 293.955 182.505 293.244 183.21 cv
292.529 183.924 291.377 183.924 290.664 183.21 cv
289.953 182.505 289.953 181.349 290.664 180.643 cv
291.377 179.932 292.529 179.932 293.244 180.643 cv
cp
.0352941 .666667 .678431 rgb
f
288.941 180.666 mo
289.652 181.374 289.652 182.53 288.941 183.235 cv
288.229 183.949 287.076 183.949 286.363 183.235 cv
285.652 182.53 285.652 181.374 286.363 180.666 cv
287.076 179.958 288.229 179.958 288.941 180.666 cv
cp
f
283.945 181.485 mo
283.945 187.141 279.359 191.726 273.703 191.726 cv
268.049 191.726 263.463 187.141 263.463 181.485 cv
263.463 175.829 268.049 171.244 273.703 171.244 cv
279.359 171.244 283.945 175.829 283.945 181.485 cv
cp
.933333 .933333 .937255 rgb
f
283.986 179.376 mo
285.098 180.487 285.096 182.286 283.986 183.391 cv
282.877 184.502 281.08 184.502 279.971 183.391 cv
278.859 182.286 278.859 180.487 279.971 179.376 cv
281.08 178.271 282.877 178.271 283.986 179.376 cv
cp
.0352941 .666667 .678431 rgb
f
283.596 184.139 mo
283.498 184.494 283.383 184.842 283.25 185.183 cv
281.768 189.003 278.049 191.722 273.705 191.722 cv
272.93 191.722 272.174 191.636 271.445 191.472 cv
266.881 190.44 263.463 186.353 263.463 181.479 cv
263.463 181.307 263.467 181.132 263.479 180.96 cv
263.746 175.554 268.232 171.24 273.705 171.24 cv
275.133 171.24 276.49 171.533 277.729 172.065 cv
280.818 173.391 283.133 176.199 283.766 179.586 cv
283.887 180.201 283.945 180.833 283.945 181.479 cv
283.945 182.399 283.824 183.291 283.596 184.139 cv
cp
273.705 205.179 mo
273.078 205.179 272.57 204.67 272.57 204.048 cv
272.57 203.421 273.078 202.912 273.705 202.912 cv
274.328 202.912 274.836 203.421 274.836 204.048 cv
274.836 204.67 274.328 205.179 273.705 205.179 cv
cp
285.391 180.662 mo
285.311 179.441 285.039 178.272 284.609 177.185 cv
284.605 177.178 li
282.889 172.837 278.656 169.764 273.705 169.764 cv
267.447 169.764 262.338 174.665 262.004 180.836 cv
261.994 181.049 261.984 181.265 261.984 181.479 cv
261.984 185.784 264.309 189.547 267.768 191.584 cv
268.07 191.764 268.383 191.929 268.703 192.083 cv
269.336 192.381 270 192.626 270.693 192.807 cv
270.904 192.866 271.125 192.915 271.342 192.96 cv
271.342 204.424 li
271.342 205.731 272.398 206.788 273.705 206.788 cv
275.01 206.788 276.07 205.731 276.07 204.424 cv
276.07 192.96 li
280.133 192.126 283.43 189.19 284.771 185.336 cv
285.01 184.65 285.188 183.933 285.295 183.194 cv
285.381 182.636 285.42 182.063 285.42 181.479 cv
285.42 181.206 285.414 180.93 285.391 180.662 cv
cp
.239216 .27451 .360784 rgb
f
276.07 192.96 mo
276.07 204.424 li
276.07 205.731 275.01 206.788 273.705 206.788 cv
273.705 205.179 li
274.328 205.179 274.836 204.67 274.836 204.048 cv
274.836 203.421 274.328 202.912 273.705 202.912 cv
273.705 193.199 li
274.01 193.199 274.313 193.188 274.607 193.164 cv
274.803 193.15 275.002 193.132 275.197 193.104 cv
275.492 193.066 275.781 193.019 276.07 192.96 cv
cp
.14902 .188235 .282353 rgb
f
285.391 180.662 mo
285.311 179.441 285.039 178.272 284.609 177.185 cv
284.605 177.178 li
282.889 172.837 278.656 169.764 273.705 169.764 cv
273.705 171.24 li
275.133 171.24 276.49 171.533 277.729 172.065 cv
280.818 173.391 283.133 176.199 283.766 179.586 cv
283.887 180.201 283.945 180.833 283.945 181.479 cv
283.945 182.399 283.824 183.291 283.596 184.139 cv
283.498 184.494 283.383 184.842 283.25 185.183 cv
281.768 189.003 278.049 191.722 273.705 191.722 cv
273.705 193.199 li
274.01 193.199 274.313 193.188 274.607 193.164 cv
274.803 193.15 275.002 193.128 275.197 193.104 cv
275.492 193.066 275.781 193.019 276.07 192.96 cv
280.133 192.126 283.43 189.19 284.771 185.336 cv
285.01 184.65 285.188 183.933 285.295 183.194 cv
285.381 182.636 285.42 182.063 285.42 181.479 cv
285.42 181.206 285.414 180.93 285.391 180.662 cv
cp
f
273.703 171.244 mo
268.049 171.244 263.463 175.829 263.463 181.485 cv
263.463 187.141 268.049 191.726 273.703 191.726 cv
273.703 171.244 li
cp
.992157 .992157 .984314 rgb
f
267.695 179.447 mo
268.898 180.653 268.898 182.586 267.695 183.791 cv
266.506 184.995 264.557 184.995 263.355 183.791 cv
262.166 182.586 262.166 180.653 263.355 179.447 cv
264.557 178.244 266.506 178.244 267.695 179.447 cv
cp
.0352941 .666667 .678431 rgb
f
276.557 178.667 mo
278.139 180.253 278.139 182.797 276.557 184.38 cv
274.988 185.966 272.426 185.966 270.842 184.38 cv
269.277 182.797 269.277 180.253 270.842 178.667 cv
272.426 177.083 274.988 177.083 276.557 178.667 cv
cp
.972549 .419608 .254902 rgb
f
273.705 171.24 mo
273.705 169.764 li
267.447 169.764 262.338 174.665 262.004 180.836 cv
261.994 181.049 261.984 181.265 261.984 181.479 cv
261.984 185.784 264.309 189.547 267.768 191.584 cv
268.07 191.764 268.383 191.929 268.703 192.083 cv
269.336 192.381 270 192.626 270.693 192.807 cv
270.904 192.866 271.125 192.915 271.342 192.96 cv
271.342 204.424 li
271.342 205.731 272.398 206.788 273.705 206.788 cv
273.705 205.179 li
273.078 205.179 272.57 204.67 272.57 204.048 cv
272.57 203.421 273.078 202.912 273.705 202.912 cv
273.705 193.199 li
273.705 191.722 li
272.93 191.722 272.174 191.636 271.445 191.472 cv
266.881 190.44 263.463 186.353 263.463 181.479 cv
263.463 181.307 263.467 181.132 263.479 180.96 cv
263.746 175.554 268.232 171.24 273.705 171.24 cv
cp
.239216 .27451 .360784 rgb
f
250.818 81.2524 mo
223.649 90.1011 li
250.818 100.32 li
277.99 90.1011 li
250.818 81.2524 li
cp
f
250.818 100.32 mo
223.649 90.1011 li
250.818 81.2524 li
250.818 100.32 li
cp
.321569 .352941 .431373 rgb
f
250.818 100.32 mo
234.537 94.1968 li
234.537 106.553 li
250.818 106.553 li
267.102 106.553 li
267.102 94.1968 li
250.818 100.32 li
cp
.239216 .27451 .360784 rgb
f
250.818 100.32 mo
250.818 106.553 li
267.102 106.553 li
267.102 94.1968 li
250.818 100.32 li
cp
.14902 .188235 .282353 rgb
f
250.818 104.926 mo
243.912 104.926 234.537 102.986 234.537 100.911 cv
234.537 106.816 li
234.537 108.891 244.654 110.904 250.818 110.904 cv
258.961 110.904 267.102 108.891 267.102 106.816 cv
267.102 100.911 li
267.102 102.986 261.316 104.926 250.818 104.926 cv
cp
.321569 .352941 .431373 rgb
f
250.818 104.926 mo
250.818 110.904 li
257.814 110.904 267.102 108.891 267.102 106.816 cv
267.102 100.911 li
267.102 102.986 258.451 104.926 250.818 104.926 cv
cp
.239216 .27451 .360784 rgb
f
224.71 94.8374 mo
222.587 94.8374 li
222.587 89.04 li
250.818 89.04 li
250.818 91.1626 li
224.71 91.1626 li
224.71 94.8374 li
cp
.14902 .188235 .282353 rgb
f
224.552 96.8896 mo
226.576 104.932 li
223.649 104.932 li
220.723 104.932 li
222.747 96.8896 li
223.022 97.0161 223.326 97.0801 223.649 97.0801 cv
223.972 97.0801 224.277 97.0161 224.552 96.8896 cv
cp
f
223.649 92.5947 mo
224.892 92.5947 225.892 93.5938 225.892 94.8374 cv
225.892 95.7598 225.344 96.5474 224.552 96.8896 cv
224.277 97.0161 223.972 97.0801 223.649 97.0801 cv
223.326 97.0801 223.022 97.0161 222.747 96.8896 cv
221.955 96.5474 221.406 95.7598 221.406 94.8374 cv
221.406 93.5938 222.408 92.5947 223.649 92.5947 cv
cp
.239216 .27451 .360784 rgb
f
209.264 193.664 mo
236.436 202.513 li
209.264 212.731 li
182.095 202.513 li
209.264 193.664 li
cp
f
209.264 212.731 mo
236.436 202.513 li
209.264 193.664 li
209.264 212.731 li
cp
.321569 .352941 .431373 rgb
f
209.264 212.731 mo
225.546 206.608 li
225.546 218.964 li
209.264 218.964 li
192.982 218.964 li
192.982 206.608 li
209.264 212.731 li
cp
.239216 .27451 .360784 rgb
f
209.264 212.731 mo
209.264 218.964 li
192.982 218.964 li
192.982 206.608 li
209.264 212.731 li
cp
.14902 .188235 .282353 rgb
f
209.264 217.337 mo
216.171 217.337 225.546 215.397 225.546 213.322 cv
225.546 219.228 li
225.546 221.303 215.429 223.315 209.264 223.315 cv
201.123 223.315 192.982 221.303 192.982 219.228 cv
192.982 213.322 li
192.982 215.397 198.767 217.337 209.264 217.337 cv
cp
.321569 .352941 .431373 rgb
f
209.264 217.337 mo
209.264 223.315 li
202.269 223.315 192.982 221.303 192.982 219.228 cv
192.982 213.322 li
192.982 215.397 201.632 217.337 209.264 217.337 cv
cp
.239216 .27451 .360784 rgb
f
235.375 207.249 mo
237.496 207.249 li
237.496 201.451 li
209.264 201.451 li
209.264 203.574 li
235.375 203.574 li
235.375 207.249 li
cp
.14902 .188235 .282353 rgb
f
235.531 209.301 mo
233.508 217.344 li
236.436 217.344 li
239.359 217.344 li
237.338 209.301 li
237.063 209.427 236.76 209.492 236.436 209.492 cv
236.111 209.492 235.807 209.427 235.531 209.301 cv
cp
f
236.436 205.006 mo
235.191 205.006 234.193 206.005 234.193 207.249 cv
234.193 208.171 234.74 208.959 235.531 209.301 cv
235.807 209.427 236.111 209.492 236.436 209.492 cv
236.76 209.492 237.063 209.427 237.338 209.301 cv
238.129 208.959 238.678 208.171 238.678 207.249 cv
238.678 206.005 237.676 205.006 236.436 205.006 cv
cp
.239216 .27451 .360784 rgb
f
141.651 153.539 mo
132.656 153.539 125.366 160.829 125.366 169.825 cv
125.366 178.817 132.656 186.11 141.651 186.11 cv
150.646 186.11 157.937 178.817 157.937 169.825 cv
157.937 160.829 150.646 153.539 141.651 153.539 cv
cp
.247059 .278431 .368627 rgb
f
141.651 153.539 mo
150.646 153.539 157.937 160.829 157.937 169.825 cv
157.937 178.817 150.646 186.11 141.651 186.11 cv
141.651 153.539 li
cp
.14902 .188235 .282353 rgb
f
141.651 156.515 mo
134.313 156.515 128.343 162.486 128.343 169.825 cv
128.343 177.162 134.313 183.131 141.651 183.131 cv
148.988 183.131 154.958 177.162 154.958 169.825 cv
154.958 162.486 148.988 156.515 141.651 156.515 cv
cp
.992157 .992157 .984314 rgb
f
141.651 156.515 mo
148.988 156.515 154.958 162.486 154.958 169.825 cv
154.958 177.162 148.988 183.131 141.651 183.131 cv
141.651 156.515 li
cp
.933333 .933333 .937255 rgb
f
148.132 160.294 mo
142.746 170.408 li
142.522 170.825 142.093 171.063 141.649 171.063 cv
141.452 171.063 141.253 171.018 141.067 170.918 cv
140.462 170.595 140.233 169.844 140.555 169.24 cv
145.943 159.127 li
148.132 160.294 li
cp
.858824 .360784 .215686 rgb
f
145.476 176.734 mo
140.673 170.587 li
140.251 170.049 140.347 169.269 140.885 168.846 cv
141.427 168.424 142.206 168.521 142.627 169.06 cv
147.43 175.206 li
145.476 176.734 li
cp
.839216 .309804 .0980392 rgb
f
141.651 168.819 mo
142.206 168.819 142.657 169.267 142.657 169.825 cv
142.657 170.379 142.206 170.83 141.651 170.83 cv
141.651 168.819 li
cp
.14902 .188235 .282353 rgb
f
141.651 170.83 mo
141.094 170.83 140.646 170.379 140.646 169.825 cv
140.646 169.267 141.094 168.819 141.651 168.819 cv
141.651 170.83 li
cp
.247059 .278431 .368627 rgb
f
154.191 170.754 mo
150.779 170.754 li
150.779 168.893 li
154.191 168.893 li
154.191 170.754 li
cp
.14902 .188235 .282353 rgb
f
132.4 170.754 mo
128.987 170.754 li
128.987 168.893 li
132.4 168.893 li
132.4 170.754 li
cp
.247059 .278431 .368627 rgb
f
141.651 157.105 mo
141.651 160.517 li
140.721 160.517 li
140.721 157.105 li
141.651 157.105 li
cp
f
142.582 157.105 mo
142.582 160.517 li
141.651 160.517 li
141.651 157.105 li
142.582 157.105 li
cp
.14902 .188235 .282353 rgb
f
141.651 179.128 mo
141.651 182.542 li
140.721 182.542 li
140.721 179.128 li
141.651 179.128 li
cp
.247059 .278431 .368627 rgb
f
142.582 179.128 mo
142.582 182.542 li
141.651 182.542 li
141.651 179.128 li
142.582 179.128 li
cp
.14902 .188235 .282353 rgb
f
282.91 209.199 mo
276.947 209.199 272.113 214.032 272.113 219.996 cv
272.113 225.958 276.947 230.793 282.91 230.793 cv
288.873 230.793 293.707 225.958 293.707 219.996 cv
293.707 214.032 288.873 209.199 282.91 209.199 cv
cp
.247059 .278431 .368627 rgb
f
282.91 209.199 mo
288.873 209.199 293.707 214.032 293.707 219.996 cv
293.707 225.958 288.873 230.793 282.91 230.793 cv
282.91 209.199 li
cp
.14902 .188235 .282353 rgb
f
282.91 211.172 mo
278.045 211.172 274.086 215.131 274.086 219.996 cv
274.086 224.86 278.045 228.818 282.91 228.818 cv
287.775 228.818 291.732 224.86 291.732 219.996 cv
291.732 215.131 287.775 211.172 282.91 211.172 cv
cp
.992157 .992157 .984314 rgb
f
282.91 211.172 mo
287.775 211.172 291.732 215.131 291.732 219.996 cv
291.732 224.86 287.775 228.818 282.91 228.818 cv
282.91 211.172 li
cp
.933333 .933333 .937255 rgb
f
287.207 213.678 mo
283.635 220.383 li
283.486 220.66 283.203 220.817 282.908 220.817 cv
282.777 220.817 282.646 220.788 282.523 220.721 cv
282.123 220.507 281.969 220.009 282.184 219.608 cv
285.754 212.903 li
287.207 213.678 li
cp
.858824 .360784 .215686 rgb
f
285.445 224.577 mo
282.262 220.502 li
281.982 220.145 282.045 219.628 282.402 219.348 cv
282.762 219.068 283.277 219.131 283.557 219.489 cv
286.74 223.564 li
285.445 224.577 li
cp
.839216 .309804 .0980392 rgb
f
282.91 219.329 mo
283.277 219.329 283.576 219.627 283.576 219.996 cv
283.576 220.364 283.277 220.663 282.91 220.663 cv
282.91 219.329 li
cp
.14902 .188235 .282353 rgb
f
282.91 220.663 mo
282.541 220.663 282.242 220.364 282.242 219.996 cv
282.242 219.627 282.541 219.329 282.91 219.329 cv
282.91 220.663 li
cp
.247059 .278431 .368627 rgb
f
291.225 220.613 mo
288.961 220.613 li
288.961 219.378 li
291.225 219.378 li
291.225 220.613 li
cp
.14902 .188235 .282353 rgb
f
276.777 220.613 mo
274.514 220.613 li
274.514 219.378 li
276.777 219.378 li
276.777 220.613 li
cp
.247059 .278431 .368627 rgb
f
282.91 211.563 mo
282.91 213.825 li
282.293 213.825 li
282.293 211.563 li
282.91 211.563 li
cp
f
283.527 211.563 mo
283.527 213.825 li
282.91 213.825 li
282.91 211.563 li
283.527 211.563 li
cp
.14902 .188235 .282353 rgb
f
282.91 226.164 mo
282.91 228.428 li
282.293 228.428 li
282.293 226.164 li
282.91 226.164 li
cp
.247059 .278431 .368627 rgb
f
283.527 226.164 mo
283.527 228.428 li
282.91 228.428 li
282.91 226.164 li
283.527 226.164 li
cp
.14902 .188235 .282353 rgb
f
217.037 41.4087 mo
208.985 41.4087 li
208.985 78.1099 li
208.985 82.5562 212.589 86.1606 217.037 86.1606 cv
221.484 86.1606 225.088 82.5562 225.088 78.1099 cv
225.088 41.4087 li
217.037 41.4087 li
cp
.286275 .752941 .756863 rgb
f
217.037 86.1606 mo
217.037 86.1606 li
212.589 86.1606 208.985 82.5562 208.985 78.1099 cv
208.985 41.4087 li
217.037 41.4087 li
217.037 86.1606 li
cp
.435294 .803922 .811765 rgb
f
225.42 38.5854 mo
217.037 38.5854 li
208.654 38.5854 li
207.874 38.5854 207.242 39.2178 207.242 39.9971 cv
207.242 40.7764 207.874 41.4087 208.654 41.4087 cv
217.037 41.4087 li
225.42 41.4087 li
226.199 41.4087 226.832 40.7764 226.832 39.9971 cv
226.832 39.2178 226.199 38.5854 225.42 38.5854 cv
cp
f
217.037 41.4087 mo
208.654 41.4087 li
207.874 41.4087 207.242 40.7764 207.242 39.9971 cv
207.242 39.2178 207.874 38.5854 208.654 38.5854 cv
217.037 38.5854 li
217.037 41.4087 li
cp
.639216 .87451 .878431 rgb
f
214.297 62.6157 mo
217.037 62.6157 li
217.037 61.6206 li
214.297 61.6206 li
214.297 62.6157 li
cp
.239216 .27451 .360784 rgb
f
214.297 59.7529 mo
217.037 59.7529 li
217.037 58.7559 li
214.297 58.7559 li
214.297 59.7529 li
cp
f
214.297 50.2056 mo
217.037 50.2056 li
217.037 49.2104 li
214.297 49.2104 li
214.297 50.2056 li
cp
.972549 .419608 .254902 rgb
f
214.297 46.7212 mo
214.297 47.7163 li
217.037 47.7163 li
217.037 46.7212 li
214.297 46.7212 li
cp
f
214.297 77.4736 mo
217.037 77.4736 li
217.037 76.4785 li
214.297 76.4785 li
214.297 77.4736 li
cp
f
214.297 74.9839 mo
217.037 74.9839 li
217.037 73.9893 li
214.297 73.9893 li
214.297 74.9839 li
cp
f
214.297 65.6045 mo
217.037 65.6045 li
217.037 64.6074 li
214.297 64.6074 li
214.297 65.6045 li
cp
.239216 .27451 .360784 rgb
f
217.037 62.6157 mo
219.776 62.6157 li
219.776 61.6206 li
217.037 61.6206 li
217.037 62.6157 li
cp
.858824 .360784 .215686 rgb
f
217.037 59.7529 mo
219.776 59.7529 li
219.776 58.7559 li
217.037 58.7559 li
217.037 59.7529 li
cp
f
217.037 50.2056 mo
219.776 50.2056 li
219.776 49.2104 li
217.037 49.2104 li
217.037 50.2056 li
cp
.14902 .188235 .282353 rgb
f
217.037 46.7212 mo
217.037 47.7163 li
219.776 47.7163 li
219.776 46.7212 li
217.037 46.7212 li
cp
f
217.037 77.4736 mo
219.776 77.4736 li
219.776 76.4785 li
217.037 76.4785 li
217.037 77.4736 li
cp
f
217.037 74.9839 mo
219.776 74.9839 li
219.776 73.9893 li
217.037 73.9893 li
217.037 74.9839 li
cp
f
217.037 65.6045 mo
219.776 65.6045 li
219.776 64.6074 li
217.037 64.6074 li
217.037 65.6045 li
cp
.858824 .360784 .215686 rgb
f
217.6 53.6567 mo
217.41 53.4414 217.222 53.2256 217.037 53.0078 cv
217.037 55.2881 li
218.509 57.0127 219.776 58.8286 219.776 62.1182 cv
219.776 65.4077 218.509 67.2212 217.037 68.9458 cv
217.037 71.228 li
217.222 71.0103 217.41 70.7949 217.6 70.5791 cv
219.404 68.5166 221.271 66.3818 221.271 62.1182 cv
221.271 57.8521 219.404 55.7192 217.6 53.6567 cv
cp
f
217.037 55.2881 mo
217.037 53.0078 li
215.564 51.2832 214.297 49.4717 214.297 46.1802 cv
212.804 46.1802 li
212.804 50.4458 214.669 52.5791 216.474 54.6416 cv
216.665 54.8569 216.851 55.0728 217.037 55.2881 cv
cp
.972549 .419608 .254902 rgb
f
217.037 68.9458 mo
216.851 69.1636 216.665 69.3789 216.474 69.5947 cv
214.669 71.6572 212.804 73.79 212.804 78.0562 cv
214.297 78.0562 li
214.297 74.7642 215.564 72.9526 217.037 71.228 cv
217.037 68.9458 li
cp
f
217.037 68.9458 mo
215.564 67.2212 214.297 65.4077 214.297 62.1182 cv
214.297 58.8286 215.564 57.0127 217.037 55.2881 cv
217.037 53.0078 li
216.851 53.2256 216.665 53.4414 216.474 53.6567 cv
214.669 55.7192 212.804 57.8521 212.804 62.1182 cv
212.804 66.3818 214.669 68.5166 216.474 70.5791 cv
216.665 70.7949 216.851 71.0103 217.037 71.228 cv
217.037 68.9458 li
cp
.239216 .27451 .360784 rgb
f
217.037 55.2881 mo
217.222 55.0728 217.41 54.8569 217.6 54.6416 cv
219.404 52.5791 221.271 50.4458 221.271 46.1802 cv
219.776 46.1802 li
219.776 49.4717 218.509 51.2832 217.037 53.0078 cv
217.037 55.2881 li
cp
.14902 .188235 .282353 rgb
f
217.037 68.9458 mo
217.037 71.228 li
218.509 72.9526 219.776 74.7642 219.776 78.0562 cv
221.271 78.0562 li
221.271 73.79 219.404 71.6572 217.6 69.5947 cv
217.41 69.3789 217.222 69.1636 217.037 68.9458 cv
cp
f
196.178 149.866 mo
188.126 149.866 li
188.126 186.567 li
188.126 191.013 191.731 194.618 196.178 194.618 cv
200.625 194.618 204.23 191.013 204.23 186.567 cv
204.23 149.866 li
196.178 149.866 li
cp
.286275 .752941 .756863 rgb
f
196.178 194.618 mo
196.178 194.618 li
191.731 194.618 188.126 191.013 188.126 186.567 cv
188.126 149.866 li
196.178 149.866 li
196.178 194.618 li
cp
.435294 .803922 .811765 rgb
f
204.562 147.042 mo
196.178 147.042 li
187.796 147.042 li
187.016 147.042 186.383 147.675 186.383 148.454 cv
186.383 149.233 187.016 149.866 187.796 149.866 cv
196.178 149.866 li
204.562 149.866 li
205.341 149.866 205.974 149.233 205.974 148.454 cv
205.974 147.675 205.341 147.042 204.562 147.042 cv
cp
f
196.178 149.866 mo
187.796 149.866 li
187.016 149.866 186.383 149.233 186.383 148.454 cv
186.383 147.675 187.016 147.042 187.796 147.042 cv
196.178 147.042 li
196.178 149.866 li
cp
.639216 .87451 .878431 rgb
f
193.439 171.073 mo
196.178 171.073 li
196.178 170.078 li
193.439 170.078 li
193.439 171.073 li
cp
.239216 .27451 .360784 rgb
f
193.439 168.21 mo
196.178 168.21 li
196.178 167.213 li
193.439 167.213 li
193.439 168.21 li
cp
f
193.439 158.663 mo
196.178 158.663 li
196.178 157.667 li
193.439 157.667 li
193.439 158.663 li
cp
.972549 .419608 .254902 rgb
f
193.439 155.178 mo
193.439 156.173 li
196.178 156.173 li
196.178 155.178 li
193.439 155.178 li
cp
f
193.439 185.931 mo
196.178 185.931 li
196.178 184.936 li
193.439 184.936 li
193.439 185.931 li
cp
f
193.439 183.441 mo
196.178 183.441 li
196.178 182.446 li
193.439 182.446 li
193.439 183.441 li
cp
f
193.439 174.062 mo
196.178 174.062 li
196.178 173.064 li
193.439 173.064 li
193.439 174.062 li
cp
.239216 .27451 .360784 rgb
f
196.178 171.073 mo
198.917 171.073 li
198.917 170.078 li
196.178 170.078 li
196.178 171.073 li
cp
.858824 .360784 .215686 rgb
f
196.178 168.21 mo
198.917 168.21 li
198.917 167.213 li
196.178 167.213 li
196.178 168.21 li
cp
f
196.178 158.663 mo
198.917 158.663 li
198.917 157.667 li
196.178 157.667 li
196.178 158.663 li
cp
.14902 .188235 .282353 rgb
f
196.178 155.178 mo
196.178 156.173 li
198.917 156.173 li
198.917 155.178 li
196.178 155.178 li
cp
f
196.178 185.931 mo
198.917 185.931 li
198.917 184.936 li
196.178 184.936 li
196.178 185.931 li
cp
f
196.178 183.441 mo
198.917 183.441 li
198.917 182.446 li
196.178 182.446 li
196.178 183.441 li
cp
f
196.178 174.062 mo
198.917 174.062 li
198.917 173.064 li
196.178 173.064 li
196.178 174.062 li
cp
.858824 .360784 .215686 rgb
f
196.741 162.114 mo
196.551 161.898 196.364 161.683 196.178 161.465 cv
196.178 163.745 li
197.651 165.47 198.917 167.286 198.917 170.575 cv
198.917 173.865 197.651 175.678 196.178 177.403 cv
196.178 179.685 li
196.364 179.467 196.551 179.252 196.741 179.036 cv
198.545 176.974 200.412 174.839 200.412 170.575 cv
200.412 166.309 198.545 164.176 196.741 162.114 cv
cp
f
196.178 163.745 mo
196.178 161.465 li
194.706 159.74 193.439 157.929 193.439 154.637 cv
191.946 154.637 li
191.946 158.903 193.811 161.036 195.616 163.099 cv
195.806 163.314 195.993 163.53 196.178 163.745 cv
cp
.972549 .419608 .254902 rgb
f
196.178 177.403 mo
195.993 177.621 195.806 177.836 195.616 178.052 cv
193.811 180.114 191.946 182.247 191.946 186.513 cv
193.439 186.513 li
193.439 183.221 194.706 181.41 196.178 179.685 cv
196.178 177.403 li
cp
f
196.178 177.403 mo
194.706 175.678 193.439 173.865 193.439 170.575 cv
193.439 167.286 194.706 165.47 196.178 163.745 cv
196.178 161.465 li
195.993 161.683 195.806 161.898 195.616 162.114 cv
193.811 164.176 191.946 166.309 191.946 170.575 cv
191.946 174.839 193.811 176.974 195.616 179.036 cv
195.806 179.252 195.993 179.467 196.178 179.685 cv
196.178 177.403 li
cp
.239216 .27451 .360784 rgb
f
196.178 163.745 mo
196.364 163.53 196.551 163.314 196.741 163.099 cv
198.545 161.036 200.412 158.903 200.412 154.637 cv
198.917 154.637 li
198.917 157.929 197.651 159.74 196.178 161.465 cv
196.178 163.745 li
cp
.14902 .188235 .282353 rgb
f
196.178 177.403 mo
196.178 179.685 li
197.651 181.41 198.917 183.221 198.917 186.513 cv
200.412 186.513 li
200.412 182.247 198.545 180.114 196.741 178.052 cv
196.551 177.836 196.364 177.621 196.178 177.403 cv
cp
f
273.072 122.091 mo
272.777 122.504 272.346 122.81 271.877 122.963 cv
271.637 123.044 271.385 123.082 271.137 123.081 cv
270.387 123.076 269.645 122.717 269.199 122.091 cv
268.596 121.293 268.596 120.084 269.199 119.286 cv
269.643 118.66 270.387 118.3 271.137 118.296 cv
271.385 118.296 271.637 118.333 271.877 118.414 cv
272.346 118.567 272.777 118.875 273.072 119.286 cv
273.367 119.697 273.527 120.174 273.527 120.689 cv
273.527 121.203 273.367 121.682 273.072 122.091 cv
cp
280.656 121.896 mo
280.275 121.816 279.895 121.741 279.512 121.668 cv
279.551 121.343 279.568 121.016 279.568 120.689 cv
279.568 120.363 279.551 120.034 279.512 119.709 cv
279.895 119.637 280.275 119.563 280.656 119.483 cv
280.803 119.467 280.902 119.309 280.875 119.131 cv
280.807 118.705 280.711 118.283 280.586 117.871 cv
280.537 117.698 280.377 117.598 280.24 117.645 cv
279.863 117.739 279.484 117.836 279.109 117.937 cv
279.004 117.628 278.877 117.326 278.734 117.029 cv
278.592 116.735 278.434 116.448 278.256 116.172 cv
278.57 115.94 278.881 115.707 279.189 115.469 cv
279.314 115.391 279.334 115.204 279.23 115.056 cv
278.986 114.704 278.715 114.368 278.426 114.049 cv
278.307 113.917 278.119 113.896 278.016 113.998 cv
277.715 114.246 277.42 114.498 277.125 114.752 cv
276.895 114.521 276.648 114.3 276.393 114.097 cv
276.139 113.891 275.871 113.703 275.594 113.53 cv
275.773 113.186 275.953 112.84 276.131 112.492 cv
276.207 112.367 276.145 112.192 275.988 112.104 cv
275.613 111.891 275.225 111.703 274.824 111.542 cv
274.658 111.474 274.482 111.536 274.432 111.674 cv
274.27 112.027 274.111 112.384 273.955 112.74 cv
273.646 112.63 273.332 112.539 273.012 112.466 cv
272.693 112.394 272.369 112.34 272.043 112.305 cv
272.057 111.916 272.07 111.527 272.076 111.137 cv
272.09 110.994 271.959 110.86 271.779 110.85 cv
271.566 110.834 271.35 110.828 271.137 110.828 cv
270.922 110.828 270.707 110.834 270.492 110.85 cv
270.314 110.86 270.182 110.994 270.195 111.137 cv
270.201 111.527 270.215 111.916 270.229 112.305 cv
269.902 112.34 269.58 112.394 269.258 112.465 cv
268.941 112.539 268.625 112.63 268.318 112.74 cv
268.162 112.384 268.002 112.027 267.842 111.674 cv
267.791 111.536 267.615 111.474 267.447 111.542 cv
267.047 111.703 266.658 111.891 266.281 112.104 cv
266.127 112.192 266.064 112.367 266.143 112.492 cv
266.32 112.84 266.498 113.186 266.68 113.53 cv
266.402 113.703 266.133 113.891 265.877 114.097 cv
265.623 114.3 265.379 114.521 265.148 114.752 cv
264.854 114.498 264.555 114.246 264.258 113.998 cv
264.152 113.896 263.967 113.917 263.846 114.049 cv
263.559 114.368 263.287 114.704 263.041 115.056 cv
262.938 115.204 262.961 115.391 263.082 115.469 cv
263.391 115.707 263.701 115.94 264.014 116.172 cv
263.838 116.448 263.678 116.734 263.537 117.029 cv
263.395 117.326 263.27 117.628 263.162 117.937 cv
262.787 117.836 262.41 117.739 262.033 117.645 cv
261.896 117.598 261.736 117.698 261.686 117.871 cv
261.561 118.283 261.467 118.705 261.398 119.131 cv
261.369 119.309 261.469 119.467 261.613 119.483 cv
261.996 119.563 262.377 119.637 262.76 119.709 cv
262.723 120.034 262.703 120.363 262.703 120.688 cv
262.703 121.016 262.723 121.343 262.76 121.668 cv
262.377 121.741 261.996 121.816 261.613 121.896 cv
261.469 121.911 261.369 122.07 261.398 122.248 cv
261.467 122.672 261.561 123.094 261.686 123.507 cv
261.736 123.681 261.896 123.779 262.033 123.732 cv
262.41 123.639 262.787 123.542 263.162 123.44 cv
263.27 123.75 263.395 124.053 263.537 124.348 cv
263.678 124.644 263.838 124.93 264.014 125.207 cv
263.701 125.437 263.391 125.672 263.082 125.91 cv
262.961 125.988 262.938 126.175 263.041 126.321 cv
263.287 126.675 263.557 127.011 263.846 127.33 cv
263.967 127.46 264.152 127.482 264.258 127.38 cv
264.555 127.131 264.854 126.879 265.148 126.626 cv
265.379 126.858 265.623 127.077 265.877 127.282 cv
266.133 127.486 266.402 127.674 266.68 127.849 cv
266.498 128.193 266.32 128.539 266.143 128.885 cv
266.064 129.009 266.127 129.186 266.281 129.275 cv
266.658 129.486 267.047 129.674 267.447 129.835 cv
267.615 129.903 267.791 129.841 267.842 129.704 cv
268.002 129.349 268.162 128.995 268.318 128.638 cv
268.625 128.747 268.939 128.84 269.258 128.913 cv
269.58 128.984 269.9 129.038 270.229 129.073 cv
270.215 129.462 270.201 129.852 270.195 130.24 cv
270.182 130.385 270.314 130.519 270.492 130.529 cv
270.707 130.543 270.922 130.551 271.137 130.551 cv
271.35 130.551 271.566 130.543 271.779 130.529 cv
271.959 130.519 272.09 130.385 272.076 130.24 cv
272.07 129.852 272.057 129.462 272.043 129.073 cv
272.369 129.038 272.693 128.984 273.012 128.913 cv
273.332 128.84 273.646 128.747 273.955 128.638 cv
274.111 128.995 274.27 129.349 274.432 129.704 cv
274.482 129.841 274.658 129.903 274.824 129.835 cv
275.225 129.674 275.613 129.486 275.988 129.275 cv
276.145 129.186 276.207 129.009 276.131 128.885 cv
275.953 128.539 275.773 128.193 275.594 127.849 cv
275.871 127.674 276.139 127.486 276.393 127.282 cv
276.648 127.077 276.895 126.858 277.125 126.626 cv
277.42 126.879 277.715 127.131 278.016 127.38 cv
278.119 127.482 278.307 127.46 278.426 127.33 cv
278.715 127.011 278.986 126.675 279.23 126.321 cv
279.334 126.175 279.314 125.988 279.189 125.91 cv
278.881 125.672 278.57 125.437 278.256 125.207 cv
278.434 124.93 278.592 124.644 278.734 124.348 cv
278.877 124.053 279.004 123.75 279.109 123.44 cv
279.484 123.542 279.863 123.639 280.24 123.732 cv
280.377 123.779 280.537 123.681 280.586 123.507 cv
280.711 123.094 280.807 122.672 280.875 122.248 cv
280.902 122.07 280.803 121.911 280.656 121.896 cv
cp
.239216 .27451 .360784 rgb
f
280.656 121.896 mo
280.275 121.816 279.895 121.741 279.512 121.668 cv
279.551 121.343 279.568 121.016 279.568 120.689 cv
279.568 120.363 279.551 120.034 279.512 119.709 cv
279.895 119.637 280.275 119.563 280.656 119.483 cv
280.803 119.467 280.902 119.309 280.875 119.131 cv
280.807 118.705 280.711 118.283 280.586 117.871 cv
280.537 117.698 280.377 117.598 280.24 117.645 cv
279.863 117.739 279.484 117.836 279.109 117.937 cv
279.004 117.628 278.877 117.326 278.734 117.029 cv
278.592 116.735 278.434 116.448 278.256 116.172 cv
278.57 115.94 278.881 115.707 279.189 115.469 cv
279.314 115.391 279.334 115.204 279.23 115.056 cv
278.986 114.704 278.715 114.368 278.426 114.049 cv
278.307 113.917 278.119 113.896 278.016 113.998 cv
277.715 114.246 277.42 114.498 277.125 114.752 cv
276.895 114.521 276.648 114.3 276.393 114.097 cv
276.139 113.891 275.871 113.703 275.594 113.53 cv
275.773 113.186 275.953 112.84 276.131 112.492 cv
276.207 112.367 276.145 112.192 275.988 112.104 cv
275.613 111.891 275.225 111.703 274.824 111.542 cv
274.658 111.474 274.482 111.536 274.432 111.674 cv
274.27 112.027 274.111 112.384 273.955 112.74 cv
273.646 112.63 273.332 112.539 273.012 112.466 cv
272.693 112.394 272.369 112.34 272.043 112.305 cv
272.057 111.916 272.07 111.527 272.076 111.137 cv
272.09 110.994 271.959 110.86 271.779 110.85 cv
271.566 110.834 271.35 110.828 271.137 110.828 cv
271.137 118.296 li
271.385 118.296 271.637 118.333 271.877 118.414 cv
272.346 118.567 272.777 118.875 273.072 119.286 cv
273.367 119.697 273.527 120.174 273.527 120.689 cv
273.527 121.203 273.367 121.682 273.072 122.091 cv
272.777 122.504 272.346 122.81 271.877 122.963 cv
271.637 123.044 271.385 123.082 271.137 123.081 cv
271.137 130.551 li
271.35 130.551 271.566 130.543 271.779 130.529 cv
271.959 130.519 272.09 130.385 272.076 130.24 cv
272.07 129.852 272.057 129.462 272.043 129.073 cv
272.369 129.038 272.693 128.984 273.012 128.913 cv
273.332 128.84 273.646 128.747 273.955 128.638 cv
274.111 128.995 274.27 129.349 274.432 129.704 cv
274.482 129.841 274.658 129.903 274.824 129.835 cv
275.225 129.674 275.613 129.486 275.988 129.275 cv
276.145 129.186 276.207 129.009 276.131 128.885 cv
275.953 128.539 275.773 128.193 275.594 127.849 cv
275.871 127.674 276.139 127.486 276.393 127.282 cv
276.648 127.077 276.895 126.858 277.125 126.626 cv
277.42 126.879 277.715 127.131 278.016 127.38 cv
278.119 127.482 278.307 127.46 278.426 127.33 cv
278.715 127.011 278.986 126.675 279.23 126.321 cv
279.334 126.175 279.314 125.988 279.189 125.91 cv
278.881 125.672 278.57 125.437 278.256 125.207 cv
278.434 124.93 278.592 124.644 278.734 124.348 cv
278.877 124.053 279.004 123.75 279.109 123.44 cv
279.484 123.542 279.863 123.639 280.24 123.732 cv
280.377 123.779 280.537 123.681 280.586 123.507 cv
280.711 123.094 280.807 122.672 280.875 122.248 cv
280.902 122.07 280.803 121.911 280.656 121.896 cv
cp
.14902 .188235 .282353 rgb
f
282.525 106.591 mo
282.262 106.964 281.867 107.24 281.447 107.378 cv
281.229 107.452 281.004 107.485 280.777 107.484 cv
280.1 107.481 279.43 107.157 279.027 106.591 cv
278.482 105.87 278.482 104.778 279.027 104.059 cv
279.428 103.492 280.1 103.168 280.777 103.166 cv
281.004 103.164 281.229 103.199 281.447 103.271 cv
281.867 103.411 282.262 103.688 282.525 104.059 cv
282.793 104.429 282.936 104.859 282.936 105.325 cv
282.936 105.79 282.793 106.22 282.525 106.591 cv
cp
289.375 106.413 mo
289.031 106.343 288.688 106.275 288.34 106.21 cv
288.375 105.915 288.393 105.621 288.393 105.325 cv
288.393 105.031 288.375 104.734 288.34 104.441 cv
288.688 104.376 289.031 104.308 289.375 104.236 cv
289.506 104.221 289.596 104.078 289.57 103.918 cv
289.51 103.535 289.424 103.152 289.311 102.782 cv
289.266 102.625 289.121 102.534 288.998 102.577 cv
288.656 102.661 288.316 102.749 287.977 102.84 cv
287.881 102.56 287.768 102.288 287.639 102.019 cv
287.51 101.754 287.367 101.495 287.207 101.246 cv
287.488 101.038 287.771 100.825 288.049 100.612 cv
288.16 100.541 288.18 100.373 288.086 100.24 cv
287.867 99.9204 287.621 99.6177 287.361 99.3301 cv
287.25 99.2095 287.082 99.1919 286.99 99.2837 cv
286.719 99.5078 286.451 99.7349 286.186 99.9639 cv
285.977 99.7549 285.754 99.5576 285.523 99.3721 cv
285.295 99.1875 285.053 99.0166 284.801 98.8604 cv
284.967 98.5503 285.129 98.2383 285.285 97.9238 cv
285.355 97.811 285.301 97.6528 285.16 97.5732 cv
284.818 97.3804 284.469 97.2114 284.107 97.0659 cv
283.959 97.0049 283.799 97.061 283.754 97.1846 cv
283.607 97.5034 283.463 97.8262 283.322 98.1484 cv
283.045 98.0488 282.762 97.9658 282.471 97.9009 cv
282.184 97.8364 281.893 97.7866 281.596 97.7549 cv
281.611 97.4033 281.619 97.0518 281.625 96.7012 cv
281.639 96.5718 281.521 96.4512 281.357 96.4409 cv
281.164 96.4272 280.973 96.4209 280.777 96.4209 cv
280.584 96.4209 280.391 96.4272 280.197 96.4409 cv
280.035 96.4512 279.914 96.5718 279.93 96.7012 cv
279.936 97.0518 279.943 97.4033 279.957 97.7549 cv
279.664 97.7866 279.371 97.8364 279.082 97.8994 cv
278.795 97.9658 278.51 98.0488 278.232 98.1484 cv
278.092 97.8262 277.947 97.5034 277.801 97.1846 cv
277.758 97.061 277.598 97.0049 277.447 97.0659 cv
277.086 97.2114 276.734 97.3804 276.395 97.5732 cv
276.254 97.6528 276.199 97.811 276.27 97.9238 cv
276.428 98.2383 276.588 98.5503 276.754 98.8604 cv
276.504 99.0166 276.26 99.1875 276.031 99.3721 cv
275.801 99.5576 275.578 99.7549 275.371 99.9639 cv
275.104 99.7349 274.836 99.5078 274.564 99.2837 cv
274.473 99.1919 274.305 99.2095 274.193 99.3301 cv
273.936 99.6177 273.689 99.9204 273.469 100.24 cv
273.375 100.373 273.396 100.541 273.506 100.612 cv
273.783 100.825 274.066 101.038 274.348 101.246 cv
274.189 101.495 274.045 101.754 273.916 102.019 cv
273.787 102.288 273.676 102.56 273.578 102.84 cv
273.24 102.749 272.898 102.661 272.557 102.577 cv
272.434 102.534 272.289 102.625 272.244 102.782 cv
272.131 103.152 272.047 103.535 271.984 103.918 cv
271.959 104.078 272.049 104.221 272.18 104.236 cv
272.523 104.308 272.869 104.376 273.215 104.441 cv
273.18 104.734 273.164 105.029 273.162 105.325 cv
273.164 105.621 273.18 105.915 273.215 106.21 cv
272.869 106.275 272.523 106.343 272.18 106.413 cv
272.049 106.428 271.959 106.573 271.984 106.732 cv
272.047 107.116 272.131 107.497 272.244 107.869 cv
272.289 108.026 272.434 108.116 272.557 108.072 cv
272.898 107.988 273.24 107.901 273.578 107.811 cv
273.676 108.089 273.787 108.363 273.916 108.63 cv
274.045 108.895 274.189 109.154 274.348 109.404 cv
274.066 109.613 273.783 109.826 273.506 110.039 cv
273.396 110.11 273.375 110.278 273.469 110.411 cv
273.689 110.729 273.936 111.033 274.193 111.32 cv
274.305 111.439 274.473 111.459 274.564 111.366 cv
274.836 111.141 275.104 110.915 275.369 110.687 cv
275.578 110.896 275.801 111.091 276.031 111.277 cv
276.26 111.463 276.504 111.632 276.754 111.789 cv
276.588 112.099 276.428 112.413 276.27 112.726 cv
276.199 112.838 276.254 112.998 276.395 113.078 cv
276.734 113.269 277.086 113.439 277.447 113.583 cv
277.598 113.646 277.758 113.588 277.801 113.465 cv
277.947 113.144 278.092 112.825 278.232 112.502 cv
278.51 112.601 278.793 112.685 279.082 112.75 cv
279.371 112.814 279.662 112.864 279.957 112.896 cv
279.943 113.246 279.936 113.598 279.93 113.948 cv
279.914 114.079 280.035 114.201 280.197 114.21 cv
280.391 114.222 280.584 114.228 280.777 114.228 cv
280.973 114.228 281.164 114.222 281.357 114.21 cv
281.521 114.201 281.639 114.079 281.625 113.948 cv
281.619 113.598 281.611 113.246 281.596 112.896 cv
281.893 112.864 282.184 112.814 282.471 112.75 cv
282.762 112.685 283.045 112.601 283.322 112.502 cv
283.463 112.825 283.607 113.144 283.754 113.465 cv
283.799 113.588 283.959 113.646 284.107 113.583 cv
284.469 113.439 284.818 113.269 285.16 113.078 cv
285.301 112.998 285.355 112.838 285.285 112.726 cv
285.129 112.413 284.967 112.099 284.801 111.789 cv
285.051 111.632 285.295 111.463 285.523 111.277 cv
285.754 111.093 285.977 110.896 286.186 110.687 cv
286.451 110.915 286.719 111.141 286.99 111.366 cv
287.082 111.459 287.25 111.439 287.361 111.32 cv
287.621 111.033 287.867 110.729 288.086 110.411 cv
288.18 110.278 288.16 110.11 288.049 110.039 cv
287.771 109.826 287.488 109.613 287.207 109.404 cv
287.367 109.154 287.51 108.895 287.639 108.63 cv
287.768 108.363 287.881 108.089 287.977 107.811 cv
288.316 107.901 288.656 107.988 288.998 108.072 cv
289.121 108.116 289.266 108.026 289.311 107.869 cv
289.424 107.497 289.51 107.116 289.57 106.732 cv
289.596 106.573 289.506 106.428 289.375 106.413 cv
cp
.972549 .419608 .254902 rgb
f
289.375 106.413 mo
289.031 106.343 288.688 106.275 288.34 106.21 cv
288.375 105.915 288.393 105.621 288.393 105.325 cv
288.393 105.031 288.375 104.734 288.34 104.441 cv
288.688 104.376 289.031 104.308 289.375 104.236 cv
289.506 104.221 289.596 104.078 289.57 103.918 cv
289.51 103.535 289.424 103.152 289.311 102.782 cv
289.266 102.625 289.121 102.534 288.998 102.577 cv
288.656 102.661 288.316 102.749 287.977 102.84 cv
287.881 102.56 287.768 102.288 287.639 102.019 cv
287.51 101.754 287.367 101.495 287.207 101.246 cv
287.488 101.038 287.771 100.825 288.049 100.612 cv
288.16 100.541 288.18 100.373 288.086 100.24 cv
287.867 99.9204 287.621 99.6177 287.361 99.3301 cv
287.25 99.2095 287.082 99.1919 286.99 99.2837 cv
286.719 99.5078 286.451 99.7349 286.186 99.9639 cv
285.977 99.7549 285.754 99.5576 285.523 99.3721 cv
285.295 99.1875 285.053 99.0166 284.801 98.8604 cv
284.967 98.5503 285.129 98.2383 285.285 97.9238 cv
285.355 97.811 285.301 97.6528 285.16 97.5732 cv
284.818 97.3804 284.469 97.2114 284.107 97.0659 cv
283.959 97.0049 283.799 97.061 283.754 97.1846 cv
283.607 97.5034 283.463 97.8262 283.322 98.1484 cv
283.045 98.0488 282.762 97.9658 282.471 97.9009 cv
282.184 97.8364 281.893 97.7866 281.596 97.7549 cv
281.611 97.4033 281.619 97.0518 281.625 96.7012 cv
281.639 96.5718 281.521 96.4512 281.357 96.4409 cv
281.164 96.4272 280.973 96.4209 280.777 96.4209 cv
280.777 103.166 li
281.004 103.164 281.229 103.199 281.447 103.271 cv
281.867 103.411 282.262 103.688 282.525 104.059 cv
282.793 104.429 282.936 104.859 282.936 105.325 cv
282.936 105.79 282.793 106.22 282.525 106.591 cv
282.262 106.964 281.867 107.24 281.447 107.378 cv
281.229 107.452 281.004 107.485 280.777 107.484 cv
280.777 114.228 li
280.973 114.228 281.164 114.222 281.357 114.21 cv
281.521 114.201 281.639 114.079 281.625 113.948 cv
281.619 113.598 281.611 113.246 281.596 112.896 cv
281.893 112.864 282.184 112.814 282.471 112.75 cv
282.762 112.685 283.045 112.601 283.322 112.502 cv
283.463 112.825 283.607 113.144 283.754 113.465 cv
283.799 113.588 283.959 113.646 284.107 113.583 cv
284.469 113.439 284.818 113.269 285.16 113.078 cv
285.301 112.998 285.355 112.838 285.285 112.726 cv
285.129 112.413 284.967 112.099 284.801 111.789 cv
285.051 111.632 285.295 111.463 285.523 111.277 cv
285.754 111.093 285.977 110.896 286.186 110.687 cv
286.451 110.915 286.719 111.141 286.99 111.366 cv
287.082 111.459 287.25 111.439 287.361 111.32 cv
287.621 111.033 287.867 110.729 288.086 110.411 cv
288.18 110.278 288.16 110.11 288.049 110.039 cv
287.771 109.826 287.488 109.613 287.207 109.404 cv
287.367 109.154 287.51 108.895 287.639 108.63 cv
287.768 108.363 287.881 108.089 287.977 107.811 cv
288.316 107.901 288.656 107.988 288.998 108.072 cv
289.121 108.116 289.266 108.026 289.311 107.869 cv
289.424 107.497 289.51 107.116 289.57 106.732 cv
289.596 106.573 289.506 106.428 289.375 106.413 cv
cp
.858824 .360784 .215686 rgb
f
298.896 198.329 mo
298.602 198.742 298.168 199.047 297.699 199.201 cv
297.459 199.283 297.209 199.32 296.959 199.318 cv
296.209 199.313 295.467 198.955 295.023 198.329 cv
294.418 197.531 294.418 196.321 295.023 195.523 cv
295.467 194.897 296.209 194.538 296.959 194.534 cv
297.209 194.534 297.459 194.57 297.699 194.652 cv
298.168 194.805 298.602 195.113 298.896 195.523 cv
299.189 195.935 299.35 196.412 299.35 196.927 cv
299.35 197.44 299.189 197.918 298.896 198.329 cv
cp
306.48 198.133 mo
306.102 198.053 305.719 197.979 305.336 197.906 cv
305.373 197.581 305.395 197.254 305.395 196.927 cv
305.395 196.6 305.373 196.272 305.336 195.947 cv
305.719 195.875 306.102 195.801 306.48 195.721 cv
306.627 195.705 306.727 195.546 306.697 195.369 cv
306.631 194.942 306.537 194.521 306.412 194.108 cv
306.361 193.935 306.201 193.836 306.064 193.882 cv
305.686 193.977 305.309 194.074 304.934 194.175 cv
304.826 193.866 304.701 193.563 304.559 193.267 cv
304.416 192.973 304.256 192.686 304.08 192.41 cv
304.395 192.178 304.705 191.944 305.016 191.707 cv
305.137 191.628 305.16 191.441 305.055 191.294 cv
304.809 190.941 304.541 190.606 304.252 190.287 cv
304.129 190.154 303.943 190.133 303.84 190.235 cv
303.539 190.484 303.242 190.735 302.947 190.99 cv
302.719 190.758 302.473 190.538 302.219 190.335 cv
301.961 190.128 301.695 189.94 301.416 189.767 cv
301.6 189.424 301.777 189.078 301.953 188.73 cv
302.029 188.605 301.971 188.43 301.813 188.341 cv
301.438 188.129 301.047 187.94 300.648 187.779 cv
300.484 187.711 300.305 187.774 300.258 187.912 cv
300.094 188.265 299.934 188.622 299.781 188.978 cv
299.473 188.868 299.156 188.776 298.836 188.704 cv
298.516 188.632 298.195 188.578 297.867 188.543 cv
297.883 188.153 297.895 187.765 297.898 187.375 cv
297.916 187.232 297.783 187.098 297.604 187.087 cv
297.389 187.072 297.176 187.066 296.959 187.066 cv
296.746 187.066 296.531 187.072 296.316 187.087 cv
296.139 187.098 296.006 187.232 296.021 187.375 cv
296.027 187.765 296.037 188.153 296.053 188.543 cv
295.727 188.578 295.402 188.632 295.084 188.702 cv
294.766 188.776 294.449 188.868 294.141 188.978 cv
293.984 188.622 293.826 188.265 293.664 187.912 cv
293.615 187.774 293.438 187.711 293.27 187.779 cv
292.871 187.94 292.482 188.129 292.107 188.341 cv
291.951 188.43 291.891 188.605 291.967 188.73 cv
292.143 189.078 292.32 189.424 292.504 189.767 cv
292.225 189.94 291.959 190.128 291.703 190.335 cv
291.447 190.538 291.201 190.758 290.973 190.99 cv
290.678 190.735 290.381 190.484 290.08 190.235 cv
289.977 190.133 289.791 190.154 289.67 190.287 cv
289.381 190.606 289.109 190.941 288.865 191.294 cv
288.762 191.441 288.785 191.628 288.906 191.707 cv
289.215 191.944 289.525 192.178 289.84 192.41 cv
289.664 192.686 289.504 192.971 289.361 193.267 cv
289.221 193.563 289.096 193.866 288.988 194.175 cv
288.613 194.074 288.234 193.977 287.855 193.882 cv
287.719 193.836 287.559 193.935 287.508 194.108 cv
287.383 194.521 287.291 194.942 287.223 195.369 cv
287.195 195.546 287.295 195.705 287.438 195.721 cv
287.82 195.801 288.201 195.875 288.584 195.947 cv
288.547 196.272 288.527 196.6 288.525 196.926 cv
288.527 197.254 288.547 197.581 288.584 197.906 cv
288.201 197.979 287.82 198.053 287.438 198.133 cv
287.295 198.149 287.195 198.308 287.223 198.485 cv
287.291 198.91 287.383 199.333 287.508 199.745 cv
287.559 199.919 287.719 200.016 287.855 199.971 cv
288.234 199.877 288.613 199.779 288.988 199.679 cv
289.096 199.988 289.221 200.291 289.361 200.586 cv
289.504 200.881 289.664 201.167 289.838 201.444 cv
289.525 201.675 289.215 201.909 288.906 202.147 cv
288.785 202.226 288.762 202.413 288.865 202.559 cv
289.109 202.912 289.381 203.248 289.67 203.567 cv
289.791 203.698 289.977 203.719 290.08 203.617 cv
290.381 203.368 290.678 203.117 290.971 202.864 cv
291.201 203.097 291.447 203.314 291.703 203.52 cv
291.959 203.725 292.225 203.912 292.504 204.087 cv
292.32 204.43 292.143 204.776 291.967 205.123 cv
291.891 205.246 291.951 205.424 292.107 205.514 cv
292.482 205.724 292.871 205.912 293.27 206.073 cv
293.438 206.142 293.615 206.079 293.664 205.942 cv
293.826 205.586 293.984 205.232 294.141 204.876 cv
294.449 204.985 294.766 205.078 295.084 205.151 cv
295.402 205.222 295.727 205.275 296.053 205.311 cv
296.037 205.7 296.027 206.09 296.021 206.478 cv
296.006 206.623 296.139 206.757 296.316 206.768 cv
296.531 206.78 296.746 206.788 296.959 206.788 cv
297.176 206.788 297.389 206.78 297.604 206.768 cv
297.783 206.757 297.916 206.623 297.898 206.478 cv
297.895 206.09 297.883 205.7 297.867 205.311 cv
298.195 205.275 298.516 205.222 298.836 205.151 cv
299.156 205.078 299.473 204.985 299.781 204.876 cv
299.934 205.232 300.094 205.586 300.258 205.942 cv
300.305 206.079 300.484 206.142 300.648 206.073 cv
301.047 205.912 301.438 205.724 301.813 205.514 cv
301.971 205.424 302.029 205.246 301.953 205.123 cv
301.777 204.776 301.6 204.43 301.416 204.087 cv
301.693 203.912 301.961 203.725 302.219 203.52 cv
302.473 203.314 302.719 203.097 302.947 202.864 cv
303.242 203.117 303.539 203.368 303.84 203.617 cv
303.943 203.719 304.129 203.698 304.252 203.567 cv
304.541 203.248 304.809 202.912 305.055 202.559 cv
305.16 202.413 305.137 202.226 305.016 202.147 cv
304.705 201.909 304.395 201.675 304.08 201.444 cv
304.256 201.167 304.416 200.881 304.559 200.586 cv
304.701 200.291 304.826 199.988 304.934 199.679 cv
305.309 199.779 305.686 199.877 306.064 199.971 cv
306.201 200.016 306.361 199.919 306.412 199.745 cv
306.537 199.333 306.631 198.91 306.697 198.485 cv
306.727 198.308 306.627 198.149 306.48 198.133 cv
cp
.239216 .27451 .360784 rgb
f
306.48 198.133 mo
306.102 198.053 305.719 197.979 305.336 197.906 cv
305.373 197.581 305.395 197.254 305.395 196.927 cv
305.395 196.6 305.373 196.272 305.336 195.947 cv
305.719 195.875 306.102 195.801 306.48 195.721 cv
306.627 195.705 306.727 195.546 306.697 195.369 cv
306.631 194.942 306.537 194.521 306.412 194.108 cv
306.361 193.935 306.201 193.836 306.064 193.882 cv
305.686 193.977 305.309 194.074 304.934 194.175 cv
304.826 193.866 304.701 193.563 304.559 193.267 cv
304.416 192.973 304.256 192.686 304.08 192.41 cv
304.395 192.178 304.705 191.944 305.016 191.707 cv
305.137 191.628 305.16 191.441 305.055 191.294 cv
304.809 190.941 304.541 190.606 304.252 190.287 cv
304.129 190.154 303.943 190.133 303.84 190.235 cv
303.539 190.484 303.242 190.735 302.947 190.99 cv
302.719 190.758 302.473 190.538 302.219 190.335 cv
301.961 190.128 301.695 189.94 301.416 189.767 cv
301.6 189.424 301.777 189.078 301.953 188.73 cv
302.029 188.605 301.971 188.43 301.813 188.341 cv
301.438 188.129 301.047 187.94 300.648 187.779 cv
300.484 187.711 300.305 187.774 300.258 187.912 cv
300.094 188.265 299.934 188.622 299.781 188.978 cv
299.473 188.868 299.156 188.776 298.836 188.704 cv
298.516 188.632 298.195 188.578 297.867 188.543 cv
297.883 188.153 297.895 187.765 297.898 187.375 cv
297.916 187.232 297.783 187.098 297.604 187.087 cv
297.389 187.072 297.176 187.066 296.959 187.066 cv
296.959 194.534 li
297.209 194.534 297.459 194.57 297.699 194.652 cv
298.168 194.805 298.602 195.113 298.896 195.523 cv
299.189 195.935 299.35 196.412 299.35 196.927 cv
299.35 197.44 299.189 197.918 298.896 198.329 cv
298.602 198.742 298.168 199.047 297.699 199.201 cv
297.459 199.283 297.209 199.32 296.959 199.318 cv
296.959 206.788 li
297.176 206.788 297.389 206.78 297.604 206.768 cv
297.783 206.757 297.916 206.623 297.898 206.478 cv
297.895 206.09 297.883 205.7 297.867 205.311 cv
298.195 205.275 298.516 205.222 298.836 205.151 cv
299.156 205.078 299.473 204.985 299.781 204.876 cv
299.934 205.232 300.094 205.586 300.258 205.942 cv
300.305 206.079 300.484 206.142 300.648 206.073 cv
301.047 205.912 301.438 205.724 301.813 205.514 cv
301.971 205.424 302.029 205.246 301.953 205.123 cv
301.777 204.776 301.6 204.43 301.416 204.087 cv
301.693 203.912 301.961 203.725 302.219 203.52 cv
302.473 203.314 302.719 203.097 302.947 202.864 cv
303.242 203.117 303.539 203.368 303.84 203.617 cv
303.943 203.719 304.129 203.698 304.252 203.567 cv
304.541 203.248 304.809 202.912 305.055 202.559 cv
305.16 202.413 305.137 202.226 305.016 202.147 cv
304.705 201.909 304.395 201.675 304.08 201.444 cv
304.256 201.167 304.416 200.881 304.559 200.586 cv
304.701 200.291 304.826 199.988 304.934 199.679 cv
305.309 199.779 305.686 199.877 306.064 199.971 cv
306.201 200.016 306.361 199.919 306.412 199.745 cv
306.537 199.333 306.631 198.91 306.697 198.485 cv
306.727 198.308 306.627 198.149 306.48 198.133 cv
cp
.14902 .188235 .282353 rgb
f
308.35 182.829 mo
308.084 183.202 307.693 183.478 307.27 183.616 cv
307.053 183.69 306.826 183.723 306.602 183.721 cv
305.924 183.719 305.254 183.395 304.854 182.829 cv
304.309 182.107 304.309 181.016 304.854 180.296 cv
305.254 179.729 305.924 179.406 306.602 179.403 cv
306.826 179.402 307.053 179.437 307.27 179.508 cv
307.693 179.648 308.084 179.926 308.35 180.296 cv
308.615 180.667 308.758 181.097 308.76 181.563 cv
308.758 182.027 308.615 182.458 308.35 182.829 cv
cp
315.199 182.651 mo
314.854 182.58 314.51 182.512 314.164 182.448 cv
314.197 182.153 314.217 181.859 314.217 181.563 cv
314.217 181.269 314.197 180.972 314.164 180.679 cv
314.51 180.614 314.854 180.546 315.199 180.474 cv
315.328 180.459 315.418 180.316 315.395 180.156 cv
315.334 179.772 315.248 179.39 315.137 179.019 cv
315.09 178.863 314.945 178.772 314.82 178.814 cv
314.48 178.898 314.139 178.986 313.801 179.078 cv
313.703 178.798 313.592 178.525 313.463 178.257 cv
313.336 177.992 313.189 177.733 313.031 177.483 cv
313.314 177.275 313.594 177.063 313.873 176.85 cv
313.984 176.778 314.004 176.61 313.912 176.478 cv
313.689 176.158 313.445 175.855 313.184 175.568 cv
313.074 175.447 312.908 175.43 312.814 175.521 cv
312.543 175.746 312.273 175.973 312.008 176.202 cv
311.801 175.992 311.58 175.795 311.35 175.61 cv
311.117 175.425 310.877 175.254 310.625 175.098 cv
310.789 174.788 310.951 174.476 311.111 174.162 cv
311.18 174.049 311.123 173.891 310.982 173.811 cv
310.645 173.618 310.293 173.449 309.932 173.303 cv
309.783 173.243 309.623 173.299 309.578 173.422 cv
309.432 173.741 309.287 174.063 309.148 174.386 cv
308.871 174.287 308.584 174.204 308.297 174.139 cv
308.008 174.074 307.715 174.024 307.422 173.993 cv
307.434 173.641 307.443 173.29 307.451 172.938 cv
307.463 172.81 307.344 172.689 307.184 172.679 cv
306.99 172.665 306.795 172.659 306.602 172.659 cv
306.408 172.659 306.215 172.665 306.02 172.679 cv
305.857 172.689 305.74 172.81 305.752 172.938 cv
305.76 173.29 305.77 173.641 305.781 173.993 cv
305.49 174.024 305.195 174.074 304.906 174.137 cv
304.619 174.204 304.334 174.287 304.057 174.386 cv
303.916 174.063 303.771 173.741 303.625 173.422 cv
303.58 173.299 303.42 173.243 303.271 173.303 cv
302.908 173.449 302.559 173.618 302.221 173.811 cv
302.08 173.891 302.023 174.049 302.094 174.162 cv
302.252 174.476 302.414 174.788 302.58 175.098 cv
302.328 175.254 302.086 175.425 301.854 175.61 cv
301.623 175.795 301.402 175.992 301.197 176.202 cv
300.93 175.973 300.66 175.746 300.391 175.521 cv
300.295 175.43 300.129 175.447 300.02 175.568 cv
299.758 175.855 299.514 176.158 299.291 176.478 cv
299.199 176.61 299.221 176.778 299.328 176.85 cv
299.609 177.063 299.889 177.275 300.172 177.483 cv
300.014 177.733 299.869 177.992 299.742 178.257 cv
299.613 178.525 299.498 178.798 299.402 179.078 cv
299.064 178.986 298.723 178.898 298.381 178.814 cv
298.258 178.772 298.115 178.863 298.066 179.019 cv
297.955 179.39 297.869 179.772 297.811 180.156 cv
297.785 180.316 297.873 180.459 298.004 180.474 cv
298.348 180.546 298.693 180.614 299.039 180.679 cv
299.006 180.972 298.986 181.267 298.986 181.563 cv
298.986 181.859 299.006 182.153 299.039 182.448 cv
298.693 182.512 298.348 182.58 298.004 182.651 cv
297.873 182.666 297.785 182.811 297.811 182.97 cv
297.869 183.354 297.955 183.735 298.066 184.107 cv
298.115 184.264 298.258 184.354 298.381 184.31 cv
298.723 184.226 299.064 184.139 299.402 184.048 cv
299.498 184.327 299.613 184.601 299.742 184.868 cv
299.869 185.132 300.014 185.392 300.17 185.642 cv
299.889 185.851 299.609 186.063 299.328 186.277 cv
299.221 186.348 299.199 186.516 299.291 186.649 cv
299.514 186.966 299.758 187.271 300.02 187.558 cv
300.129 187.677 300.295 187.697 300.391 187.604 cv
300.66 187.379 300.93 187.153 301.195 186.924 cv
301.402 187.134 301.623 187.329 301.854 187.515 cv
302.086 187.701 302.328 187.87 302.58 188.027 cv
302.414 188.336 302.252 188.65 302.094 188.963 cv
302.023 189.076 302.08 189.236 302.221 189.315 cv
302.559 189.507 302.908 189.677 303.271 189.821 cv
303.42 189.883 303.58 189.826 303.625 189.703 cv
303.771 189.382 303.916 189.063 304.057 188.74 cv
304.334 188.838 304.619 188.923 304.906 188.987 cv
305.195 189.052 305.488 189.102 305.781 189.133 cv
305.77 189.484 305.76 189.835 305.752 190.186 cv
305.74 190.316 305.857 190.439 306.02 190.448 cv
306.215 190.459 306.408 190.466 306.602 190.466 cv
306.795 190.466 306.99 190.459 307.184 190.448 cv
307.344 190.439 307.463 190.316 307.451 190.186 cv
307.443 189.835 307.434 189.484 307.422 189.133 cv
307.715 189.102 308.008 189.052 308.297 188.987 cv
308.584 188.923 308.871 188.838 309.148 188.74 cv
309.287 189.063 309.432 189.382 309.578 189.703 cv
309.623 189.826 309.783 189.883 309.932 189.821 cv
310.293 189.677 310.645 189.507 310.982 189.315 cv
311.123 189.236 311.18 189.076 311.111 188.963 cv
310.951 188.65 310.789 188.336 310.625 188.027 cv
310.877 187.87 311.117 187.701 311.35 187.515 cv
311.58 187.331 311.801 187.134 312.008 186.924 cv
312.273 187.153 312.543 187.379 312.814 187.604 cv
312.908 187.697 313.074 187.677 313.184 187.558 cv
313.445 187.271 313.689 186.966 313.912 186.649 cv
314.004 186.516 313.984 186.348 313.873 186.277 cv
313.594 186.063 313.314 185.851 313.031 185.642 cv
313.189 185.392 313.336 185.132 313.463 184.868 cv
313.592 184.601 313.703 184.327 313.801 184.048 cv
314.139 184.139 314.48 184.226 314.82 184.31 cv
314.945 184.354 315.09 184.264 315.137 184.107 cv
315.248 183.735 315.334 183.354 315.395 182.97 cv
315.418 182.811 315.328 182.666 315.199 182.651 cv
cp
.972549 .419608 .254902 rgb
f
315.199 182.651 mo
314.854 182.58 314.51 182.512 314.164 182.448 cv
314.197 182.153 314.217 181.859 314.217 181.563 cv
314.217 181.269 314.197 180.972 314.164 180.679 cv
314.51 180.614 314.854 180.546 315.199 180.474 cv
315.328 180.459 315.418 180.316 315.395 180.156 cv
315.334 179.772 315.248 179.39 315.137 179.019 cv
315.09 178.863 314.945 178.772 314.82 178.814 cv
314.48 178.898 314.139 178.986 313.801 179.078 cv
313.703 178.798 313.592 178.525 313.463 178.257 cv
313.336 177.992 313.189 177.733 313.031 177.483 cv
313.314 177.275 313.594 177.063 313.873 176.85 cv
313.984 176.778 314.004 176.61 313.912 176.478 cv
313.689 176.158 313.445 175.855 313.184 175.568 cv
313.074 175.447 312.908 175.43 312.814 175.521 cv
312.543 175.746 312.273 175.973 312.008 176.202 cv
311.801 175.992 311.58 175.795 311.35 175.61 cv
311.117 175.425 310.877 175.254 310.625 175.098 cv
310.789 174.788 310.951 174.476 311.111 174.162 cv
311.18 174.049 311.123 173.891 310.982 173.811 cv
310.645 173.618 310.293 173.449 309.932 173.303 cv
309.783 173.243 309.623 173.299 309.578 173.422 cv
309.432 173.741 309.287 174.063 309.148 174.386 cv
308.871 174.287 308.584 174.204 308.297 174.139 cv
308.008 174.074 307.715 174.024 307.422 173.993 cv
307.434 173.641 307.443 173.29 307.451 172.938 cv
307.463 172.81 307.344 172.689 307.184 172.679 cv
306.99 172.665 306.795 172.659 306.602 172.659 cv
306.602 179.403 li
306.826 179.402 307.053 179.437 307.27 179.508 cv
307.693 179.648 308.084 179.926 308.35 180.296 cv
308.615 180.667 308.758 181.097 308.76 181.563 cv
308.758 182.027 308.615 182.458 308.35 182.829 cv
308.084 183.202 307.693 183.478 307.27 183.616 cv
307.053 183.69 306.826 183.723 306.602 183.721 cv
306.602 190.466 li
306.795 190.466 306.99 190.459 307.184 190.448 cv
307.344 190.439 307.463 190.316 307.451 190.186 cv
307.443 189.835 307.434 189.484 307.422 189.133 cv
307.715 189.102 308.008 189.052 308.297 188.987 cv
308.584 188.923 308.871 188.838 309.148 188.74 cv
309.287 189.063 309.432 189.382 309.578 189.703 cv
309.623 189.826 309.783 189.883 309.932 189.821 cv
310.293 189.677 310.645 189.507 310.982 189.315 cv
311.123 189.236 311.18 189.076 311.111 188.963 cv
310.951 188.65 310.789 188.336 310.625 188.027 cv
310.877 187.87 311.117 187.701 311.35 187.515 cv
311.58 187.331 311.801 187.134 312.008 186.924 cv
312.273 187.153 312.543 187.379 312.814 187.604 cv
312.908 187.697 313.074 187.677 313.184 187.558 cv
313.445 187.271 313.689 186.966 313.912 186.649 cv
314.004 186.516 313.984 186.348 313.873 186.277 cv
313.594 186.063 313.314 185.851 313.031 185.642 cv
313.189 185.392 313.336 185.132 313.463 184.868 cv
313.592 184.601 313.703 184.327 313.801 184.048 cv
314.139 184.139 314.48 184.226 314.82 184.31 cv
314.945 184.354 315.09 184.264 315.137 184.107 cv
315.248 183.735 315.334 183.354 315.395 182.97 cv
315.418 182.811 315.328 182.666 315.199 182.651 cv
cp
.858824 .360784 .215686 rgb
f
184.095 273.033 mo
184.325 273.355 184.664 273.595 185.029 273.714 cv
185.217 273.777 185.413 273.807 185.607 273.806 cv
186.194 273.803 186.773 273.521 187.121 273.033 cv
187.592 272.409 187.592 271.465 187.121 270.843 cv
186.774 270.354 186.194 270.071 185.607 270.069 cv
185.413 270.069 185.217 270.098 185.029 270.16 cv
184.664 270.28 184.325 270.521 184.095 270.843 cv
183.865 271.163 183.74 271.536 183.74 271.938 cv
183.74 272.339 183.865 272.712 184.095 273.033 cv
cp
178.171 272.881 mo
178.468 272.817 178.766 272.76 179.065 272.703 cv
179.036 272.449 179.02 272.194 179.02 271.938 cv
179.02 271.683 179.036 271.427 179.065 271.173 cv
178.766 271.116 178.468 271.059 178.171 270.996 cv
178.057 270.983 177.979 270.86 178.001 270.721 cv
178.054 270.389 178.128 270.059 178.225 269.736 cv
178.264 269.602 178.39 269.524 178.496 269.561 cv
178.791 269.635 179.086 269.709 179.38 269.788 cv
179.463 269.547 179.561 269.311 179.672 269.079 cv
179.784 268.85 179.908 268.626 180.045 268.41 cv
179.8 268.229 179.558 268.046 179.316 267.859 cv
179.22 267.8 179.203 267.653 179.285 267.537 cv
179.476 267.263 179.687 267 179.913 266.751 cv
180.007 266.648 180.153 266.632 180.234 266.711 cv
180.468 266.905 180.7 267.102 180.93 267.301 cv
181.109 267.119 181.301 266.947 181.501 266.789 cv
181.7 266.627 181.909 266.48 182.126 266.347 cv
181.985 266.077 181.845 265.807 181.707 265.535 cv
181.647 265.438 181.695 265.301 181.817 265.232 cv
182.11 265.065 182.415 264.919 182.726 264.793 cv
182.856 264.74 182.994 264.789 183.032 264.896 cv
183.16 265.172 183.284 265.451 183.405 265.729 cv
183.646 265.644 183.892 265.572 184.142 265.516 cv
184.391 265.459 184.643 265.417 184.899 265.389 cv
184.888 265.085 184.878 264.781 184.874 264.477 cv
184.862 264.365 184.964 264.262 185.105 264.253 cv
185.272 264.24 185.439 264.235 185.607 264.235 cv
185.775 264.235 185.943 264.24 186.11 264.253 cv
186.25 264.262 186.353 264.365 186.342 264.477 cv
186.336 264.781 186.328 265.085 186.316 265.389 cv
186.571 265.417 186.823 265.459 187.074 265.515 cv
187.322 265.572 187.569 265.644 187.81 265.729 cv
187.931 265.451 188.056 265.172 188.182 264.896 cv
188.221 264.789 188.358 264.74 188.489 264.793 cv
188.802 264.919 189.105 265.065 189.399 265.232 cv
189.52 265.301 189.569 265.438 189.508 265.535 cv
189.37 265.807 189.231 266.077 189.088 266.347 cv
189.306 266.48 189.515 266.627 189.714 266.789 cv
189.913 266.947 190.105 267.119 190.284 267.301 cv
190.515 267.102 190.747 266.905 190.981 266.711 cv
191.062 266.632 191.207 266.648 191.302 266.751 cv
191.527 267 191.739 267.263 191.931 267.537 cv
192.012 267.653 191.993 267.8 191.898 267.859 cv
191.657 268.046 191.415 268.229 191.17 268.41 cv
191.308 268.626 191.432 268.849 191.543 269.079 cv
191.654 269.311 191.751 269.547 191.835 269.788 cv
192.128 269.709 192.423 269.635 192.718 269.561 cv
192.826 269.524 192.95 269.602 192.99 269.736 cv
193.088 270.059 193.161 270.389 193.214 270.721 cv
193.236 270.86 193.158 270.983 193.046 270.996 cv
192.747 271.059 192.449 271.116 192.15 271.173 cv
192.179 271.427 192.195 271.683 192.195 271.937 cv
192.195 272.194 192.179 272.449 192.15 272.703 cv
192.449 272.76 192.747 272.817 193.046 272.881 cv
193.158 272.893 193.236 273.017 193.214 273.155 cv
193.161 273.486 193.088 273.816 192.99 274.14 cv
192.95 274.275 192.826 274.351 192.718 274.315 cv
192.423 274.243 192.128 274.166 191.835 274.088 cv
191.751 274.33 191.654 274.566 191.543 274.796 cv
191.432 275.026 191.308 275.249 191.171 275.467 cv
191.415 275.646 191.657 275.83 191.898 276.016 cv
191.993 276.077 192.012 276.223 191.931 276.338 cv
191.739 276.613 191.527 276.875 191.302 277.124 cv
191.207 277.227 191.062 277.244 190.981 277.163 cv
190.747 276.969 190.515 276.772 190.285 276.576 cv
190.105 276.757 189.913 276.927 189.714 277.088 cv
189.515 277.247 189.306 277.395 189.088 277.531 cv
189.231 277.8 189.37 278.07 189.508 278.341 cv
189.569 278.437 189.52 278.575 189.399 278.645 cv
189.105 278.811 188.802 278.955 188.489 279.082 cv
188.358 279.136 188.221 279.087 188.182 278.98 cv
188.056 278.701 187.931 278.426 187.81 278.148 cv
187.569 278.232 187.323 278.305 187.074 278.361 cv
186.823 278.419 186.571 278.459 186.316 278.486 cv
186.328 278.791 186.336 279.096 186.342 279.398 cv
186.353 279.511 186.25 279.616 186.11 279.625 cv
185.943 279.634 185.775 279.641 185.607 279.641 cv
185.439 279.641 185.272 279.634 185.105 279.625 cv
184.964 279.616 184.862 279.511 184.874 279.398 cv
184.878 279.096 184.888 278.791 184.899 278.486 cv
184.643 278.459 184.391 278.419 184.142 278.361 cv
183.892 278.305 183.646 278.232 183.405 278.148 cv
183.284 278.426 183.16 278.701 183.032 278.98 cv
182.994 279.087 182.856 279.136 182.726 279.082 cv
182.415 278.955 182.11 278.811 181.817 278.645 cv
181.695 278.575 181.647 278.437 181.707 278.341 cv
181.845 278.07 181.985 277.8 182.126 277.531 cv
181.91 277.395 181.7 277.247 181.501 277.088 cv
181.301 276.927 181.109 276.757 180.93 276.576 cv
180.7 276.772 180.468 276.969 180.234 277.163 cv
180.153 277.244 180.007 277.227 179.913 277.124 cv
179.687 276.875 179.476 276.613 179.285 276.338 cv
179.203 276.223 179.22 276.077 179.316 276.016 cv
179.558 275.83 179.8 275.646 180.045 275.467 cv
179.908 275.249 179.784 275.026 179.672 274.796 cv
179.561 274.566 179.463 274.33 179.38 274.088 cv
179.086 274.166 178.791 274.243 178.496 274.315 cv
178.39 274.351 178.264 274.275 178.225 274.14 cv
178.128 273.816 178.054 273.486 178.001 273.155 cv
177.979 273.017 178.057 272.893 178.171 272.881 cv
cp
.239216 .27451 .360784 rgb
f
178.171 272.881 mo
178.468 272.817 178.766 272.76 179.065 272.703 cv
179.036 272.449 179.02 272.194 179.02 271.938 cv
179.02 271.683 179.036 271.427 179.065 271.173 cv
178.766 271.116 178.468 271.059 178.171 270.996 cv
178.057 270.983 177.979 270.86 178.001 270.721 cv
178.054 270.389 178.128 270.059 178.225 269.736 cv
178.264 269.602 178.39 269.524 178.496 269.561 cv
178.791 269.635 179.086 269.709 179.38 269.788 cv
179.463 269.547 179.561 269.311 179.672 269.079 cv
179.784 268.85 179.908 268.626 180.045 268.41 cv
179.8 268.229 179.558 268.046 179.316 267.859 cv
179.22 267.8 179.203 267.653 179.285 267.537 cv
179.476 267.263 179.687 267 179.913 266.751 cv
180.007 266.648 180.153 266.632 180.234 266.711 cv
180.468 266.905 180.7 267.102 180.93 267.301 cv
181.109 267.119 181.301 266.947 181.501 266.789 cv
181.7 266.627 181.909 266.48 182.126 266.347 cv
181.985 266.077 181.845 265.807 181.707 265.535 cv
181.647 265.438 181.695 265.301 181.817 265.232 cv
182.11 265.065 182.415 264.919 182.726 264.793 cv
182.856 264.74 182.994 264.789 183.032 264.896 cv
183.16 265.172 183.284 265.451 183.405 265.729 cv
183.646 265.644 183.892 265.572 184.142 265.516 cv
184.391 265.459 184.643 265.417 184.899 265.389 cv
184.888 265.085 184.878 264.781 184.874 264.477 cv
184.862 264.365 184.964 264.262 185.105 264.253 cv
185.272 264.24 185.439 264.235 185.607 264.235 cv
185.607 270.069 li
185.413 270.069 185.217 270.098 185.029 270.16 cv
184.664 270.28 184.325 270.521 184.095 270.843 cv
183.865 271.163 183.74 271.536 183.74 271.938 cv
183.74 272.339 183.865 272.712 184.095 273.033 cv
184.325 273.355 184.664 273.595 185.029 273.714 cv
185.217 273.777 185.413 273.807 185.607 273.806 cv
185.607 279.641 li
185.439 279.641 185.272 279.634 185.105 279.625 cv
184.964 279.616 184.862 279.511 184.874 279.398 cv
184.878 279.096 184.888 278.791 184.899 278.486 cv
184.643 278.459 184.391 278.419 184.142 278.361 cv
183.892 278.305 183.646 278.232 183.405 278.148 cv
183.284 278.426 183.16 278.701 183.032 278.98 cv
182.994 279.087 182.856 279.136 182.726 279.082 cv
182.415 278.955 182.11 278.811 181.817 278.645 cv
181.695 278.575 181.647 278.437 181.707 278.341 cv
181.845 278.07 181.985 277.8 182.126 277.531 cv
181.91 277.395 181.7 277.247 181.501 277.088 cv
181.301 276.927 181.109 276.757 180.93 276.576 cv
180.7 276.772 180.468 276.969 180.234 277.163 cv
180.153 277.244 180.007 277.227 179.913 277.124 cv
179.687 276.875 179.476 276.613 179.285 276.338 cv
179.203 276.223 179.22 276.077 179.316 276.016 cv
179.558 275.83 179.8 275.646 180.045 275.467 cv
179.908 275.249 179.784 275.026 179.672 274.796 cv
179.561 274.566 179.463 274.33 179.38 274.088 cv
179.086 274.166 178.791 274.243 178.496 274.315 cv
178.39 274.351 178.264 274.275 178.225 274.14 cv
178.128 273.816 178.054 273.486 178.001 273.155 cv
177.979 273.017 178.057 272.893 178.171 272.881 cv
cp
.14902 .188235 .282353 rgb
f
176.711 260.925 mo
176.918 261.217 177.225 261.433 177.554 261.541 cv
177.724 261.599 177.9 261.625 178.076 261.624 cv
178.605 261.621 179.129 261.368 179.442 260.925 cv
179.869 260.362 179.869 259.511 179.442 258.947 cv
179.13 258.505 178.605 258.252 178.076 258.251 cv
177.9 258.249 177.724 258.276 177.554 258.332 cv
177.225 258.441 176.918 258.658 176.711 258.947 cv
176.503 259.236 176.391 259.573 176.391 259.938 cv
176.391 260.3 176.503 260.636 176.711 260.925 cv
cp
171.361 260.787 mo
171.629 260.732 171.898 260.68 172.169 260.629 cv
172.143 260.397 172.128 260.168 172.128 259.938 cv
172.128 259.708 172.143 259.475 172.169 259.246 cv
171.898 259.196 171.629 259.143 171.361 259.086 cv
171.259 259.075 171.189 258.963 171.208 258.839 cv
171.256 258.539 171.323 258.239 171.41 257.95 cv
171.446 257.828 171.559 257.757 171.655 257.791 cv
171.922 257.855 172.188 257.925 172.453 257.996 cv
172.528 257.777 172.617 257.563 172.717 257.355 cv
172.817 257.148 172.93 256.945 173.055 256.75 cv
172.833 256.588 172.614 256.423 172.396 256.256 cv
172.31 256.2 172.294 256.068 172.367 255.965 cv
172.54 255.715 172.73 255.479 172.935 255.255 cv
173.021 255.159 173.151 255.147 173.224 255.218 cv
173.436 255.393 173.646 255.571 173.853 255.749 cv
174.015 255.585 174.189 255.432 174.368 255.288 cv
174.549 255.143 174.737 255.009 174.934 254.888 cv
174.805 254.645 174.679 254.402 174.555 254.156 cv
174.5 254.067 174.544 253.943 174.654 253.883 cv
174.919 253.731 175.193 253.599 175.475 253.485 cv
175.592 253.439 175.716 253.482 175.751 253.578 cv
175.866 253.826 175.979 254.079 176.088 254.33 cv
176.305 254.253 176.527 254.188 176.753 254.138 cv
176.979 254.088 177.206 254.05 177.437 254.023 cv
177.426 253.749 177.419 253.475 177.414 253.2 cv
177.403 253.101 177.496 253.006 177.623 252.997 cv
177.773 252.987 177.925 252.982 178.076 252.982 cv
178.228 252.982 178.379 252.987 178.53 252.997 cv
178.656 253.006 178.75 253.101 178.739 253.2 cv
178.734 253.475 178.727 253.749 178.717 254.023 cv
178.945 254.05 179.174 254.088 179.4 254.137 cv
179.625 254.188 179.848 254.253 180.064 254.33 cv
180.175 254.079 180.287 253.826 180.401 253.578 cv
180.436 253.482 180.561 253.439 180.678 253.485 cv
180.961 253.599 181.234 253.731 181.499 253.883 cv
181.609 253.943 181.653 254.067 181.598 254.156 cv
181.474 254.402 181.349 254.645 181.219 254.888 cv
181.415 255.009 181.604 255.143 181.785 255.288 cv
181.964 255.432 182.138 255.585 182.299 255.749 cv
182.508 255.571 182.717 255.393 182.928 255.218 cv
183.002 255.147 183.133 255.159 183.219 255.255 cv
183.422 255.479 183.612 255.715 183.786 255.965 cv
183.858 256.068 183.842 256.2 183.757 256.256 cv
183.539 256.423 183.32 256.588 183.098 256.75 cv
183.223 256.945 183.335 257.148 183.435 257.355 cv
183.536 257.563 183.624 257.777 183.7 257.996 cv
183.964 257.925 184.231 257.855 184.498 257.791 cv
184.594 257.757 184.707 257.828 184.743 257.95 cv
184.83 258.239 184.896 258.539 184.944 258.839 cv
184.964 258.963 184.895 259.075 184.792 259.086 cv
184.523 259.143 184.254 259.196 183.983 259.246 cv
184.01 259.475 184.024 259.706 184.025 259.938 cv
184.024 260.168 184.01 260.397 183.983 260.629 cv
184.254 260.68 184.523 260.732 184.792 260.787 cv
184.895 260.799 184.964 260.911 184.944 261.036 cv
184.896 261.337 184.83 261.634 184.743 261.924 cv
184.707 262.047 184.594 262.117 184.498 262.083 cv
184.231 262.018 183.964 261.949 183.7 261.879 cv
183.624 262.096 183.536 262.31 183.435 262.519 cv
183.335 262.727 183.223 262.929 183.1 263.122 cv
183.32 263.286 183.539 263.453 183.757 263.62 cv
183.842 263.675 183.858 263.807 183.786 263.91 cv
183.612 264.157 183.422 264.395 183.219 264.62 cv
183.133 264.713 183.002 264.729 182.928 264.656 cv
182.717 264.479 182.508 264.304 182.3 264.124 cv
182.138 264.288 181.964 264.441 181.785 264.587 cv
181.604 264.731 181.415 264.863 181.219 264.985 cv
181.349 265.229 181.474 265.474 181.598 265.719 cv
181.653 265.806 181.609 265.93 181.499 265.993 cv
181.234 266.143 180.961 266.275 180.678 266.388 cv
180.561 266.437 180.436 266.391 180.401 266.295 cv
180.287 266.045 180.175 265.796 180.064 265.543 cv
179.848 265.62 179.625 265.686 179.4 265.736 cv
179.174 265.788 178.947 265.825 178.717 265.852 cv
178.727 266.125 178.734 266.398 178.739 266.673 cv
178.75 266.775 178.656 266.871 178.53 266.877 cv
178.379 266.887 178.228 266.892 178.076 266.892 cv
177.925 266.892 177.773 266.887 177.623 266.877 cv
177.496 266.871 177.403 266.775 177.414 266.673 cv
177.419 266.398 177.426 266.125 177.437 265.852 cv
177.206 265.825 176.979 265.788 176.753 265.736 cv
176.527 265.686 176.305 265.62 176.088 265.543 cv
175.979 265.796 175.866 266.045 175.751 266.295 cv
175.716 266.391 175.592 266.437 175.475 266.388 cv
175.193 266.275 174.919 266.143 174.654 265.993 cv
174.544 265.93 174.5 265.806 174.555 265.719 cv
174.679 265.474 174.805 265.229 174.934 264.985 cv
174.738 264.863 174.549 264.731 174.368 264.587 cv
174.189 264.442 174.015 264.288 173.853 264.124 cv
173.646 264.304 173.436 264.479 173.224 264.656 cv
173.151 264.729 173.021 264.713 172.935 264.62 cv
172.73 264.395 172.54 264.157 172.367 263.91 cv
172.294 263.807 172.31 263.675 172.396 263.62 cv
172.614 263.453 172.833 263.286 173.055 263.122 cv
172.93 262.929 172.817 262.727 172.717 262.519 cv
172.617 262.31 172.528 262.096 172.453 261.879 cv
172.188 261.949 171.922 262.018 171.655 262.083 cv
171.559 262.117 171.446 262.047 171.41 261.924 cv
171.323 261.634 171.256 261.337 171.208 261.036 cv
171.189 260.911 171.259 260.799 171.361 260.787 cv
cp
.972549 .419608 .254902 rgb
f
171.361 260.787 mo
171.629 260.732 171.898 260.68 172.169 260.629 cv
172.143 260.397 172.128 260.168 172.128 259.938 cv
172.128 259.708 172.143 259.475 172.169 259.246 cv
171.898 259.196 171.629 259.143 171.361 259.086 cv
171.259 259.075 171.189 258.963 171.208 258.839 cv
171.256 258.539 171.323 258.239 171.41 257.95 cv
171.446 257.828 171.559 257.757 171.655 257.791 cv
171.922 257.855 172.188 257.925 172.453 257.996 cv
172.528 257.777 172.617 257.563 172.717 257.355 cv
172.817 257.148 172.93 256.945 173.055 256.75 cv
172.833 256.588 172.614 256.423 172.396 256.256 cv
172.31 256.2 172.294 256.068 172.367 255.965 cv
172.54 255.715 172.73 255.479 172.935 255.255 cv
173.021 255.159 173.151 255.147 173.224 255.218 cv
173.436 255.393 173.646 255.571 173.853 255.749 cv
174.015 255.585 174.189 255.432 174.368 255.288 cv
174.549 255.143 174.737 255.009 174.934 254.888 cv
174.805 254.645 174.679 254.402 174.555 254.156 cv
174.5 254.067 174.544 253.943 174.654 253.883 cv
174.919 253.731 175.193 253.599 175.475 253.485 cv
175.592 253.439 175.716 253.482 175.751 253.578 cv
175.866 253.826 175.979 254.079 176.088 254.33 cv
176.305 254.253 176.527 254.188 176.753 254.138 cv
176.979 254.088 177.206 254.05 177.437 254.023 cv
177.426 253.749 177.419 253.475 177.414 253.2 cv
177.403 253.101 177.496 253.006 177.623 252.997 cv
177.773 252.987 177.925 252.982 178.076 252.982 cv
178.076 258.251 li
177.9 258.249 177.724 258.276 177.554 258.332 cv
177.225 258.441 176.918 258.658 176.711 258.947 cv
176.503 259.236 176.391 259.573 176.391 259.938 cv
176.391 260.3 176.503 260.636 176.711 260.925 cv
176.918 261.217 177.225 261.433 177.554 261.541 cv
177.724 261.599 177.9 261.625 178.076 261.624 cv
178.076 266.892 li
177.925 266.892 177.773 266.887 177.623 266.877 cv
177.496 266.871 177.403 266.775 177.414 266.673 cv
177.419 266.398 177.426 266.125 177.437 265.852 cv
177.206 265.825 176.979 265.788 176.753 265.736 cv
176.527 265.686 176.305 265.62 176.088 265.543 cv
175.979 265.796 175.866 266.045 175.751 266.295 cv
175.716 266.391 175.592 266.437 175.475 266.388 cv
175.193 266.275 174.919 266.143 174.654 265.993 cv
174.544 265.93 174.5 265.806 174.555 265.719 cv
174.679 265.474 174.805 265.229 174.934 264.985 cv
174.738 264.863 174.549 264.731 174.368 264.587 cv
174.189 264.442 174.015 264.288 173.853 264.124 cv
173.646 264.304 173.436 264.479 173.224 264.656 cv
173.151 264.729 173.021 264.713 172.935 264.62 cv
172.73 264.395 172.54 264.157 172.367 263.91 cv
172.294 263.807 172.31 263.675 172.396 263.62 cv
172.614 263.453 172.833 263.286 173.055 263.122 cv
172.93 262.929 172.817 262.727 172.717 262.519 cv
172.617 262.31 172.528 262.096 172.453 261.879 cv
172.188 261.949 171.922 262.018 171.655 262.083 cv
171.559 262.117 171.446 262.047 171.41 261.924 cv
171.323 261.634 171.256 261.337 171.208 261.036 cv
171.189 260.911 171.259 260.799 171.361 260.787 cv
cp
.858824 .360784 .215686 rgb
f
182.382 144.271 mo
182.856 143.857 li
183.323 143.452 183.589 142.868 183.589 142.254 cv
183.589 141.081 182.635 140.127 181.462 140.127 cv
179.806 140.234 li
180.868 139.146 li
181.337 138.681 181.596 138.063 181.596 137.405 cv
181.596 136.154 180.659 135.11 179.417 134.972 cv
178.901 134.917 li
178.901 134.397 li
178.902 132.382 177.278 130.756 175.281 130.756 cv
175.109 130.756 174.941 130.774 174.775 130.797 cv
174.307 130.862 li
174.15 130.414 li
173.722 129.185 172.56 128.357 171.262 128.357 cv
169.573 128.357 168.198 129.731 168.198 131.419 cv
168.198 129.731 166.825 128.357 165.135 128.357 cv
163.837 128.357 162.676 129.185 162.247 130.414 cv
162.09 130.862 li
161.622 130.797 li
161.456 130.774 161.288 130.756 161.116 130.756 cv
159.12 130.756 157.495 132.382 157.496 134.397 cv
157.496 134.917 li
156.979 134.972 li
155.737 135.11 154.802 136.154 154.802 137.405 cv
154.802 138.063 155.06 138.681 155.528 139.146 cv
156.592 140.234 li
154.935 140.127 li
153.762 140.127 152.808 141.081 152.808 142.254 cv
152.808 142.868 153.075 143.452 153.541 143.857 cv
154.015 144.271 li
153.564 144.709 li
153.076 145.182 152.808 145.816 152.808 146.492 cv
152.808 147.735 153.737 148.796 154.968 148.96 cv
155.745 149.062 li
155.418 149.775 li
155.269 150.098 155.192 150.441 155.192 150.792 cv
155.192 152.141 156.292 153.239 157.641 153.239 cv
157.743 153.239 157.842 153.23 157.941 153.22 cv
158.477 153.153 li
158.58 153.684 li
158.784 154.734 159.708 155.497 160.781 155.497 cv
161.231 155.497 161.668 155.362 162.042 155.11 cv
162.708 154.658 li
162.924 155.434 li
163.245 156.593 164.308 157.402 165.509 157.402 cv
166.992 157.402 168.198 156.196 168.198 154.712 cv
168.198 156.196 169.404 157.402 170.887 157.402 cv
172.088 157.402 173.151 156.593 173.474 155.434 cv
173.689 154.658 li
174.356 155.11 li
174.729 155.362 175.166 155.497 175.616 155.497 cv
176.688 155.497 177.613 154.734 177.817 153.684 cv
177.919 153.153 li
178.457 153.22 li
178.555 153.23 178.654 153.239 178.756 153.239 cv
180.106 153.239 181.205 152.141 181.205 150.792 cv
181.205 150.441 181.127 150.098 180.979 149.775 cv
180.651 149.062 li
181.429 148.96 li
182.661 148.796 183.589 147.735 183.589 146.492 cv
183.589 145.816 183.321 145.182 182.833 144.709 cv
182.382 144.271 li
cp
.972549 .419608 .254902 rgb
f
182.833 144.709 mo
182.382 144.271 li
182.856 143.857 li
183.323 143.452 183.589 142.868 183.589 142.254 cv
183.589 141.081 182.635 140.127 181.462 140.127 cv
179.806 140.234 li
180.868 139.146 li
181.337 138.681 181.596 138.063 181.596 137.405 cv
181.596 136.154 180.659 135.11 179.417 134.972 cv
178.901 134.917 li
178.901 134.397 li
178.902 132.382 177.278 130.756 175.281 130.756 cv
175.109 130.756 174.941 130.774 174.775 130.797 cv
174.307 130.862 li
174.15 130.414 li
173.722 129.185 172.56 128.357 171.262 128.357 cv
169.573 128.357 168.198 129.731 168.198 131.419 cv
168.198 154.712 li
168.198 156.196 169.404 157.402 170.887 157.402 cv
172.088 157.402 173.151 156.593 173.474 155.434 cv
173.689 154.658 li
174.356 155.11 li
174.729 155.362 175.166 155.497 175.616 155.497 cv
176.688 155.497 177.613 154.734 177.817 153.684 cv
177.919 153.153 li
178.457 153.22 li
178.555 153.23 178.654 153.239 178.756 153.239 cv
180.106 153.239 181.205 152.141 181.205 150.792 cv
181.205 150.441 181.127 150.098 180.979 149.775 cv
180.651 149.062 li
181.429 148.96 li
182.661 148.796 183.589 147.735 183.589 146.492 cv
183.589 145.816 183.321 145.182 182.833 144.709 cv
cp
.858824 .360784 .215686 rgb
f
164.26 134.67 mo
163.747 134.67 163.23 134.502 162.807 134.18 cv
162.011 133.573 161.664 132.543 161.854 131.352 cv
161.911 130.992 162.246 130.742 162.611 130.804 cv
162.972 130.861 163.219 131.2 163.161 131.561 cv
163.049 132.264 163.208 132.821 163.61 133.126 cv
163.913 133.357 164.319 133.413 164.64 133.267 cv
164.828 133.085 li
164.796 132.964 li
164.479 133.037 164.149 132.866 164.029 132.552 cv
163.9 132.211 164.073 131.828 164.414 131.699 cv
165.055 131.458 165.748 131.797 166.035 132.487 cv
166.313 133.154 166.111 134.051 165.188 134.472 cv
164.896 134.604 164.579 134.67 164.26 134.67 cv
cp
f
159.904 138.27 mo
159.871 138.269 li
158.743 138.213 157.502 137.213 157.425 135.468 cv
157.409 135.103 157.692 134.794 158.057 134.779 cv
158.417 134.742 158.731 135.044 158.748 135.41 cv
158.792 136.432 159.469 136.923 159.936 136.946 cv
160.302 136.965 160.583 137.275 160.564 137.641 cv
160.547 137.995 160.254 138.27 159.904 138.27 cv
cp
f
160.091 141.986 mo
158.867 141.986 157.584 141.508 156.899 141.054 cv
156.594 140.852 156.511 140.441 156.713 140.136 cv
156.915 139.833 157.326 139.747 157.631 139.95 cv
158.511 140.533 160.598 141.081 161.367 140.228 cv
161.61 139.955 162.032 139.934 162.301 140.179 cv
162.572 140.424 162.594 140.843 162.35 141.114 cv
161.774 141.753 160.947 141.986 160.091 141.986 cv
cp
f
156.385 149.508 mo
156.279 149.508 156.172 149.484 156.072 149.429 cv
155.75 149.256 155.63 148.854 155.804 148.532 cv
156.977 146.353 160.222 146.19 161.523 146.451 cv
162.044 146.554 162.779 146.556 163.128 146.218 cv
163.367 145.987 163.44 145.57 163.342 144.98 cv
163.249 144.414 162.943 144.114 162.41 144.061 cv
161.799 144.002 161.285 144.304 161.23 144.45 cv
161.216 144.816 160.89 145.113 160.544 145.075 cv
160.179 145.061 159.896 144.744 159.91 144.378 cv
159.947 143.397 161.051 142.798 162.069 142.734 cv
163.398 142.645 164.43 143.445 164.649 144.764 cv
164.864 146.064 164.441 146.791 164.049 147.17 cv
163.169 148.02 161.807 147.858 161.263 147.749 cv
160.185 147.532 157.739 147.729 156.969 149.16 cv
156.85 149.382 156.622 149.508 156.385 149.508 cv
cp
f
158.717 153.031 mo
158.402 153.031 158.123 152.805 158.066 152.484 cv
157.788 150.918 158.486 150.039 158.926 149.653 cv
159.602 149.065 160.593 148.822 161.342 149.056 cv
161.69 149.168 161.883 149.541 161.771 149.889 cv
161.66 150.238 161.285 150.427 160.939 150.318 cv
160.714 150.25 160.196 150.303 159.798 150.649 cv
159.395 151.003 159.247 151.559 159.369 152.253 cv
159.434 152.614 159.192 152.957 158.833 153.021 cv
158.717 153.031 li
cp
f
155.874 145.102 mo
155.376 145.102 154.899 144.961 154.47 144.685 cv
154.162 144.488 154.073 144.078 154.271 143.771 cv
154.468 143.464 154.877 143.373 155.186 143.571 cv
155.495 143.771 155.843 143.824 156.222 143.735 cv
156.695 143.621 157.105 143.298 157.249 143.052 cv
157.433 142.734 157.838 142.629 158.155 142.814 cv
158.47 143 158.577 143.406 158.392 143.721 cv
158.038 144.327 157.306 144.837 156.531 145.023 cv
156.309 145.075 156.089 145.102 155.874 145.102 cv
cp
f
162.832 154.685 mo
162.55 154.685 162.29 154.503 162.2 154.222 cv
161.896 153.261 162.051 152.338 162.626 151.688 cv
163.134 151.115 163.898 150.86 164.678 151.004 cv
165.741 151.203 166.184 152.062 166.146 152.777 cv
166.107 153.498 165.608 154.039 164.932 154.091 cv
164.556 154.108 164.249 153.848 164.22 153.482 cv
164.192 153.119 164.464 152.8 164.829 152.771 cv
164.818 152.771 164.845 152.679 164.801 152.567 cv
164.75 152.431 164.623 152.341 164.435 152.307 cv
164.118 152.245 163.816 152.339 163.618 152.565 cv
163.359 152.859 163.302 153.317 163.462 153.822 cv
163.572 154.17 163.38 154.543 163.031 154.653 cv
162.832 154.685 li
cp
f
172.305 134.67 mo
171.986 134.67 171.669 134.604 171.378 134.472 cv
170.454 134.053 170.252 133.156 170.53 132.487 cv
170.817 131.797 171.511 131.458 172.15 131.699 cv
172.492 131.828 172.665 132.211 172.535 132.552 cv
172.416 132.866 172.086 133.037 171.769 132.964 cv
171.738 133.085 li
171.926 133.267 li
172.249 133.413 172.652 133.357 172.954 133.126 cv
173.356 132.821 173.516 132.264 173.404 131.561 cv
173.347 131.199 173.594 130.861 173.955 130.802 cv
174.307 130.75 174.655 130.992 174.713 131.354 cv
174.901 132.543 174.553 133.575 173.757 134.18 cv
173.334 134.502 172.817 134.67 172.305 134.67 cv
cp
.741176 .294118 .133333 rgb
f
176.661 138.27 mo
176.312 138.27 176.018 137.995 176.001 137.641 cv
175.983 137.275 176.264 136.965 176.63 136.946 cv
177.096 136.923 177.772 136.432 177.817 135.411 cv
177.833 135.044 178.167 134.742 178.506 134.779 cv
178.872 134.794 179.156 135.103 179.139 135.468 cv
179.063 137.211 177.824 138.213 176.695 138.269 cv
176.661 138.27 li
cp
f
176.474 141.986 mo
175.618 141.986 174.792 141.753 174.216 141.114 cv
173.971 140.843 173.993 140.424 174.265 140.179 cv
174.536 139.933 174.956 139.957 175.199 140.228 cv
175.969 141.081 178.055 140.533 178.934 139.95 cv
179.239 139.747 179.65 139.833 179.852 140.136 cv
180.053 140.441 179.971 140.852 179.666 141.054 cv
178.981 141.508 177.698 141.986 176.474 141.986 cv
cp
f
180.179 149.508 mo
179.943 149.508 179.714 149.382 179.595 149.16 cv
178.826 147.73 176.381 147.534 175.303 147.749 cv
174.758 147.858 173.396 148.02 172.517 147.17 cv
172.125 146.791 171.702 146.064 171.917 144.763 cv
172.136 143.445 173.166 142.65 174.497 142.734 cv
175.515 142.798 176.618 143.397 176.656 144.378 cv
176.67 144.744 176.385 145.05 176.02 145.064 cv
175.639 145.104 175.347 144.793 175.333 144.43 cv
175.28 144.304 174.764 144.002 174.156 144.061 cv
173.623 144.114 173.317 144.414 173.224 144.98 cv
173.125 145.57 173.198 145.987 173.438 146.218 cv
173.787 146.556 174.521 146.553 175.042 146.451 cv
176.343 146.19 179.59 146.353 180.761 148.532 cv
180.935 148.854 180.813 149.256 180.492 149.429 cv
180.392 149.484 180.285 149.508 180.179 149.508 cv
cp
f
177.848 153.031 mo
177.731 153.021 li
177.371 152.957 177.131 152.614 177.195 152.253 cv
177.318 151.559 177.17 151.003 176.767 150.649 cv
176.369 150.303 175.852 150.244 175.626 150.318 cv
175.279 150.427 174.905 150.238 174.794 149.889 cv
174.683 149.541 174.876 149.168 175.224 149.056 cv
175.974 148.822 176.966 149.065 177.639 149.653 cv
178.079 150.039 178.776 150.918 178.499 152.484 cv
178.442 152.805 178.163 153.031 177.848 153.031 cv
cp
f
180.691 145.102 mo
180.476 145.102 180.258 145.075 180.036 145.023 cv
179.26 144.837 178.528 144.327 178.174 143.721 cv
177.988 143.406 178.094 143 178.409 142.816 cv
178.725 142.629 179.13 142.737 179.315 143.05 cv
179.46 143.298 179.871 143.621 180.344 143.735 cv
180.724 143.824 181.07 143.77 181.379 143.571 cv
181.687 143.373 182.096 143.463 182.294 143.771 cv
182.492 144.078 182.403 144.488 182.095 144.685 cv
181.666 144.961 181.189 145.102 180.691 145.102 cv
cp
f
173.734 154.685 mo
173.535 154.653 li
173.186 154.543 172.993 154.17 173.103 153.822 cv
173.263 153.317 173.207 152.859 172.947 152.565 cv
172.749 152.341 172.453 152.245 172.13 152.307 cv
171.942 152.341 171.815 152.431 171.763 152.567 cv
171.72 152.679 171.747 152.771 171.762 152.788 cv
172.126 152.817 172.386 153.127 172.357 153.491 cv
172.328 153.856 171.984 154.106 171.633 154.091 cv
170.957 154.039 170.458 153.498 170.418 152.777 cv
170.381 152.062 170.824 151.203 171.887 151.004 cv
172.668 150.86 173.433 151.115 173.938 151.688 cv
174.515 152.338 174.67 153.261 174.366 154.222 cv
174.276 154.503 174.015 154.685 173.734 154.685 cv
cp
f
165.65 133.311 mo
163.562 128.333 li
165.921 129.441 li
166.814 129.861 li
166.437 128.981 li
162.783 120.446 li
165.432 128.311 li
162.788 126.8 li
161.648 126.15 li
162.047 127.452 li
164.024 133.899 li
164.054 133.98 li
164.239 134.42 164.746 134.628 165.187 134.444 cv
165.628 134.258 165.835 133.751 165.65 133.311 cv
cp
.996078 .792157 .345098 rgb
f
175.491 135.557 mo
175.19 134.513 li
171.915 123.215 li
174.12 133.654 li
170.62 131.274 li
169.269 130.357 li
169.738 131.963 li
172.043 139.839 li
172.061 139.895 li
172.224 140.343 172.72 140.573 173.169 140.411 cv
173.619 140.247 173.85 139.75 173.686 139.301 cv
171.433 133.139 li
174.536 134.985 li
175.491 135.557 li
cp
f
272.635 258.643 mo
273.156 258.188 li
273.668 257.744 273.959 257.102 273.959 256.427 cv
273.959 255.14 272.91 254.092 271.623 254.092 cv
269.805 254.21 li
270.971 253.014 li
271.486 252.503 271.77 251.826 271.77 251.102 cv
271.77 249.729 270.74 248.582 269.377 248.43 cv
268.811 248.369 li
268.811 247.799 li
268.813 245.586 267.027 243.8 264.836 243.8 cv
264.646 243.8 264.463 243.82 264.279 243.845 cv
263.766 243.918 li
263.592 243.425 li
263.123 242.074 261.846 241.166 260.42 241.166 cv
258.564 241.166 257.057 242.675 257.057 244.529 cv
257.057 242.675 255.547 241.166 253.691 241.166 cv
252.268 241.166 250.99 242.074 250.52 243.425 cv
250.348 243.918 li
249.832 243.845 li
249.652 243.82 249.467 243.8 249.279 243.8 cv
247.086 243.8 245.301 245.586 245.303 247.799 cv
245.303 248.369 li
244.734 248.43 li
243.371 248.582 242.344 249.729 242.344 251.102 cv
242.344 251.826 242.625 252.503 243.141 253.014 cv
244.311 254.21 li
242.49 254.092 li
241.201 254.092 240.154 255.14 240.154 256.427 cv
240.154 257.102 240.447 257.744 240.959 258.188 cv
241.479 258.643 li
240.986 259.125 li
240.447 259.644 240.154 260.341 240.154 261.083 cv
240.154 262.448 241.174 263.612 242.525 263.793 cv
243.379 263.903 li
243.02 264.688 li
242.855 265.043 242.771 265.419 242.771 265.807 cv
242.771 267.285 243.98 268.492 245.463 268.492 cv
245.574 268.492 245.682 268.483 245.793 268.472 cv
246.379 268.397 li
246.492 268.982 li
246.717 270.134 247.732 270.971 248.91 270.971 cv
249.404 270.971 249.885 270.824 250.295 270.548 cv
251.025 270.052 li
251.262 270.902 li
251.615 272.175 252.783 273.063 254.102 273.063 cv
255.732 273.063 257.057 271.741 257.057 270.109 cv
257.057 271.741 258.381 273.063 260.01 273.063 cv
261.33 273.063 262.498 272.175 262.85 270.902 cv
263.088 270.052 li
263.82 270.548 li
264.23 270.824 264.707 270.971 265.203 270.971 cv
266.381 270.971 267.395 270.134 267.619 268.982 cv
267.732 268.397 li
268.322 268.472 li
268.43 268.483 268.539 268.492 268.65 268.492 cv
270.133 268.492 271.34 267.285 271.34 265.807 cv
271.34 265.419 271.258 265.043 271.094 264.688 cv
270.734 263.903 li
271.586 263.793 li
272.939 263.612 273.959 262.448 273.959 261.083 cv
273.959 260.341 273.666 259.644 273.129 259.125 cv
272.635 258.643 li
cp
.972549 .419608 .254902 rgb
f
273.129 259.125 mo
272.635 258.643 li
273.156 258.188 li
273.668 257.744 273.959 257.102 273.959 256.427 cv
273.959 255.14 272.91 254.092 271.623 254.092 cv
269.805 254.21 li
270.971 253.014 li
271.486 252.503 271.77 251.826 271.77 251.102 cv
271.77 249.729 270.74 248.582 269.377 248.43 cv
268.811 248.369 li
268.811 247.799 li
268.813 245.586 267.027 243.8 264.836 243.8 cv
264.646 243.8 264.463 243.82 264.279 243.845 cv
263.766 243.918 li
263.592 243.425 li
263.123 242.074 261.846 241.166 260.42 241.166 cv
258.564 241.166 257.057 242.675 257.057 244.529 cv
257.057 270.109 li
257.057 271.741 258.381 273.063 260.01 273.063 cv
261.33 273.063 262.498 272.175 262.85 270.902 cv
263.088 270.052 li
263.82 270.548 li
264.23 270.824 264.707 270.971 265.203 270.971 cv
266.381 270.971 267.395 270.134 267.619 268.982 cv
267.732 268.397 li
268.322 268.472 li
268.43 268.483 268.539 268.492 268.65 268.492 cv
270.133 268.492 271.34 267.285 271.34 265.807 cv
271.34 265.419 271.258 265.043 271.094 264.688 cv
270.734 263.903 li
271.586 263.793 li
272.939 263.612 273.959 262.448 273.959 261.083 cv
273.959 260.341 273.666 259.644 273.129 259.125 cv
cp
.858824 .360784 .215686 rgb
f
252.732 248.099 mo
252.166 248.099 251.6 247.915 251.137 247.561 cv
250.262 246.895 249.881 245.765 250.088 244.455 cv
250.152 244.059 250.518 243.785 250.92 243.854 cv
251.316 243.915 251.588 244.289 251.523 244.685 cv
251.4 245.457 251.578 246.069 252.018 246.404 cv
252.348 246.658 252.797 246.718 253.148 246.558 cv
253.238 246.518 253.346 246.449 253.354 246.358 cv
253.318 246.226 li
252.971 246.306 252.607 246.118 252.479 245.772 cv
252.336 245.397 252.525 244.978 252.9 244.835 cv
253.604 244.571 254.365 244.943 254.68 245.701 cv
254.984 246.433 254.764 247.419 253.75 247.881 cv
253.43 248.027 253.082 248.099 252.732 248.099 cv
cp
f
247.947 252.053 mo
247.908 252.052 li
246.672 251.99 245.309 250.892 245.227 248.977 cv
245.207 248.573 245.518 248.235 245.918 248.218 cv
246.314 248.179 246.66 248.509 246.678 248.911 cv
246.725 250.034 247.471 250.574 247.982 250.6 cv
248.383 250.62 248.691 250.96 248.672 251.362 cv
248.654 251.75 248.332 252.053 247.947 252.053 cv
cp
f
248.152 256.134 mo
246.809 256.134 245.398 255.609 244.648 255.108 cv
244.313 254.888 244.221 254.438 244.443 254.103 cv
244.664 253.768 245.115 253.674 245.451 253.898 cv
246.416 254.538 248.709 255.14 249.553 254.203 cv
249.822 253.902 250.283 253.88 250.58 254.149 cv
250.879 254.418 250.902 254.879 250.633 255.175 cv
250.002 255.879 249.092 256.134 248.152 256.134 cv
cp
f
244.082 264.395 mo
243.967 264.395 243.848 264.367 243.738 264.308 cv
243.387 264.118 243.256 263.678 243.443 263.322 cv
244.73 260.931 248.297 260.751 249.727 261.037 cv
250.299 261.151 251.104 261.153 251.488 260.782 cv
251.75 260.527 251.83 260.069 251.723 259.421 cv
251.621 258.801 251.285 258.471 250.699 258.412 cv
250.029 258.349 249.465 258.678 249.402 258.84 cv
249.389 259.242 249.029 259.567 248.65 259.524 cv
248.248 259.511 247.938 259.162 247.955 258.76 cv
247.994 257.684 249.207 257.026 250.326 256.955 cv
251.785 256.857 252.918 257.736 253.156 259.185 cv
253.395 260.613 252.93 261.41 252.5 261.827 cv
251.533 262.761 250.037 262.582 249.438 262.463 cv
248.254 262.225 245.568 262.44 244.723 264.013 cv
244.592 264.256 244.344 264.395 244.082 264.395 cv
cp
f
246.645 268.264 mo
246.299 268.264 245.992 268.015 245.93 267.664 cv
245.625 265.943 246.389 264.978 246.875 264.554 cv
247.615 263.908 248.705 263.642 249.525 263.898 cv
249.908 264.021 250.121 264.432 249.998 264.813 cv
249.875 265.196 249.465 265.404 249.084 265.285 cv
248.838 265.21 248.268 265.268 247.83 265.649 cv
247.389 266.035 247.225 266.646 247.359 267.41 cv
247.43 267.805 247.164 268.183 246.771 268.252 cv
246.645 268.264 li
cp
f
243.52 259.556 mo
242.973 259.556 242.451 259.4 241.98 259.097 cv
241.641 258.881 241.543 258.432 241.76 258.094 cv
241.977 257.757 242.426 257.656 242.764 257.875 cv
243.104 258.094 243.488 258.152 243.904 258.054 cv
244.422 257.93 244.871 257.574 245.031 257.305 cv
245.232 256.955 245.678 256.841 246.027 257.043 cv
246.373 257.248 246.488 257.692 246.285 258.039 cv
245.898 258.703 245.094 259.265 244.242 259.468 cv
244 259.524 243.756 259.556 243.52 259.556 cv
cp
f
251.162 270.078 mo
250.854 270.078 250.568 269.881 250.469 269.572 cv
250.133 268.518 250.305 267.502 250.938 266.788 cv
251.494 266.159 252.334 265.879 253.189 266.039 cv
254.357 266.256 254.844 267.199 254.803 267.985 cv
254.76 268.777 254.213 269.371 253.469 269.428 cv
253.055 269.446 252.719 269.161 252.689 268.758 cv
252.656 268.36 252.955 268.01 253.355 267.978 cv
253.344 267.978 253.373 267.877 253.324 267.755 cv
253.27 267.604 253.131 267.506 252.922 267.468 cv
252.574 267.399 252.244 267.504 252.025 267.753 cv
251.742 268.074 251.68 268.578 251.855 269.133 cv
251.975 269.515 251.764 269.924 251.381 270.044 cv
251.162 270.078 li
cp
f
261.566 248.099 mo
261.217 248.099 260.867 248.027 260.549 247.881 cv
259.533 247.422 259.313 246.435 259.617 245.701 cv
259.932 244.943 260.693 244.571 261.396 244.835 cv
261.771 244.978 261.961 245.397 261.818 245.772 cv
261.689 246.118 261.328 246.306 260.977 246.226 cv
260.945 246.358 li
260.951 246.449 261.061 246.518 261.15 246.558 cv
261.504 246.718 261.947 246.658 262.279 246.404 cv
262.721 246.069 262.896 245.457 262.773 244.685 cv
262.711 244.286 262.982 243.915 263.379 243.851 cv
263.766 243.795 264.146 244.059 264.211 244.457 cv
264.416 245.765 264.035 246.896 263.16 247.561 cv
262.697 247.915 262.129 248.099 261.566 248.099 cv
cp
.741176 .294118 .133333 rgb
f
266.35 252.053 mo
265.967 252.053 265.645 251.75 265.625 251.362 cv
265.605 250.96 265.916 250.62 266.314 250.6 cv
266.828 250.574 267.572 250.034 267.619 248.912 cv
267.639 248.509 268.004 248.179 268.377 248.218 cv
268.777 248.235 269.09 248.573 269.072 248.977 cv
268.988 250.891 267.627 251.99 266.389 252.052 cv
266.35 252.053 li
cp
f
266.145 256.134 mo
265.205 256.134 264.299 255.879 263.664 255.175 cv
263.396 254.879 263.42 254.418 263.719 254.149 cv
264.016 253.879 264.479 253.904 264.746 254.203 cv
265.592 255.14 267.881 254.538 268.846 253.898 cv
269.182 253.674 269.635 253.768 269.855 254.103 cv
270.076 254.438 269.984 254.888 269.65 255.108 cv
268.898 255.609 267.49 256.134 266.145 256.134 cv
cp
f
270.215 264.395 mo
269.955 264.395 269.705 264.256 269.572 264.013 cv
268.729 262.441 266.043 262.227 264.857 262.463 cv
264.262 262.582 262.766 262.761 261.799 261.827 cv
261.367 261.41 260.902 260.613 261.141 259.184 cv
261.381 257.736 262.512 256.863 263.973 256.955 cv
265.092 257.026 266.303 257.684 266.344 258.76 cv
266.361 259.162 266.045 259.499 265.646 259.514 cv
265.227 259.557 264.908 259.217 264.891 258.817 cv
264.834 258.678 264.266 258.349 263.6 258.412 cv
263.014 258.471 262.678 258.801 262.576 259.421 cv
262.469 260.069 262.547 260.527 262.813 260.782 cv
263.193 261.153 264 261.147 264.574 261.037 cv
266 260.751 269.568 260.931 270.855 263.322 cv
271.043 263.678 270.91 264.118 270.559 264.308 cv
270.449 264.367 270.33 264.395 270.215 264.395 cv
cp
f
267.654 268.264 mo
267.525 268.252 li
267.129 268.183 266.867 267.805 266.938 267.41 cv
267.074 266.646 266.908 266.035 266.467 265.649 cv
266.029 265.268 265.461 265.202 265.213 265.285 cv
264.834 265.404 264.42 265.196 264.301 264.813 cv
264.178 264.432 264.389 264.021 264.773 263.898 cv
265.596 263.642 266.686 263.908 267.424 264.554 cv
267.91 264.978 268.674 265.943 268.367 267.664 cv
268.307 268.015 268 268.264 267.654 268.264 cv
cp
f
270.775 259.556 mo
270.539 259.556 270.301 259.524 270.057 259.468 cv
269.205 259.265 268.4 258.703 268.014 258.039 cv
267.809 257.692 267.924 257.248 268.27 257.045 cv
268.615 256.841 269.063 256.958 269.266 257.302 cv
269.424 257.574 269.875 257.93 270.395 258.054 cv
270.813 258.152 271.193 258.093 271.533 257.875 cv
271.871 257.656 272.318 257.756 272.535 258.094 cv
272.754 258.432 272.658 258.881 272.318 259.097 cv
271.848 259.4 271.322 259.556 270.775 259.556 cv
cp
f
263.137 270.078 mo
262.916 270.044 li
262.535 269.924 262.32 269.515 262.443 269.133 cv
262.619 268.578 262.557 268.074 262.271 267.753 cv
262.053 267.506 261.729 267.399 261.375 267.468 cv
261.168 267.506 261.029 267.604 260.971 267.755 cv
260.924 267.877 260.953 267.978 260.969 267.996 cv
261.369 268.028 261.656 268.369 261.625 268.769 cv
261.592 269.171 261.215 269.445 260.828 269.428 cv
260.084 269.371 259.537 268.777 259.494 267.985 cv
259.455 267.199 259.939 266.256 261.105 266.039 cv
261.965 265.879 262.805 266.159 263.359 266.788 cv
263.994 267.502 264.164 268.518 263.83 269.572 cv
263.73 269.881 263.445 270.078 263.137 270.078 cv
cp
f
254.258 246.606 mo
251.963 241.138 li
254.557 242.355 li
255.537 242.816 li
255.121 241.851 li
251.109 232.477 li
254.018 241.114 li
251.115 239.456 li
249.863 238.74 li
250.301 240.171 li
252.471 247.253 li
252.506 247.342 li
252.709 247.824 253.266 248.053 253.748 247.851 cv
254.232 247.646 254.461 247.089 254.258 246.606 cv
cp
.996078 .792157 .345098 rgb
f
265.064 249.071 mo
264.736 247.927 li
261.137 235.518 li
263.561 246.983 li
259.715 244.369 li
258.23 243.362 li
258.748 245.125 li
261.277 253.775 li
261.297 253.836 li
261.477 254.329 262.021 254.581 262.516 254.403 cv
263.01 254.224 263.264 253.678 263.084 253.186 cv
260.609 246.417 li
264.016 248.445 li
265.064 249.071 li
cp
f
258.732 122.034 mo
251.811 115.108 li
251.395 114.698 250.855 114.491 250.316 114.491 cv
249.775 114.491 249.238 114.698 248.824 115.108 cv
241.9 122.034 li
241.076 122.857 241.076 124.194 241.9 125.017 cv
248.824 131.942 li
249.238 132.354 249.775 132.56 250.316 132.56 cv
250.855 132.56 251.395 132.354 251.807 131.942 cv
258.732 125.017 li
259.559 124.194 259.559 122.857 258.732 122.034 cv
cp
.14902 .188235 .282353 rgb
f
250.316 114.491 mo
249.775 114.491 249.238 114.698 248.824 115.108 cv
241.9 122.034 li
241.076 122.857 241.076 124.194 241.9 125.017 cv
248.824 131.942 li
249.238 132.354 249.775 132.56 250.316 132.56 cv
250.316 114.491 li
cp
.239216 .27451 .360784 rgb
f
259.342 151.756 mo
250.316 151.756 li
241.09 151.756 li
240.896 151.756 240.738 151.914 240.738 152.108 cv
240.738 156.766 li
240.738 156.959 240.896 157.116 241.09 157.116 cv
250.316 157.116 li
259.342 157.116 li
259.537 157.116 259.695 156.959 259.695 156.766 cv
259.695 152.108 li
259.695 151.914 259.537 151.756 259.342 151.756 cv
cp
.933333 .933333 .937255 rgb
f
250.316 151.756 mo
241.09 151.756 li
240.896 151.756 240.738 151.914 240.738 152.108 cv
240.738 156.766 li
240.738 156.959 240.896 157.116 241.09 157.116 cv
250.316 157.116 li
250.316 151.756 li
cp
.992157 .992157 .984314 rgb
f
260.275 157.116 mo
250.316 157.116 li
240.242 157.116 li
240.047 157.116 239.889 157.274 239.889 157.469 cv
239.889 163.179 li
250.316 163.179 li
260.627 163.179 li
260.627 157.469 li
260.627 157.274 260.471 157.116 260.275 157.116 cv
cp
.14902 .188235 .282353 rgb
f
250.316 157.116 mo
240.242 157.116 li
240.047 157.116 239.889 157.274 239.889 157.469 cv
239.889 163.179 li
250.316 163.179 li
250.316 157.116 li
cp
.239216 .27451 .360784 rgb
f
260.234 144.36 mo
260.234 139.97 li
260.234 138.38 259.053 137.072 257.525 136.844 cv
257.109 135.571 255.926 134.643 254.518 134.643 cv
254.264 134.643 254.02 134.68 253.779 134.736 cv
253.207 133.901 252.246 133.352 251.16 133.352 cv
250.705 133.352 250.264 133.453 249.859 133.633 cv
249.859 123.615 li
249.859 121.864 248.436 120.438 246.684 120.438 cv
244.932 120.438 243.508 121.864 243.51 123.562 cv
242.465 136.305 li
242.105 136.463 li
238.174 138.163 237.385 138.681 238.623 143.195 cv
238.881 144.136 239.102 145.046 239.305 145.894 cv
240.092 149.169 240.715 151.756 242.768 151.756 cv
257.059 151.756 li
259.049 151.756 260.18 151.624 260.234 148.894 cv
260.277 146.754 260.234 144.373 260.234 144.36 cv
cp
.996078 .792157 .345098 rgb
f
260.234 144.36 mo
260.234 139.97 li
260.234 138.38 259.053 137.072 257.525 136.844 cv
257.109 135.571 255.926 134.643 254.518 134.643 cv
254.264 134.643 254.02 134.68 253.779 134.736 cv
253.207 133.901 252.246 133.352 251.16 133.352 cv
250.871 133.352 250.594 133.405 250.322 133.482 cv
250.322 151.756 li
257.059 151.756 li
259.049 151.756 260.18 151.624 260.234 148.894 cv
260.277 146.754 260.234 144.373 260.234 144.36 cv
cp
.996078 .756863 .215686 rgb
f
234.008 228.181 mo
228.711 222.88 li
228.393 222.566 227.98 222.407 227.568 222.407 cv
227.154 222.407 226.74 222.566 226.426 222.88 cv
221.125 228.181 li
220.495 228.811 220.495 229.834 221.125 230.465 cv
226.426 235.766 li
226.74 236.08 227.154 236.237 227.568 236.237 cv
227.98 236.237 228.393 236.08 228.709 235.766 cv
234.008 230.465 li
234.641 229.834 234.641 228.811 234.008 228.181 cv
cp
.14902 .188235 .282353 rgb
f
227.568 222.407 mo
227.154 222.407 226.74 222.566 226.426 222.88 cv
221.125 228.181 li
220.495 228.811 220.495 229.834 221.125 230.465 cv
226.426 235.766 li
226.74 236.08 227.154 236.237 227.568 236.237 cv
227.568 222.407 li
cp
.239216 .27451 .360784 rgb
f
234.475 250.931 mo
227.568 250.931 li
220.504 250.931 li
220.356 250.931 220.235 251.051 220.235 251.2 cv
220.235 254.765 li
220.235 254.913 220.356 255.033 220.504 255.033 cv
227.568 255.033 li
234.475 255.033 li
234.623 255.033 234.746 254.913 234.746 254.765 cv
234.746 251.2 li
234.746 251.051 234.623 250.931 234.475 250.931 cv
cp
.933333 .933333 .937255 rgb
f
227.568 250.931 mo
220.504 250.931 li
220.356 250.931 220.235 251.051 220.235 251.2 cv
220.235 254.765 li
220.235 254.913 220.356 255.033 220.504 255.033 cv
227.568 255.033 li
227.568 250.931 li
cp
.992157 .992157 .984314 rgb
f
235.189 255.033 mo
227.568 255.033 li
219.855 255.033 li
219.707 255.033 219.586 255.154 219.586 255.303 cv
219.586 259.673 li
227.568 259.673 li
235.459 259.673 li
235.459 255.303 li
235.459 255.154 235.34 255.033 235.189 255.033 cv
cp
.14902 .188235 .282353 rgb
f
227.568 255.033 mo
219.855 255.033 li
219.707 255.033 219.586 255.154 219.586 255.303 cv
219.586 259.673 li
227.568 259.673 li
227.568 255.033 li
cp
.239216 .27451 .360784 rgb
f
235.158 245.271 mo
235.158 241.909 li
235.158 240.692 234.252 239.691 233.084 239.517 cv
232.768 238.543 231.861 237.832 230.783 237.832 cv
230.588 237.832 230.402 237.86 230.217 237.903 cv
229.779 237.264 229.043 236.844 228.213 236.844 cv
227.865 236.844 227.527 236.922 227.219 237.06 cv
227.219 229.392 li
227.219 228.051 226.127 226.959 224.786 226.959 cv
223.446 226.959 222.355 228.051 222.357 229.351 cv
221.558 239.104 li
221.282 239.225 li
218.273 240.526 217.669 240.922 218.617 244.378 cv
218.815 245.098 218.982 245.795 219.139 246.443 cv
219.741 248.95 220.217 250.931 221.789 250.931 cv
232.727 250.931 li
234.25 250.931 235.115 250.829 235.158 248.74 cv
235.189 247.103 235.158 245.279 235.158 245.271 cv
cp
.996078 .792157 .345098 rgb
f
235.158 245.271 mo
235.158 241.909 li
235.158 240.692 234.252 239.691 233.084 239.517 cv
232.768 238.543 231.861 237.832 230.783 237.832 cv
230.588 237.832 230.402 237.86 230.217 237.903 cv
229.779 237.264 229.043 236.844 228.213 236.844 cv
227.99 236.844 227.777 236.885 227.57 236.943 cv
227.57 250.931 li
232.727 250.931 li
234.25 250.931 235.115 250.829 235.158 248.74 cv
235.189 247.103 235.158 245.279 235.158 245.271 cv
cp
.996078 .756863 .215686 rgb
f
177.1 120.002 mo
175.793 120.002 174.738 118.947 174.738 117.644 cv
174.738 116.34 175.793 115.284 177.1 115.284 cv
178.403 115.284 179.458 116.34 179.458 117.644 cv
179.458 118.947 178.403 120.002 177.1 120.002 cv
cp
.992157 .658824 .121569 rgb
f
177.1 112.3 mo
174.151 112.3 171.755 114.696 171.755 117.644 cv
171.755 120.588 174.151 122.984 177.1 122.984 cv
180.045 122.984 182.441 120.588 182.441 117.644 cv
182.441 114.696 180.045 112.3 177.1 112.3 cv
cp
177.1 123.919 mo
173.639 123.919 170.82 121.104 170.82 117.644 cv
170.82 114.183 173.639 111.365 177.1 111.365 cv
180.559 111.365 183.376 114.183 183.376 117.644 cv
183.376 121.104 180.559 123.919 177.1 123.919 cv
cp
f
143.922 199.287 mo
142.615 199.287 141.56 198.232 141.56 196.928 cv
141.56 195.625 142.615 194.568 143.922 194.568 cv
145.226 194.568 146.28 195.625 146.28 196.928 cv
146.28 198.232 145.226 199.287 143.922 199.287 cv
cp
.972549 .419608 .254902 rgb
f
143.922 191.584 mo
140.973 191.584 138.577 193.981 138.577 196.928 cv
138.577 199.873 140.973 202.269 143.922 202.269 cv
146.867 202.269 149.263 199.873 149.263 196.928 cv
149.263 193.981 146.867 191.584 143.922 191.584 cv
cp
143.922 203.204 mo
140.461 203.204 137.642 200.389 137.642 196.928 cv
137.642 193.468 140.461 190.65 143.922 190.65 cv
147.381 190.65 150.198 193.468 150.198 196.928 cv
150.198 200.389 147.381 203.204 143.922 203.204 cv
cp
f
247.945 281.747 mo
246.738 281.747 245.762 280.771 245.762 279.564 cv
245.762 278.358 246.738 277.379 247.945 277.379 cv
249.152 277.379 250.129 278.358 250.129 279.564 cv
250.129 280.771 249.152 281.747 247.945 281.747 cv
cp
f
247.945 274.619 mo
245.219 274.619 243 276.837 243 279.564 cv
243 282.288 245.219 284.507 247.945 284.507 cv
250.672 284.507 252.889 282.288 252.889 279.564 cv
252.889 276.837 250.672 274.619 247.945 274.619 cv
cp
247.945 285.372 mo
244.744 285.372 242.137 282.767 242.137 279.564 cv
242.137 276.361 244.744 273.754 247.945 273.754 cv
251.148 273.754 253.756 276.361 253.756 279.564 cv
253.756 282.767 251.148 285.372 247.945 285.372 cv
cp
f
320.463 126.492 mo
319.57 126.492 318.842 125.766 318.842 124.872 cv
318.842 123.98 319.57 123.255 320.463 123.255 cv
321.355 123.255 322.082 123.98 322.082 124.872 cv
322.082 125.766 321.355 126.492 320.463 126.492 cv
cp
326.488 124.339 mo
323.094 124.339 li
322.881 123.287 322.047 122.455 320.994 122.243 cv
320.994 119.068 li
319.928 119.068 li
319.928 122.243 li
318.875 122.456 318.045 123.287 317.83 124.339 cv
314.199 124.339 li
314.199 125.405 li
317.83 125.405 li
318.045 126.459 318.875 127.291 319.928 127.503 cv
319.928 130.794 li
320.994 130.794 li
320.994 127.503 li
322.047 127.291 322.881 126.459 323.094 125.405 cv
326.488 125.405 li
326.488 124.339 li
cp
.94902 .431373 .356863 rgb
f
268.725 55.9565 mo
267.674 55.9565 266.818 55.1021 266.818 54.0508 cv
266.818 53.0029 267.674 52.1499 268.725 52.1499 cv
269.773 52.1499 270.629 53.0029 270.629 54.0508 cv
270.629 55.1021 269.773 55.9565 268.725 55.9565 cv
cp
275.811 53.4243 mo
271.818 53.4243 li
271.568 52.187 270.588 51.209 269.35 50.959 cv
269.35 47.2251 li
268.096 47.2251 li
268.096 50.959 li
266.855 51.21 265.881 52.187 265.629 53.4243 cv
261.357 53.4243 li
261.357 54.6782 li
265.629 54.6782 li
265.881 55.918 266.855 56.8955 268.096 57.1465 cv
268.096 61.0171 li
269.35 61.0171 li
269.35 57.1465 li
270.588 56.8955 271.568 55.918 271.818 54.6782 cv
275.811 54.6782 li
275.811 53.4243 li
cp
.286275 .752941 .756863 rgb
f
277.883 242.212 mo
276.832 242.212 275.979 241.357 275.979 240.307 cv
275.979 239.258 276.832 238.406 277.883 238.406 cv
278.932 238.406 279.789 239.258 279.789 240.307 cv
279.789 241.357 278.932 242.212 277.883 242.212 cv
cp
284.971 239.68 mo
280.979 239.68 li
280.729 238.443 279.748 237.465 278.51 237.214 cv
278.51 233.48 li
277.256 233.48 li
277.256 237.214 li
276.016 237.465 275.039 238.443 274.789 239.68 cv
270.518 239.68 li
270.518 240.934 li
274.789 240.934 li
275.039 242.173 276.016 243.15 277.256 243.401 cv
277.256 247.272 li
278.51 247.272 li
278.51 243.401 li
279.748 243.15 280.729 242.173 280.979 240.934 cv
284.971 240.934 li
284.971 239.68 li
cp
f
153.809 215.158 mo
152.758 215.158 151.904 214.304 151.904 213.252 cv
151.904 212.205 152.758 211.352 153.809 211.352 cv
154.859 211.352 155.714 212.205 155.714 213.252 cv
155.714 214.304 154.859 215.158 153.809 215.158 cv
cp
160.896 212.626 mo
156.904 212.626 li
156.653 211.389 155.673 210.411 154.435 210.161 cv
154.435 206.427 li
153.181 206.427 li
153.181 210.161 li
151.942 210.412 150.965 211.389 150.714 212.626 cv
146.442 212.626 li
146.442 213.88 li
150.714 213.88 li
150.965 215.12 151.942 216.097 153.181 216.348 cv
153.181 220.219 li
154.435 220.219 li
154.435 216.348 li
155.673 216.097 156.653 215.12 156.904 213.88 cv
160.896 213.88 li
160.896 212.626 li
cp
f
240.813 271.028 mo
231.369 283.917 li
236.092 272.199 li
240.813 271.028 li
cp
0 .576471 .560784 rgb
f
240.813 271.028 mo
236.092 272.199 li
231.369 264.908 li
240.813 271.028 li
cp
.0352941 .666667 .678431 rgb
f
231.369 264.908 mo
236.092 272.199 li
231.369 272.72 li
231.369 264.908 li
cp
.286275 .752941 .756863 rgb
f
236.092 272.199 mo
231.369 283.917 li
231.369 272.72 li
236.092 272.199 li
cp
.0352941 .666667 .678431 rgb
f
231.369 272.72 mo
231.369 283.917 li
226.652 272.199 li
231.369 272.72 li
cp
.286275 .752941 .756863 rgb
f
231.369 264.908 mo
231.369 272.72 li
226.652 272.199 li
231.369 264.908 li
cp
.435294 .803922 .811765 rgb
f
231.369 264.908 mo
226.652 272.199 li
221.93 271.028 li
231.369 264.908 li
cp
.639216 .87451 .878431 rgb
f
226.652 272.199 mo
231.369 283.917 li
221.93 271.028 li
226.652 272.199 li
cp
.435294 .803922 .811765 rgb
f
261.359 281.923 mo
260.053 281.923 258.998 280.867 258.998 279.563 cv
258.998 278.26 260.053 277.203 261.359 277.203 cv
262.662 277.203 263.719 278.26 263.719 279.563 cv
263.719 280.867 262.662 281.923 261.359 281.923 cv
cp
.992157 .658824 .121569 rgb
f
219.189 194.31 mo
217.883 194.31 216.828 193.255 216.828 191.951 cv
216.828 190.647 217.883 189.59 219.189 189.59 cv
220.493 189.59 221.547 190.647 221.547 191.951 cv
221.547 193.255 220.493 194.31 219.189 194.31 cv
cp
f
284.971 171.253 mo
283.666 171.253 282.611 170.198 282.611 168.894 cv
282.611 167.59 283.666 166.533 284.971 166.533 cv
286.275 166.533 287.33 167.59 287.33 168.894 cv
287.33 170.198 286.275 171.253 284.971 171.253 cv
cp
f
183.314 130.157 mo
182.009 130.157 180.954 129.102 180.954 127.798 cv
180.954 126.494 182.009 125.437 183.314 125.437 cv
184.618 125.437 185.673 126.494 185.673 127.798 cv
185.673 129.102 184.618 130.157 183.314 130.157 cv
cp
f
299.24 173.595 mo
289.77 173.595 li
289.77 172.534 li
299.24 172.534 li
299.24 173.595 li
cp
.286275 .752941 .756863 rgb
f
295.037 177.8 mo
293.975 177.8 li
293.975 168.329 li
295.037 168.329 li
295.037 177.8 li
cp
f
173.176 91.5039 mo
166.992 91.5039 li
166.992 90.811 li
173.176 90.811 li
173.176 91.5039 li
cp
f
170.431 94.2495 mo
169.738 94.2495 li
169.738 88.0654 li
170.431 88.0654 li
170.431 94.2495 li
cp
f
260.271 172.073 mo
250.801 172.073 li
250.801 171.011 li
260.271 171.011 li
260.271 172.073 li
cp
.996078 .756863 .215686 rgb
f
256.066 176.277 mo
255.006 176.277 li
255.006 166.806 li
256.066 166.806 li
256.066 176.277 li
cp
f
247.68 197.084 mo
238.207 197.084 li
238.207 196.023 li
247.68 196.023 li
247.68 197.084 li
cp
f
243.475 201.289 mo
242.414 201.289 li
242.414 191.818 li
243.475 191.818 li
243.475 201.289 li
cp
f
185.685 161.095 mo
176.213 161.095 li
176.213 160.034 li
185.685 160.034 li
185.685 161.095 li
cp
.972549 .419608 .254902 rgb
f
181.48 165.3 mo
180.419 165.3 li
180.419 155.828 li
181.48 155.828 li
181.48 165.3 li
cp
f
269.002 197.616 mo
259.529 197.616 li
259.529 196.554 li
269.002 196.554 li
269.002 197.616 li
cp
f
264.797 201.82 mo
263.736 201.82 li
263.736 192.349 li
264.797 192.349 li
264.797 201.82 li
cp
f
229.17 151.572 mo
228.42 150.822 li
235.166 144.077 li
235.916 144.827 li
229.17 151.572 li
cp
.286275 .752941 .756863 rgb
f
235.166 151.573 mo
228.42 144.827 li
229.17 144.076 li
235.916 150.823 li
235.166 151.573 li
cp
f
263.729 150.704 mo
262.979 149.953 li
269.725 143.208 li
270.475 143.958 li
263.729 150.704 li
cp
.972549 .419608 .254902 rgb
f
269.725 150.705 mo
262.979 143.958 li
263.729 143.208 li
270.475 149.954 li
269.725 150.705 li
cp
f
188.5 253.4 mo
187.847 252.747 li
193.729 246.865 li
194.383 247.52 li
188.5 253.4 li
cp
f
193.729 253.401 mo
187.846 247.518 li
188.5 246.864 li
194.383 252.748 li
193.729 253.401 li
cp
f
278.535 64.5181 mo
276.23 62.2114 li
276.834 61.6064 li
279.141 63.9126 li
278.535 64.5181 li
cp
.239216 .27451 .360784 rgb
f
274.453 60.4351 mo
272.146 58.1289 li
272.752 57.5244 li
275.059 59.8296 li
274.453 60.4351 li
cp
f
272.754 64.5181 mo
272.148 63.9126 li
274.453 61.6069 li
275.059 62.2119 li
272.754 64.5181 li
cp
f
276.836 60.4351 mo
276.23 59.8296 li
278.537 57.5244 li
279.143 58.1289 li
276.836 60.4351 li
cp
f
276.23 60.4351 mo
275.906 60.1113 275.381 60.1113 275.059 60.4351 cv
274.734 60.7583 274.734 61.2842 275.059 61.6069 cv
275.381 61.9292 275.906 61.9292 276.23 61.6064 cv
276.553 61.2832 276.553 60.7578 276.23 60.4351 cv
cp
274.453 62.2119 mo
273.797 61.5552 273.797 60.4868 274.453 59.8296 cv
275.109 59.1733 276.18 59.1733 276.836 59.8296 cv
277.492 60.4868 277.492 61.5542 276.834 62.2114 cv
276.178 62.8691 275.109 62.8691 274.453 62.2119 cv
cp
f
249.477 237.742 mo
245.619 237.742 li
245.619 236.682 li
249.477 236.682 li
249.477 237.742 li
cp
.972549 .419608 .254902 rgb
f
241.334 237.742 mo
237.238 237.742 li
237.238 236.682 li
241.334 236.682 li
241.334 237.742 li
cp
f
244.006 243.109 mo
242.943 243.109 li
242.943 239.356 li
244.006 239.356 li
244.006 243.109 li
cp
f
244.006 235.071 mo
242.943 235.071 li
242.943 231.433 li
244.006 231.433 li
244.006 235.071 li
cp
f
243.475 235.602 mo
242.586 235.602 241.865 236.324 241.865 237.212 cv
241.865 238.102 242.586 238.826 243.475 238.826 cv
244.363 238.826 245.088 238.102 245.088 237.212 cv
245.088 236.324 244.363 235.602 243.475 235.602 cv
cp
243.475 239.887 mo
242.002 239.887 240.803 238.687 240.803 237.212 cv
240.803 235.739 242.002 234.541 243.475 234.541 cv
244.949 234.541 246.148 235.739 246.148 237.212 cv
246.148 238.687 244.949 239.887 243.475 239.887 cv
cp
f
300.094 150.337 mo
296.236 150.337 li
296.236 149.276 li
300.094 149.276 li
300.094 150.337 li
cp
f
291.951 150.337 mo
287.855 150.337 li
287.855 149.276 li
291.951 149.276 li
291.951 150.337 li
cp
f
294.623 155.704 mo
293.563 155.704 li
293.563 151.951 li
294.623 151.951 li
294.623 155.704 li
cp
f
294.623 147.666 mo
293.563 147.666 li
293.563 144.027 li
294.623 144.027 li
294.623 147.666 li
cp
f
294.094 148.196 mo
293.205 148.196 292.482 148.919 292.482 149.807 cv
292.482 150.696 293.205 151.42 294.094 151.42 cv
294.982 151.42 295.705 150.696 295.705 149.807 cv
295.705 148.919 294.982 148.196 294.094 148.196 cv
cp
294.094 152.481 mo
292.619 152.481 291.422 151.281 291.422 149.807 cv
291.422 148.334 292.619 147.135 294.094 147.135 cv
295.568 147.135 296.768 148.334 296.768 149.807 cv
296.768 151.281 295.568 152.481 294.094 152.481 cv
cp
f
217.657 232.948 mo
213.799 232.948 li
213.799 231.887 li
217.657 231.887 li
217.657 232.948 li
cp
.286275 .752941 .756863 rgb
f
209.514 232.948 mo
205.419 232.948 li
205.419 231.887 li
209.514 231.887 li
209.514 232.948 li
cp
f
212.187 238.315 mo
211.125 238.315 li
211.125 234.562 li
212.187 234.562 li
212.187 238.315 li
cp
f
212.187 230.277 mo
211.125 230.277 li
211.125 226.638 li
212.187 226.638 li
212.187 230.277 li
cp
f
211.656 230.808 mo
210.768 230.808 210.044 231.53 210.044 232.418 cv
210.044 233.308 210.768 234.031 211.656 234.031 cv
212.545 234.031 213.269 233.308 213.269 232.418 cv
213.269 231.53 212.545 230.808 211.656 230.808 cv
cp
211.656 235.093 mo
210.182 235.093 208.983 233.893 208.983 232.418 cv
208.983 230.945 210.182 229.746 211.656 229.746 cv
213.13 229.746 214.33 230.945 214.33 232.418 cv
214.33 233.893 213.13 235.093 211.656 235.093 cv
cp
f
269.898 139.856 mo
267.662 137.621 li
268.412 136.87 li
270.65 139.106 li
269.898 139.856 li
cp
f
265.178 135.135 mo
262.805 132.762 li
263.555 132.011 li
265.928 134.385 li
265.178 135.135 li
cp
f
263.75 139.797 mo
262.998 139.047 li
265.176 136.871 li
265.926 137.621 li
263.75 139.797 li
cp
f
268.41 135.136 mo
267.66 134.386 li
269.771 132.276 li
270.521 133.026 li
268.41 135.136 li
cp
f
266.793 134.777 mo
266.465 134.777 266.158 134.904 265.928 135.135 cv
265.449 135.614 265.447 136.393 265.926 136.871 cv
266.391 137.335 267.199 137.334 267.662 136.87 cv
267.895 136.639 268.021 136.332 268.02 136.005 cv
268.02 135.677 267.893 135.368 267.66 135.136 cv
267.428 134.904 267.121 134.777 266.793 134.777 cv
cp
266.795 138.292 mo
266.182 138.292 265.609 138.054 265.176 137.621 cv
264.283 136.729 264.283 135.278 265.178 134.385 cv
266.041 133.521 267.547 133.522 268.41 134.386 cv
268.842 134.818 269.08 135.393 269.082 136.003 cv
269.082 136.615 268.844 137.189 268.412 137.621 cv
267.98 138.053 267.406 138.292 266.795 138.292 cv
cp
f
207.304 84.6108 mo
205.424 82.7319 li
206.055 82.1011 li
207.935 83.98 li
207.304 84.6108 li
cp
f
203.336 80.6436 mo
201.342 78.6494 li
201.973 78.0186 li
203.966 80.0127 li
203.336 80.6436 li
cp
f
202.136 84.561 mo
201.505 83.9302 li
203.334 82.1016 li
203.965 82.7324 li
202.136 84.561 li
cp
f
206.053 80.6445 mo
205.423 80.0137 li
207.196 78.2407 li
207.826 78.8716 li
206.053 80.6445 li
cp
f
204.693 80.3428 mo
204.418 80.3428 204.16 80.4497 203.966 80.6436 cv
203.564 81.0459 203.563 81.7007 203.965 82.1016 cv
204.355 82.4917 205.035 82.4912 205.424 82.1011 cv
205.619 81.9072 205.726 81.6484 205.725 81.374 cv
205.724 81.0981 205.617 80.8394 205.423 80.6445 cv
205.228 80.4497 204.969 80.3428 204.693 80.3428 cv
cp
204.694 83.2954 mo
204.181 83.2954 203.699 83.0962 203.334 82.7324 cv
202.585 81.9834 202.585 80.7632 203.336 80.0127 cv
204.063 79.2876 205.328 79.2881 206.053 80.0137 cv
206.416 80.3774 206.616 80.8599 206.617 81.3735 cv
206.618 81.8867 206.417 82.3696 206.055 82.7319 cv
205.691 83.0957 205.208 83.2954 204.694 83.2954 cv
cp
f
150.99 206.93 mo
149.188 206.93 li
149.188 205.869 li
150.99 205.869 li
150.99 206.93 li
cp
f
147.187 206.93 mo
145.273 206.93 li
145.273 205.869 li
147.187 205.869 li
147.187 206.93 li
cp
f
148.718 209.153 mo
147.656 209.153 li
147.656 207.402 li
148.718 207.402 li
148.718 209.153 li
cp
f
148.718 205.399 mo
147.656 205.399 li
147.656 203.7 li
148.718 203.7 li
148.718 205.399 li
cp
f
148.187 205.93 mo
147.928 205.93 147.717 206.141 147.717 206.399 cv
147.717 206.66 147.928 206.871 148.187 206.871 cv
148.447 206.871 148.658 206.66 148.658 206.399 cv
148.658 206.141 148.447 205.93 148.187 205.93 cv
cp
148.187 207.933 mo
147.343 207.933 146.656 207.245 146.656 206.399 cv
146.656 205.556 147.343 204.869 148.187 204.869 cv
149.032 204.869 149.719 205.556 149.719 206.399 cv
149.719 207.245 149.032 207.933 148.187 207.933 cv
cp
f
158.729 126.231 mo
156.926 126.231 li
156.926 125.17 li
158.729 125.17 li
158.729 126.231 li
cp
f
154.924 126.231 mo
153.011 126.231 li
153.011 125.17 li
154.924 125.17 li
154.924 126.231 li
cp
f
156.455 128.456 mo
155.393 128.456 li
155.393 126.703 li
156.455 126.703 li
156.455 128.456 li
cp
f
156.455 124.702 mo
155.393 124.702 li
155.393 123.002 li
156.455 123.002 li
156.455 124.702 li
cp
f
155.924 125.232 mo
155.665 125.232 155.454 125.442 155.454 125.701 cv
155.454 125.961 155.665 126.172 155.924 126.172 cv
156.184 126.172 156.396 125.961 156.396 125.701 cv
156.396 125.442 156.184 125.232 155.924 125.232 cv
cp
155.924 127.233 mo
155.08 127.233 154.393 126.546 154.393 125.701 cv
154.393 124.857 155.08 124.171 155.924 124.171 cv
156.77 124.171 157.457 124.857 157.457 125.701 cv
157.457 126.546 156.77 127.233 155.924 127.233 cv
cp
f
166.074 162.74 mo
164.271 162.74 li
164.271 161.679 li
166.074 161.679 li
166.074 162.74 li
cp
f
162.269 162.74 mo
160.357 162.74 li
160.357 161.679 li
162.269 161.679 li
162.269 162.74 li
cp
f
163.8 164.964 mo
162.739 164.964 li
162.739 163.211 li
163.8 163.211 li
163.8 164.964 li
cp
f
163.8 161.21 mo
162.739 161.21 li
162.739 159.51 li
163.8 159.51 li
163.8 161.21 li
cp
f
163.27 161.741 mo
163.01 161.741 162.8 161.951 162.8 162.209 cv
162.8 162.469 163.01 162.681 163.27 162.681 cv
163.529 162.681 163.741 162.469 163.741 162.209 cv
163.741 161.951 163.529 161.741 163.27 161.741 cv
cp
163.27 163.742 mo
162.426 163.742 161.739 163.055 161.739 162.209 cv
161.739 161.366 162.426 160.68 163.27 160.68 cv
164.115 160.68 164.802 161.366 164.802 162.209 cv
164.802 163.055 164.115 163.742 163.27 163.742 cv
cp
f
241.686 114.994 mo
239.883 114.994 li
239.883 113.932 li
241.686 113.932 li
241.686 114.994 li
cp
f
237.881 114.994 mo
235.969 114.994 li
235.969 113.932 li
237.881 113.932 li
237.881 114.994 li
cp
f
239.412 117.218 mo
238.352 117.218 li
238.352 115.465 li
239.412 115.465 li
239.412 117.218 li
cp
f
239.412 113.464 mo
238.352 113.464 li
238.352 111.764 li
239.412 111.764 li
239.412 113.464 li
cp
f
238.881 113.995 mo
238.623 113.995 238.412 114.205 238.412 114.463 cv
238.412 114.723 238.623 114.935 238.881 114.935 cv
239.143 114.935 239.354 114.723 239.354 114.463 cv
239.354 114.205 239.143 113.995 238.881 113.995 cv
cp
238.881 115.996 mo
238.037 115.996 237.352 115.309 237.352 114.463 cv
237.352 113.619 238.037 112.933 238.881 112.933 cv
239.727 112.933 240.414 113.619 240.414 114.463 cv
240.414 115.309 239.727 115.996 238.881 115.996 cv
cp
f
269.959 82.0454 mo
268.156 82.0454 li
268.156 80.9844 li
269.959 80.9844 li
269.959 82.0454 li
cp
f
266.154 82.0454 mo
264.242 82.0454 li
264.242 80.9844 li
266.154 80.9844 li
266.154 82.0454 li
cp
f
267.686 84.2695 mo
266.625 84.2695 li
266.625 82.5171 li
267.686 82.5171 li
267.686 84.2695 li
cp
f
267.686 80.5156 mo
266.625 80.5156 li
266.625 78.8159 li
267.686 78.8159 li
267.686 80.5156 li
cp
f
267.154 81.0464 mo
266.896 81.0464 266.686 81.2568 266.686 81.5151 cv
266.686 81.7749 266.896 81.9863 267.154 81.9863 cv
267.414 81.9863 267.627 81.7749 267.627 81.5151 cv
267.627 81.2568 267.414 81.0464 267.154 81.0464 cv
cp
267.154 83.0479 mo
266.311 83.0479 265.623 82.3608 265.623 81.5151 cv
265.623 80.6714 266.311 79.9854 267.154 79.9854 cv
268 79.9854 268.688 80.6714 268.688 81.5151 cv
268.688 82.3608 268 83.0479 267.154 83.0479 cv
cp
f
190.252 211.675 mo
188.45 211.675 li
188.45 210.614 li
190.252 210.614 li
190.252 211.675 li
cp
f
186.448 211.675 mo
184.535 211.675 li
184.535 210.614 li
186.448 210.614 li
186.448 211.675 li
cp
f
187.979 213.899 mo
186.917 213.899 li
186.917 212.146 li
187.979 212.146 li
187.979 213.899 li
cp
f
187.979 210.145 mo
186.917 210.145 li
186.917 208.445 li
187.979 208.445 li
187.979 210.145 li
cp
f
187.448 210.676 mo
187.188 210.676 186.978 210.886 186.978 211.144 cv
186.978 211.404 187.188 211.616 187.448 211.616 cv
187.708 211.616 187.919 211.404 187.919 211.144 cv
187.919 210.886 187.708 210.676 187.448 210.676 cv
cp
187.448 212.677 mo
186.604 212.677 185.917 211.99 185.917 211.144 cv
185.917 210.301 186.604 209.615 187.448 209.615 cv
188.293 209.615 188.98 210.301 188.98 211.144 cv
188.98 211.99 188.293 212.677 187.448 212.677 cv
cp
f
213.586 90.0659 mo
211.784 90.0659 li
211.784 89.0044 li
213.586 89.0044 li
213.586 90.0659 li
cp
.972549 .419608 .254902 rgb
f
209.781 90.0659 mo
207.869 90.0659 li
207.869 89.0044 li
209.781 89.0044 li
209.781 90.0659 li
cp
f
211.312 92.29 mo
210.25 92.29 li
210.25 90.5376 li
211.312 90.5376 li
211.312 92.29 li
cp
f
211.312 88.5361 mo
210.25 88.5361 li
210.25 86.8364 li
211.312 86.8364 li
211.312 88.5361 li
cp
f
210.781 89.0669 mo
210.522 89.0669 210.312 89.2773 210.312 89.5352 cv
210.312 89.7954 210.522 90.0068 210.781 90.0068 cv
211.042 90.0068 211.253 89.7954 211.253 89.5352 cv
211.253 89.2773 211.042 89.0669 210.781 89.0669 cv
cp
210.781 91.0679 mo
209.938 91.0679 209.25 90.3809 209.25 89.5352 cv
209.25 88.6914 209.938 88.0054 210.781 88.0054 cv
211.627 88.0054 212.314 88.6914 212.314 89.5352 cv
212.314 90.3809 211.627 91.0679 210.781 91.0679 cv
cp
f
298.479 212.519 mo
296.678 212.519 li
296.678 211.458 li
298.479 211.458 li
298.479 212.519 li
cp
f
294.674 212.519 mo
292.762 212.519 li
292.762 211.458 li
294.674 211.458 li
294.674 212.519 li
cp
f
296.205 214.743 mo
295.145 214.743 li
295.145 212.991 li
296.205 212.991 li
296.205 214.743 li
cp
f
296.205 210.989 mo
295.145 210.989 li
295.145 209.29 li
296.205 209.29 li
296.205 210.989 li
cp
f
295.674 211.52 mo
295.416 211.52 295.205 211.73 295.205 211.988 cv
295.205 212.249 295.416 212.46 295.674 212.46 cv
295.936 212.46 296.146 212.249 296.146 211.988 cv
296.146 211.73 295.936 211.52 295.674 211.52 cv
cp
295.674 213.521 mo
294.83 213.521 294.145 212.834 294.145 211.988 cv
294.145 211.145 294.83 210.458 295.674 210.458 cv
296.52 210.458 297.207 211.145 297.207 211.988 cv
297.207 212.834 296.52 213.521 295.674 213.521 cv
cp
f
155.667 187.862 mo
153.864 187.862 li
153.864 186.801 li
155.667 186.801 li
155.667 187.862 li
cp
f
151.862 187.862 mo
149.95 187.862 li
149.95 186.801 li
151.862 186.801 li
151.862 187.862 li
cp
f
153.393 190.086 mo
152.332 190.086 li
152.332 188.333 li
153.393 188.333 li
153.393 190.086 li
cp
f
153.393 186.332 mo
152.332 186.332 li
152.332 184.632 li
153.393 184.632 li
153.393 186.332 li
cp
f
152.862 186.863 mo
152.603 186.863 152.393 187.073 152.393 187.331 cv
152.393 187.591 152.603 187.803 152.862 187.803 cv
153.123 187.803 153.334 187.591 153.334 187.331 cv
153.334 187.073 153.123 186.863 152.862 186.863 cv
cp
152.862 188.864 mo
152.019 188.864 151.332 188.177 151.332 187.331 cv
151.332 186.488 152.019 185.801 152.862 185.801 cv
153.708 185.801 154.395 186.488 154.395 187.331 cv
154.395 188.177 153.708 188.864 152.862 188.864 cv
cp
f
320.887 173.567 mo
319.084 173.567 li
319.084 172.506 li
320.887 172.506 li
320.887 173.567 li
cp
f
317.082 173.567 mo
315.17 173.567 li
315.17 172.506 li
317.082 172.506 li
317.082 173.567 li
cp
f
318.613 175.792 mo
317.551 175.792 li
317.551 174.039 li
318.613 174.039 li
318.613 175.792 li
cp
f
318.613 172.038 mo
317.551 172.038 li
317.551 170.338 li
318.613 170.338 li
318.613 172.038 li
cp
f
318.082 172.568 mo
317.822 172.568 317.611 172.778 317.611 173.037 cv
317.611 173.297 317.822 173.508 318.082 173.508 cv
318.342 173.508 318.553 173.297 318.553 173.037 cv
318.553 172.778 318.342 172.568 318.082 172.568 cv
cp
318.082 174.569 mo
317.238 174.569 316.551 173.882 316.551 173.037 cv
316.551 172.193 317.238 171.507 318.082 171.507 cv
318.928 171.507 319.615 172.193 319.615 173.037 cv
319.615 173.882 318.928 174.569 318.082 174.569 cv
cp
f
217.122 250.636 mo
215.32 250.636 li
215.32 249.574 li
217.122 249.574 li
217.122 250.636 li
cp
f
213.317 250.636 mo
211.405 250.636 li
211.405 249.574 li
213.317 249.574 li
213.317 250.636 li
cp
f
214.848 252.859 mo
213.787 252.859 li
213.787 251.107 li
214.848 251.107 li
214.848 252.859 li
cp
f
214.848 249.105 mo
213.787 249.105 li
213.787 247.406 li
214.848 247.406 li
214.848 249.105 li
cp
f
214.317 249.637 mo
214.059 249.637 213.848 249.847 213.848 250.104 cv
213.848 250.365 214.059 250.576 214.317 250.576 cv
214.578 250.576 214.789 250.365 214.789 250.104 cv
214.789 249.847 214.578 249.637 214.317 249.637 cv
cp
214.317 251.638 mo
213.474 251.638 212.787 250.95 212.787 250.104 cv
212.787 249.262 213.474 248.575 214.317 248.575 cv
215.163 248.575 215.851 249.262 215.851 250.104 cv
215.851 250.95 215.163 251.638 214.317 251.638 cv
cp
f
226.24 282.928 mo
224.437 282.928 li
224.437 281.867 li
226.24 281.867 li
226.24 282.928 li
cp
f
222.434 282.928 mo
220.522 282.928 li
220.522 281.867 li
222.434 281.867 li
222.434 282.928 li
cp
f
223.965 285.152 mo
222.904 285.152 li
222.904 283.399 li
223.965 283.399 li
223.965 285.152 li
cp
f
223.965 281.398 mo
222.904 281.398 li
222.904 279.698 li
223.965 279.698 li
223.965 281.398 li
cp
f
223.435 281.929 mo
223.175 281.929 222.965 282.14 222.965 282.397 cv
222.965 282.657 223.175 282.869 223.435 282.869 cv
223.694 282.869 223.906 282.657 223.906 282.397 cv
223.906 282.14 223.694 281.929 223.435 281.929 cv
cp
223.435 283.93 mo
222.591 283.93 221.904 283.243 221.904 282.397 cv
221.904 281.554 222.591 280.867 223.435 280.867 cv
224.28 280.867 224.967 281.554 224.967 282.397 cv
224.967 283.243 224.28 283.93 223.435 283.93 cv
cp
f
233.311 82.604 mo
231.508 82.604 li
231.508 81.543 li
233.311 81.543 li
233.311 82.604 li
cp
f
229.506 82.604 mo
227.594 82.604 li
227.594 81.543 li
229.506 81.543 li
229.506 82.604 li
cp
f
231.037 84.8281 mo
229.977 84.8281 li
229.977 83.0757 li
231.037 83.0757 li
231.037 84.8281 li
cp
f
231.037 81.0747 mo
229.977 81.0747 li
229.977 79.375 li
231.037 79.375 li
231.037 81.0747 li
cp
f
230.506 81.605 mo
230.248 81.605 230.037 81.8154 230.037 82.0737 cv
230.037 82.3335 230.248 82.5449 230.506 82.5449 cv
230.766 82.5449 230.979 82.3335 230.979 82.0737 cv
230.979 81.8154 230.766 81.605 230.506 81.605 cv
cp
230.506 83.6064 mo
229.662 83.6064 228.975 82.9194 228.975 82.0737 cv
228.975 81.23 229.662 80.5439 230.506 80.5439 cv
231.352 80.5439 232.039 81.23 232.039 82.0737 cv
232.039 82.9194 231.352 83.6064 230.506 83.6064 cv
cp
f
195.011 227.141 mo
193.208 227.141 li
193.208 226.079 li
195.011 226.079 li
195.011 227.141 li
cp
f
191.206 227.141 mo
189.294 227.141 li
189.294 226.079 li
191.206 226.079 li
191.206 227.141 li
cp
f
192.737 229.365 mo
191.676 229.365 li
191.676 227.612 li
192.737 227.612 li
192.737 229.365 li
cp
f
192.737 225.611 mo
191.676 225.611 li
191.676 223.911 li
192.737 223.911 li
192.737 225.611 li
cp
f
192.207 226.142 mo
191.947 226.142 191.737 226.352 191.737 226.61 cv
191.737 226.87 191.947 227.082 192.207 227.082 cv
192.466 227.082 192.678 226.87 192.678 226.61 cv
192.678 226.352 192.466 226.142 192.207 226.142 cv
cp
192.207 228.143 mo
191.363 228.143 190.676 227.456 190.676 226.61 cv
190.676 225.767 191.363 225.08 192.207 225.08 cv
193.052 225.08 193.739 225.767 193.739 226.61 cv
193.739 227.456 193.052 228.143 192.207 228.143 cv
cp
f
297.895 136.764 mo
296.092 136.764 li
296.092 135.703 li
297.895 135.703 li
297.895 136.764 li
cp
.286275 .752941 .756863 rgb
f
294.09 136.764 mo
292.178 136.764 li
292.178 135.703 li
294.09 135.703 li
294.09 136.764 li
cp
f
295.621 138.988 mo
294.559 138.988 li
294.559 137.236 li
295.621 137.236 li
295.621 138.988 li
cp
f
295.621 135.234 mo
294.559 135.234 li
294.559 133.535 li
295.621 133.535 li
295.621 135.234 li
cp
f
295.09 135.765 mo
294.83 135.765 294.621 135.976 294.621 136.234 cv
294.621 136.494 294.83 136.705 295.09 136.705 cv
295.35 136.705 295.563 136.494 295.563 136.234 cv
295.563 135.976 295.35 135.765 295.09 135.765 cv
cp
295.09 137.767 mo
294.246 137.767 293.559 137.08 293.559 136.234 cv
293.559 135.39 294.246 134.704 295.09 134.704 cv
295.936 134.704 296.623 135.39 296.623 136.234 cv
296.623 137.08 295.936 137.767 295.09 137.767 cv
cp
f
176.904 58.0269 mo
175.102 58.0269 li
175.102 56.9653 li
176.904 56.9653 li
176.904 58.0269 li
cp
f
173.1 58.0269 mo
171.188 58.0269 li
171.188 56.9653 li
173.1 56.9653 li
173.1 58.0269 li
cp
f
174.63 60.251 mo
173.569 60.251 li
173.569 58.4985 li
174.63 58.4985 li
174.63 60.251 li
cp
f
174.63 56.4971 mo
173.569 56.4971 li
173.569 54.7974 li
174.63 54.7974 li
174.63 56.4971 li
cp
f
174.1 57.0278 mo
173.841 57.0278 173.63 57.2383 173.63 57.4961 cv
173.63 57.7563 173.841 57.9678 174.1 57.9678 cv
174.36 57.9678 174.571 57.7563 174.571 57.4961 cv
174.571 57.2383 174.36 57.0278 174.1 57.0278 cv
cp
174.1 59.0288 mo
173.256 59.0288 172.569 58.3418 172.569 57.4961 cv
172.569 56.6523 173.256 55.9663 174.1 55.9663 cv
174.945 55.9663 175.633 56.6523 175.633 57.4961 cv
175.633 58.3418 174.945 59.0288 174.1 59.0288 cv
cp
f
129.813 154.833 mo
128.01 154.833 li
128.01 153.771 li
129.813 153.771 li
129.813 154.833 li
cp
f
126.008 154.833 mo
124.096 154.833 li
124.096 153.771 li
126.008 153.771 li
126.008 154.833 li
cp
f
127.539 157.057 mo
126.478 157.057 li
126.478 155.304 li
127.539 155.304 li
127.539 157.057 li
cp
f
127.539 153.303 mo
126.478 153.303 li
126.478 151.603 li
127.539 151.603 li
127.539 153.303 li
cp
f
127.008 153.833 mo
126.749 153.833 126.539 154.044 126.539 154.302 cv
126.539 154.562 126.749 154.773 127.008 154.773 cv
127.268 154.773 127.479 154.562 127.479 154.302 cv
127.479 154.044 127.268 153.833 127.008 153.833 cv
cp
127.008 155.835 mo
126.165 155.835 125.477 155.147 125.477 154.302 cv
125.477 153.458 126.165 152.772 127.008 152.772 cv
127.854 152.772 128.541 153.458 128.541 154.302 cv
128.541 155.147 127.854 155.835 127.008 155.835 cv
cp
f
211.842 106.125 mo
210.04 106.125 li
210.04 105.063 li
211.842 105.063 li
211.842 106.125 li
cp
f
208.037 106.125 mo
206.125 106.125 li
206.125 105.063 li
208.037 105.063 li
208.037 106.125 li
cp
f
209.568 108.349 mo
208.506 108.349 li
208.506 106.597 li
209.568 106.597 li
209.568 108.349 li
cp
f
209.568 104.595 mo
208.506 104.595 li
208.506 102.896 li
209.568 102.896 li
209.568 104.595 li
cp
f
209.037 105.126 mo
208.778 105.126 208.567 105.336 208.567 105.594 cv
208.567 105.854 208.778 106.066 209.037 106.066 cv
209.297 106.066 209.509 105.854 209.509 105.594 cv
209.509 105.336 209.297 105.126 209.037 105.126 cv
cp
209.037 107.127 mo
208.193 107.127 207.506 106.44 207.506 105.594 cv
207.506 104.75 208.193 104.064 209.037 104.064 cv
209.883 104.064 210.57 104.75 210.57 105.594 cv
210.57 106.44 209.883 107.127 209.037 107.127 cv
cp
f
260.016 233.983 mo
258.213 233.983 li
258.213 232.922 li
260.016 232.922 li
260.016 233.983 li
cp
f
256.211 233.983 mo
254.299 233.983 li
254.299 232.922 li
256.211 232.922 li
256.211 233.983 li
cp
f
257.742 236.208 mo
256.682 236.208 li
256.682 234.455 li
257.742 234.455 li
257.742 236.208 li
cp
f
257.742 232.454 mo
256.682 232.454 li
256.682 230.754 li
257.742 230.754 li
257.742 232.454 li
cp
f
257.211 232.984 mo
256.953 232.984 256.742 233.195 256.742 233.453 cv
256.742 233.713 256.953 233.925 257.211 233.925 cv
257.471 233.925 257.684 233.713 257.684 233.453 cv
257.684 233.195 257.471 232.984 257.211 232.984 cv
cp
257.211 234.985 mo
256.367 234.985 255.682 234.299 255.682 233.453 cv
255.682 232.609 256.367 231.923 257.211 231.923 cv
258.057 231.923 258.744 232.609 258.744 233.453 cv
258.744 234.299 258.057 234.985 257.211 234.985 cv
cp
f
201.776 142.146 mo
199.974 142.146 li
199.974 141.084 li
201.776 141.084 li
201.776 142.146 li
cp
f
197.971 142.146 mo
196.059 142.146 li
196.059 141.084 li
197.971 141.084 li
197.971 142.146 li
cp
f
199.502 144.37 mo
198.441 144.37 li
198.441 142.617 li
199.502 142.617 li
199.502 144.37 li
cp
f
199.502 140.616 mo
198.441 140.616 li
198.441 138.916 li
199.502 138.916 li
199.502 140.616 li
cp
f
198.972 141.146 mo
198.712 141.146 198.502 141.356 198.502 141.615 cv
198.502 141.875 198.712 142.086 198.972 142.086 cv
199.231 142.086 199.443 141.875 199.443 141.615 cv
199.443 141.356 199.231 141.146 198.972 141.146 cv
cp
198.972 143.147 mo
198.128 143.147 197.441 142.46 197.441 141.615 cv
197.441 140.771 198.128 140.085 198.972 140.085 cv
199.817 140.085 200.504 140.771 200.504 141.615 cv
200.504 142.46 199.817 143.147 198.972 143.147 cv
cp
f
294.082 95.3403 mo
292.281 95.3403 li
292.281 94.2788 li
294.082 94.2788 li
294.082 95.3403 li
cp
f
290.277 95.3403 mo
288.365 95.3403 li
288.365 94.2788 li
290.277 94.2788 li
290.277 95.3403 li
cp
f
291.809 97.5645 mo
290.748 97.5645 li
290.748 95.8115 li
291.809 95.8115 li
291.809 97.5645 li
cp
f
291.809 93.8105 mo
290.748 93.8105 li
290.748 92.1108 li
291.809 92.1108 li
291.809 93.8105 li
cp
f
291.277 94.3408 mo
291.02 94.3408 290.809 94.5513 290.809 94.8096 cv
290.809 95.0698 291.02 95.2813 291.277 95.2813 cv
291.539 95.2813 291.75 95.0698 291.75 94.8096 cv
291.75 94.5513 291.539 94.3408 291.277 94.3408 cv
cp
291.277 96.3423 mo
290.434 96.3423 289.748 95.6553 289.748 94.8096 cv
289.748 93.9658 290.434 93.2798 291.277 93.2798 cv
292.123 93.2798 292.811 93.9658 292.811 94.8096 cv
292.811 95.6553 292.123 96.3423 291.277 96.3423 cv
cp
f
174.845 107.683 mo
173.042 107.683 li
173.042 106.622 li
174.845 106.622 li
174.845 107.683 li
cp
.0352941 .666667 .678431 rgb
f
171.041 107.683 mo
169.128 107.683 li
169.128 106.622 li
171.041 106.622 li
171.041 107.683 li
cp
f
172.571 109.907 mo
171.51 109.907 li
171.51 108.154 li
172.571 108.154 li
172.571 109.907 li
cp
f
172.571 106.153 mo
171.51 106.153 li
171.51 104.453 li
172.571 104.453 li
172.571 106.153 li
cp
f
172.041 106.684 mo
171.781 106.684 171.571 106.894 171.571 107.152 cv
171.571 107.412 171.781 107.624 172.041 107.624 cv
172.301 107.624 172.512 107.412 172.512 107.152 cv
172.512 106.894 172.301 106.684 172.041 106.684 cv
cp
172.041 108.685 mo
171.197 108.685 170.51 107.997 170.51 107.152 cv
170.51 106.309 171.197 105.623 172.041 105.623 cv
172.886 105.623 173.573 106.309 173.573 107.152 cv
173.573 107.997 172.886 108.685 172.041 108.685 cv
cp
f
285.961 202.323 mo
284.158 202.323 li
284.158 201.262 li
285.961 201.262 li
285.961 202.323 li
cp
f
282.156 202.323 mo
280.244 202.323 li
280.244 201.262 li
282.156 201.262 li
282.156 202.323 li
cp
f
283.688 204.547 mo
282.627 204.547 li
282.627 202.794 li
283.688 202.794 li
283.688 204.547 li
cp
f
283.688 200.793 mo
282.627 200.793 li
282.627 199.093 li
283.688 199.093 li
283.688 200.793 li
cp
f
283.156 201.324 mo
282.898 201.324 282.688 201.534 282.688 201.792 cv
282.688 202.052 282.898 202.264 283.156 202.264 cv
283.418 202.264 283.629 202.052 283.629 201.792 cv
283.629 201.534 283.418 201.324 283.156 201.324 cv
cp
283.156 203.325 mo
282.313 203.325 281.627 202.637 281.627 201.792 cv
281.627 200.949 282.313 200.263 283.156 200.263 cv
284.002 200.263 284.689 200.949 284.689 201.792 cv
284.689 202.637 284.002 203.325 283.156 203.325 cv
cp
f
196.598 282.426 mo
194.795 282.426 li
194.795 281.364 li
196.598 281.364 li
196.598 282.426 li
cp
f
192.793 282.426 mo
190.881 282.426 li
190.881 281.364 li
192.793 281.364 li
192.793 282.426 li
cp
f
194.324 284.649 mo
193.262 284.649 li
193.262 282.896 li
194.324 282.896 li
194.324 284.649 li
cp
f
194.324 280.896 mo
193.262 280.896 li
193.262 279.196 li
194.324 279.196 li
194.324 280.896 li
cp
f
193.793 281.426 mo
193.534 281.426 193.324 281.637 193.324 281.895 cv
193.324 282.155 193.534 282.366 193.793 282.366 cv
194.053 282.366 194.265 282.155 194.265 281.895 cv
194.265 281.637 194.053 281.426 193.793 281.426 cv
cp
193.793 283.428 mo
192.95 283.428 192.262 282.739 192.262 281.895 cv
192.262 281.051 192.95 280.365 193.793 280.365 cv
194.639 280.365 195.326 281.051 195.326 281.895 cv
195.326 282.739 194.639 283.428 193.793 283.428 cv
cp
f
230.453 195.379 mo
229.504 195.379 228.736 194.611 228.736 193.665 cv
228.736 192.717 229.504 191.95 230.453 191.95 cv
231.4 191.95 232.168 192.717 232.168 193.665 cv
232.168 194.611 231.4 195.379 230.453 195.379 cv
cp
.286275 .752941 .756863 rgb
f
230.453 189.782 mo
228.311 189.782 226.57 191.523 226.57 193.665 cv
226.57 195.804 228.311 197.545 230.453 197.545 cv
232.594 197.545 234.334 195.804 234.334 193.665 cv
234.334 191.523 232.594 189.782 230.453 189.782 cv
cp
230.453 198.224 mo
227.939 198.224 225.891 196.179 225.891 193.665 cv
225.891 191.15 227.939 189.104 230.453 189.104 cv
232.967 189.104 235.014 191.15 235.014 193.665 cv
235.014 196.179 232.967 198.224 230.453 198.224 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (ASRock) ()
%%Title: (1502.i107.001.P.m007.c20.sport equipment icons 1_000.eps)
%%CreationDate: 8/13/2015 9:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj26De+!81^97&LiXQ$0HM.A=Z6C1i!Cbct,SPuE1Q1F@Is?G>>?0K8dkdC;_\(.6kA\pIWEuU9]!gH:4NOr9X_POlR;Mu1
%R8Qp%\tPqhO7LnP*^"[E5B;*\1%O_ST]ro]LY[-mmIbMe7_@F09]^_h>H.Sl-%&WdS[j_LqsRLm;6F.kREV7B?E?*@@_:AGpJY[-
%+eX!RL#;Ts'NBUT$#Z=&2$%gcpA<2CW12L(g<Ic7@`RtNjl;JM=mu$qjaOo!qRh]aR6?a8II)."r!TH>1WA9b"hm[lh-,*Nkjp]2
%!>^(LYGSO][F@JI+[%;d6:6]\'_0(jA$up;IPr&B+.s'm_Tush9Bj*[_o"UFTlL8L3=T>rU&Z-I!$NlB8`\fdg[$c>I@#[\<K4AJ
%g>N"P^NdgR#)'KpWG0g\eC95P)em>d)6*Zj#CdQb_,.a.lL*Q!W>BH_l?:.&B"Is$qL;r7KQmdld@fHAhmVfu?lcGliIeDmY.>&b
%2(2dIP\G@g9'L8FEDl42\p][\G%6&4Z'hm4n%72(AuY^W7EJIs,6o6uFjb_/*Sk,I8-'7LMOn:GD5A3h.PY*fHkIO?R#3r0!\Eb>
%Cfr_aLEMHZh>1]r[CK_`i0l,/;S(Vb<s'VRe<J5X+r\n<oZ-M$Lopg<rP%%WR).;DgqG'%8p^LSRkD(J\TSWVTSL9o6-rgi#9)u&
%nSRb'I0Wa\3eA1MSA/r/JU.\Srp)ePq02Q.@:K:EmWR?;c<dR&rp)d!R;2W99q?CL'u3K`>^UTC0G.=g+S^%@W;#+i\_^J[:_cgZ
%F]83B-r.Oo^GYpJ8U6\sTIb[%34.'/iATC1WF?rIDH0W5j_cG;jbJh9X5$Fs(Ok2:q@E@u%*T&n%q(6o"f^_dj/<OJ7%+sF+FTNR
%WH/"Ge>q?(pAEY?YE@+O@$3"#Il8t6NI%em="$H6cO"sMGIsu0(@PjZd(;o@[+gRj&KF)a'b#,lccaO+,<g-Q"7YF=<h:g#)YM9k
%\T:cS`75t$^#.1mZAGBU6<oRe1&R<ofPl]#BEoD\X1,n$V+BnUS81&FkTH^^YK@jg,A'fi%-f^q5tT6lG[od;s/;o5930KQh/]n5
%3drlmo!['u2r/66;LhZF!>WS*_9/.ED"Y"3I/N:p8m6fG1b^92n;DlfnsKmqI:"N@$hQU^S0.U/V]M@@]3\bOIT678n-Go>+&.>1
%<)[m-O0jm((Q*M5ah^d(D[h3B_G@&m6srd;/m:V*J_$cKC-s`RQ8J\%kf<>S#Vd&eYn]dN.+sto@GB-i[HFrRE:J;&//n#Qqf!%m
%Me\@hPsTJhLY*ZVaP4X6Tj8tBjHTfE'U9lH')tnh-fCLD9%d+QXB^c75tShUs#kc4oeE!Tb[M(*YUmu&4=dW[$lW&E<K!OkBbBtP
%2>C%*.\[<"n@s>o#<uAdanQkFE+R6U@0.5B3!C7MXF^aCrWif]NoPraNIkJ5$`p"O?ki2-HnM&9BC\gSNcLC56eVr\!dtijM+15d
%dKu.a/J2VY?Kd&\&l3>[(\mN><DD"D;mkQ(<\s6/<=<OR6qPqu5@$'&CRB$.6&8.-6n`4=%FP=mq/cl!0L7.ceY<oDol0MGhTD=5
%,Hp:<]F%%U_#/R4QcnMH3@AJ&XIL0fN&9ct@m9B(22/:SQ:.qIr5JoH]gup41%!WANWZ"L%^2W__[8S(9b:eOWb'+mj;7.SqWMT"
%<<JH%UhW^/N)4r2%MF@8/5s"`@bMq2]KRRaVd$)poShJ3M<.\@jPU7kAn[m,GWGP,^aK'&d4Eg%GYP'+#0D&LhVD4tU5,&N'I(eD
%?o['Hdk&[c6M3&Y&q_+C<]'`seh+j[G^YU@eeH;j]6J+6nieg@)EJ?6"-HF=?P!?7$&s^WiIKhk6ZE[fio<A5JM*46G8mqu^U![N
%fR(V#WI_P.=9B(AR")\[i'BeF[Ut(g1-dk!R\CRG7937VC(Aa[",b<#c*?c"1<Z)Y<btSc=\psNS?GD'LA3+5^DREG<&N;>Cbn`L
%eA4%C"-fkk-A[5f:]sdX.Q\$<(f`=@B2m=uW,.2X:@VP?P.[;dZ9X:2.*G9[AZ7M"=SU!hB`u=(eKjh(Y:E,_!:-pWrU>,2&2e#f
%9jtaNE^aZ!JYL^\@2klL/Pt@8..f'hp,jc!,$JSTr#-CP"3cE%#/^K%OTdP.0*Ifj:T3STf-Isa*\Yne60AC,.s/PQoi$5c'/;9E
%"!&8>UQN_Jn8=1&2S"N.&Uc$G4#CnA$ufKgE7$H!^&c(.KD77]ehKP3('KG-W99R[gS?)3\8*X+W[uI!=J02I-hoB+JT%;ATb;53
%@n;I@QEFro_9nYgdUEQ`1&@P'WZ$9C-<*W"Wi!ssn^ct>VSrP=MX79RRApqsi0sc<]4*s#I?p=&Fk`3VbH9;TjPET(M8FGs`^Q(.
%NS)`$;tu^"mrjW^7NYR6:]/P<:&+,SId)!elI+jC]n0tIEqeaMYI7=Zs"kZHpi6IGjDOp*d!'i;WHCJMFM$W_:?AM4W-6u4@Ap.Q
%HXO)U0Cc7F:Q14jb8$]D_.r8W0iZl<$mY^!2[0?Lms;Bk2$+3r,@NkC"Q&uK'6E9d0<b3YW::Fs78=J)r^fAq5I4)$cNGNkS/r!)
%^%4pmF&bD:P=_`T'@;>%ditY`$O>,NiFJBlUq:<R-in<2m.FnbbaM;n&%WR0L>/`<PI\S(9k9/hq:#\=9M3q(%2qh1U5(][En&4<
%Zj+d-9#(;A9d6o!o$e@"pe-gm\g[=.@b:QB!9$VG2C&"G,-KH[maq?$;'(BY@#ser)*H$VKs24?Ro'm(E>2)IP4$F;V'0u/r&@A]
%LlU5BDT1Gn91fL!>q:c*CX'H5X1(R_Ot[pAoEZ>VBo.dla6f2im;;u/!n8[F(L!X#dB[&0l11<i6-dX6%QqkF[FEb_Paa[BQD*)M
%OYAG^SA#Enr\m0S>.4p3IH,I^hHL2*Z,B<tQqK+Jk:i8rO=OMSEm%R&)9XUA\Hj(r=Df#"6273.;Cn/jR(8(82Uhndk)p<2qsdqB
%rS]YpYKGDhhm^9a2imJ=2uOHO/qDoqBFI@EoE>\HHMqU8rDBK!Nes9<)1BY6^i"GElda1\m-%<9D8/*Ipf*Gj`9J%:@^7F=o/"-e
%X7b9I(eIoXq-QkU2H9^EqHQ7XnX7R'hE^NA:O6%)Pks9=UZ7Z%@fG%OOrG*[bN]%"ADg&6K>Au3R`DtbPQW`G<"Bo/DW.3_]B-Ja
%O>U9RC'5l]0@t+7qW/[D(DN8QI0k)[oEO,T\`+Z3b/mUO#^oGMNX\?Q&r?7_8&KG_@IE/a#jN(cn_XI[r-.Ei`aQL9lBdY[L":`\
%2i`S!.LEju/tJTP#'K'6K,\D^Aq!H^nQ_XH.`X)TJ-9KCHB\pf%gO<'Y`F(#AAV\LEP<fo5taOs2E_tAaO7"t7u.@tg3."H(<LK&
%iFh!o2X5_%dqaMn@_#_3?T$Yg&m>+(2NIAG"Q(J/I1o%)blQXE]9b-jE\>%rj;MP`a5aZ&@_'\F[X:BLguU>LR]5cH0bR;=lY4U3
%6Sd[nc-5$iY2*u+]<;%g":K@qEuU$VDM+c!*:h*B=U%GWiZV&Uem+GF=\3:oogtO$L:IUBX*)'^IPJa_rH>YkKib3#0N'\DL+JW/
%>6O&Qj<2RG/$DB&rjPj51TS/H(1KMp,3Z*s\9TV3&cY=99lkp4nLiGt4;a](R`t\7:Z*qPr`i7Yp!/JNP$m>5**uI'@"ag^'J(mc
%pcUu$C4D.(2G#i)qn&bm2WqR'SCudWEfiVgB&@\W+C]4^B-tIS;sp[@C:T=6\)CAN`V78=VFBB>Jec.ldl1NBb17nHmr]Q1MMpq.
%m[$"VBl]YRW%PnagK[--_-=7FToUbsEAGB&0o>qj+jRB*S:+>J#WE8@+_';+3W&p=ECs]KoiiWVRebX!+P*._fo^f@\aeU@SEg%T
%=-h(aCo\l;N)Zi:)Td0h1hM&mCYa.i#p"[W26U\X(F/+Mgri)h:uG'+'I*W-eKhWjE3*c9;/Z;;rgA9NcuT)*2k`FrQr=rl"<g/p
%8H@/0*XuDA_R[dQPcN=q5'W]MScEn:<$eb9121(TYDJ(WoS)h57:`IT8ht:Lb+La3Z`t]BR=m[SZ5WD%>>B-^VG_;2p=i0a5Y.hP
%N@`5SH8Er.XT,FE/AT5@)tn;"b"MqOPss>^P(\X:94'5oU<HMa2UO@Lq743F4&M.P0gEdI"R5hEgkrCbpi*b[AU<JdJSR7nHVscd
%XNp2$7B%iT?Bc^'b`2-tmR::H7@=aOZe0V%f`/`nPXOebk"Y4elpXK4`4RC;k'\mT,/K`Dfs(g0;3DJF2]gb5lp[=t<LS3g;j1n3
%h*>aLF"HMOo"7BFn<P:RIlD8hcTqEZ?;.[1$[$r-B(%iXpNN.bEk6$-m8oH]ft?,4ZY5\805m7]lEu,<f?C't9>H.U?<c^&V-]W!
%]iO=uAEg6Kh6gBdCG#tY;QDCWg<I"YdTKd8CJ1e<e7so9e`7I=o35P&T1A"/J-GsO$\6E7FRs3W/Z2GI(+cB2EZ.BEd:)tq[rL%K
%s#aYA6\'[a'qX[F<hQ7I"T'fs?]Ph:]p*L!<<%*sAp`U0#4m"`b5tsq_NN9O]_,eb6^(t`Wfgfqr2ldQcPCn_J%+?oe,o%'Y.(EK
%XkjupN,<8'3c;L#:F(u6m^,MhbY):i=g$kG06*6$^l:"\%c7":RBXZEnR^9VUW%PXn06P<gp8'%,U6f:[dc$"&$rA?'$cqKTDUWS
%4du=*jm?ZXh#lR,@$';Pqmk)Z,:.'Lf>M^dE6Y3p8<>^?*gHtpLBE[9(:>K^+j$h#T&QPA6Gob(9Hb=]l-YS\Q:A"DKkSir7JY5c
%F\M/cc]rAF:"T8:-^WJfpTL$'5D]d>5A_\/E?X=r6G#AE[lin6'C3DkE&$EorHGgO]3PAAY5eJ2T5F,LIn>^Z$F$OH-.FBe2;dMa
%n*crb\`PDuS$t94jXVDd=?d=qTG^OA/_>A?3"X7jhrU<qU9FAnla>FhaX\Pk5Q;Bq1,g[*6%W#HSSP\WghA&XC8f(XW;Gg;)XY9e
%PLug@?M+>-UOm^&-D3%r@"sGt9A"7$`tC_k;i>E)fVLmC"u0(TZGPf3mF&)(K4TdR7PeSuG@>,A6cKSNen*HU>?g#\\Qe`-[=6fc
%qGD/ih#:@+X_tPYjjqL1WFb@2R6(3I)41Qpa"i.Qbb$KYB??.=SR==Nr82gAcl_oj>Y*4(b\9Y:R=H9d!P]r)e4@)J:=J:i'IB&A
%#u5V]8tLg?-)$=];X>2FA^p%U'i=5P`S+8:Op&4Fo"mU30UIXE/]1#S7UQ9Djn8<Oq4usne+5doV'm-(S$Yl%//'\[`607#@f[5r
%,0dt<0-Uckq3P[PAXRdG-=3!pQY#/fR<Y-X`(OT6?=KN"/h@Z,rfm4a*B=mTl<It`DNoI8q*`Z*SZ#i<`7XXdM-8=28M3#joue\F
%>]MOaQVAa!@<pPET<]c$oC>?@ICZ\&(E<&H@C\RB2.7Pcipr7h=Z2;`S![g*3%f,YRLS;E>QN0`?+aSK4?']gGluOqTQ-LBp%B=1
%m.0kHjm>^i'%>(]q=.IqgAZHpoZk4^H>+EXe,SF,r42>(&mTsq4O-.0ackYVaD-<n8dT4?Vp*B2r-#3nF8I@W?+68!S^!-880V]A
%XBS6@rgEVQ5G3#m?]5$bNJ&or0JI8eo,F#^k%@MV&_]?8BM;JK9U=&?ld\C-d0/=5bSnrn&9Hq[gBQaa:5bVOAgAKHM4OWYeqlrW
%e5"Dh%It@Z/#8MWN&ci/(+bMT0(To9m/Yna4N=JHr.WF+,a#EE*b32Am4s_WX(m$Ma&qIYjs6"=&R)r>BX>l;5$N^8XO\t)qW5`_
%G!3tHCgM!'A,PVi6;lp2GOnL`LdfCH,U$W7SE(qs%^cMc".2hJ&mZ\),>X4G-(Ws@Sr7X8/U#t="1M9%&oL2.VaXgjIGD%#/#*aF
%Td0m&S^\U8`[uj,VeU^d/fI>+`3jKpR=l2>Rhd<nCPG;/s63iGUne[:@FB'AEK8c%ULJLed%&o2Pf32HY76AaCjBmEDbU/cjP$9a
%Q2!?WF>!h-Ql#@^'MK5!c$GVcBU>;AY6Xl_1NoH)V+b$f%:=sJR@=Xm8Vif)m9W@TR/P99JVcQ4FY\E;d[A8^K`k*7:NFY@D)hV'
%>+d]qK"W4HR)N*lC$\'H`a6Z*^Rud:dG-LG>=N\WBPo_a=[mJ=7D`:uEs]L]AMgk%dG+e@%pQ8_0#8P2Eu<4LTP>@i/]5,134B=Z
%QJpUSS;Tj%`Zg+XM27RhE,L:[5X:ZpLtN=':>>1$A[e0tZS(:K7>U+Bm:D--Vor^YFr0LOM$25\nm717rKtcT-+m1R$_Y?PqLX[f
%7A$oZ[V?7j=8<6HRhq')ja&Gr61%FX;XaY@9U%L&om\l_A>oahZpZP*6d[]n(D>0dDcFP0Vbn$0D_>[";See4bB_S6DIu)UfqSof
%Esjc#(YUBA-DY9O^F_uaOSmAI=k<\2.@HZ^TAY;=6$09cU*nub`!4U%e"Z:!X$l-g)rg8\NH#G^9OP6C%$)GGYiA>9;5=c?Seb<4
%[Uf%8h-.AK-7(1$T$Sh/RPeJV!lgK)>AjuaXTeQgdi)he7#Q"CPaUGj-+<oi--Qon\5RRCno[jgV.9t>lbBbNA5Prcmk2;a.7SG=
%H0KI#r1F16fV?+K:T*#h'6up^7:t1Pn2bmu:N*bada_P_78'QBf:8S3:UKbN-?nNQkh`jnMJi3,r/CMBMmcE,0n$`HZ?m?E5lq;a
%H5)B%*/HF'a\#t5Y*2QUlRC-T,W(Ik![gBg2VU'Ig0YGd6(bS;=e,Gma]F%*h_$hPrPNZ(A;!(+7^:aNpTL$'UA$F/`c2b/g8l76
%,R/_KNFNS>QH!p1'_'?$`>_:^9A?t`NAG>hk:qV%Hu*b&SY"`6jQC/<IVUV!;BcnG%\L^d<IEeK.J%6P(\5,DjZTs2HnR-"Ra)I%
%b>;JrHO]+(LU33hIc<QeONH##a!?i3+jP_3T6[3>$`/2[2U0J9ffhHE[6JQ3c*j'C/FR7<&!&=2aI)?d[#r/QS,#]4IU@\=.c_R#
%nnHO3jWtSH0^ir<f.?!1R=iHkbe,/t-]<,2o5]WB/F%kW$/<\)"IYb_`sCj?nusBX^b6_nV.%'F=nKGjG)Q%]'_<EQ2T#F`7?Z&h
%MsR7.9!Eb1"M[TuILKX\=dp*1Xif$rWf]^_ZF#lp;N!/>]1XlJ[[=>==(^-bD@W?O#EPmWFN^dm/]gWm1FViRo4hmo8\=LqOL[o0
%E2nAZj1.j3/5mXbs0Ul>dqC9WS:<U$QWl"jcPF^]e:S](K(L1la-?0^X6Mp(6ne^/kHEXB6`>]V6.lh=XF")gal!$hT@]W`?,kj\
%A\.hM]W/OJK(>qlrjtV6TsUnKKT;@,^3p3S?:4`aR#^LW:;caePgfa3Pucg-%K+/l+8F1Z1);me,,Sk<.RYt)dkXo%6*h$DJ.It.
%(kr,7QtE<%6C>n(P9?m!4/qrlXN'#_oDU-:p(BQ;"5)K[VPNoa+$V9Tl<j&B&WSBK>_UJPen4!V49uEP:L_4PINFdoDSPXLX%M[H
%!i`F57:elGA(hiL:fLGK&!"M#?1`7#it7OEot-G&"MQ&ln,J<Y%Y+$#Ih"!u-QD]tDt@SY>(T@66TIgq8,8KL";4C8*rg%_Zl<,t
%s-"`j!ZfgCk]FOE))T/=cBnDN-P+LpGQ<sbr&(:J!?`i]R'0#\6pUI2ih*75Q<G0&],mK'[65&G=!"erk<I,FhUY*4"3C8V`'DW:
%9eZG1gp=!ad9%#62;4=2GN-"qe.W@8I3o64W428aX3'*@!>f;/f^6F#C(_(-UYhqFr&RcrReI'Ma]ME\bXJ7oO^t8c/dOC;$Ca8C
%Ws-G4%=q#1.t_0Ch4+N=pKL(.ZWBU,%;dN;_rR!W-g&\DjBXou\j)*1Q$]pRB0a2o5a1p\ouc9mESXGh:QF4N@gp>5hQ*J:">A?O
%#A)!uYGFubcdtpa[`Ob.gonh(T+QB-Opop[4jVW/T//eH.%4ta4cZ+lFs!63P$@5oFR,9W1Nq99iBf?\5EK@88P4:;G;^EHY\Q&B
%O/CYb=2D5SL!DZmgmNLhOWI(>EtUAarc-hted'ILOkXY1"sP5P=-VBJ/EQ&%^el"l;T/irV;$%&WPbmnF8IC8b4B7p[c+et'^^*B
%?PRK#AbMWnVqchQHM-En&T!I87L)f5h>TjTgo[H*)k^]<^LheOG08?M[&IZJG9*6o]hZ0]`@En4hB]EiF\qJTe"-^U+QuBUi+?RS
%Po95KWM=L;mrn$sobE4\fpY]ma1klioqU;(%a[ned#=+ZVHE+-i16S,W]_8%Q#S2&gNA;H6mM(*8#d'9;!tqlWCnZAO01aUA%hbW
%n&hQ!##Q#.nI8a4g6M!tTV&g^[Kdh(X!sb-%gMtB?qb6A,%C[`<=,dgMsR!T(XG`A-gF\C`W%8sp1;kKVsm)lbK)6Q%[oZ=+)^A^
%rMQ8;<9sMR7D2ReH\RUGI_EYjYZ,LG%a(,UlEK+7=W!`\8*K-W1XPX*hJKVQb)IXT1MHDIK-cdHBm8XD_u=Q+(`g5J(Zdi&&pinf
%p[UKD3o4iO\>=AFgcu#U_NloO0LWgUA,DW>)_-'\$H@ZHWLC#l\g0`a5MSjQ7KnT$di$j_+dL6$J2Z[E2q<]BM&F)ge6]oE^@ps%
%0$/goS#BEG%*CQPWKR.rD0VM:l"MFqn$0FKlkKbbL,\Jfgb''OHon#PPt&Fh_M@[]59Tok:oH=H8B2C^p(+Xe_6gjV_Q\HC+$p2n
%^qTXUG8DUM3D!<2T710B`ZV$.#iTYEAu4=c]%%Yn8j.IUmYAPinm!R_*iBLBI?gd1;kTWk`1S**#"9D`FqP^*Y;)%MD/3$f'iDf2
%^k[:-XaQ<9V1>!ldS(@5ROU6Yfa)+t#S@aNBX5fQ(&"frSI6#)ldbO]l[hNJHS,rZ:"Vs3ht8=>f#*_6]]H1\>a0Tg^=[5Og8XRh
%QS^%KHgG\TSjf\#LiKHOU8]7n:rJ8`%OXqF9UMU%KUM0K;%;Q5,$?'$1,ilBhJl8S%;DPuL#qO1h/]o`C;8Q($BlF:JK_qQ99kT+
%R4^-]k%1J*)rg3$7LUN^:G/&=N]3!R,jm&20oj"WQ>ugAo8FJY^pJSImlR(XR\u^s9IWB0o(?-]RlX#B;nYpqETR+WXg>Aj&i5d?
%=NS04TX(#tpmK9K5s*8:'r!!Y0qQ(;;i,[.1fgOgED.Q-o#`<EO`7daCMIt?c$"5Wcb%_L]6fqehf45.X^<bn,T7[qnS=VMpg[S'
%$*2ORr#?q5*3%BONFaO]otd9mrV'FQ]PLoPK6PJY+C1YX2$p81D0O"l]@Q8FX,ZW4`$4jY(Hu\>>[tHh6h6gXB2gO4;9+MSY0Xe'
%bIoI%Rkc%cdVe_l4a7rEK;#CrpP2aB";)_hG.XoQ>[u1.6#4$E+l+WCrR4>nS_5u'!"sU3@sSY&m7sK@$)9G>",'Ml,h).CJeR9'
%3"<Z`6)ubA3=o6%eagWT0k_48Eht4#Od3E?j)jS9]`@p8r`_8QC$#-^i:,31lA%EP.]B#hD:e(PbYmJ*!B8!"\&M-Q<-hQR=2/Rn
%WKOdVI)kS?V!Z1Q8XON/a!-gr(\N6`4ALbFQQpW_&co8+)C?4:Tg%UL`cW(pIBO,Cfuc9MQ7Hip!6ULO!15X2)-?4nItJRu(6*^_
%QrnX4@H_9tgdtmW"QDCN5W[G4@16B]/(7c!P"\O/3<g:SWaG3",G/"r==o39i0U+;(U<W&S]-D\%R0e9]WSWlD5'nD9Zff7gDe2]
%^db_I2)#NJTo?g$m!a:0JMJ.S)tmehU%:+UQRj&3h^iuTH]amI^^b[^!*S`8!q]=8@kDMQcp?"&[k!]/))mbi$de.hg9%V9Sr@P#
%'hN=qLk%X2q[m%([PuJuFb_de"V>[PQ\gqDg/bAoqSW,]GXS,KRUkj'dlu>Qi+>gh8%mcH`lT(f,Yt94F0+p@0\cOV57J1X#TRXJ
%g5Uh[Z&p#r`AGs-2nV\:[(5'^I(b=gn0BAi$uVu#G.Z-ohM][(h28.9[0E#g'-BQ.H4q"NAG+tm"qu6/]Z7;=)*C+Jj7o;s4=5eu
%Mp$8j7<'K`E:,(5iJu(;(dSB'Yl9^<3-;bif>kOLY1p8!WKih;Mpt#t"gF>V<a#Dr`*R@f2gTn>Y(Kc>fY,jY$MQ=!<;O_!B\)db
%jh"0L]!:gGYL+2K7;R0H[l)dAbD5oQ\[U!0[=QL1:iWYniJS1gGFUQ\%V%pTh/]FR/#AMp/#YC,m^aiD'e(l0;BR/cFYEF^Q.nq(
%b!1u<E[ujGY>RBA:@qOajW8l=WO=HfJFc3ZPpi2LgS9YbmiF+uWq^4ROQo*pPA7R)/uOH8_(32Mf3>5#MjI(.KWh;H@D@C0R&a3$
%N>5IK<1Pe!j]&#!bPf@:.\O:KYOM4_hOnnC*StSnaWV0Ej"62_@.o+29XSY%L[)S&TQQ6L/(,Y3e`/C6>j9g$P2.":02;uSS1G%S
%otW%$kHGDKH1A.SQt%BIYMR&&Gbpfc6;Al/TT#e&0DaeaX_N99h=XBjN0"*%OY\$<kWeL%>Ldb<]ZuRHQGhWON62<abH#riRY\e%
%@q^P5j/+ZAP6Yg]4$BEP`YG4;@S;\g0pO5SH[Q0JhppPtPB74'*b+2oX$Q?O<N\:#]'WfQJ&f?lUea5ZAm+EX[F-f)]^EADqD"Zg
%-UC!O+u&T7:V-5]5'Y;LEe8B1&9-=DFH^,0$VuVkIP`4q)X[;&Xj;ZTM4dW-6oG`?`;8I7rpenJlpVM\JKp[s$$ns*S.11)UICNM
%U(_7O5=)89n29pZ#I/hk-.`jaEt[1^(0<gMPp1gU"KLaKkE#=?'sM"AI=3>/\lT&f>-HI(38<E?\<>b7MbYP)/i5OJMK=Mu4JLWl
%FnBY_Np,b&)]l>#*h.Ae_=iIP>$S?K@V:4(0[p[d`u'=io_1-Xm2r$EZ%Rgdf*73HF$/-YT8=n.,fp]OA@uUsO_R\+NG(GT,A-P%
%]T/3tC0McaHGA9NO(hdi:pb8nD)^9*>Y@n>9]'@/8A=VgBX%hCJ?f!`h7YF8aDHnfGa-RbH>u]WdVW?Uqk`jZf/F@%C[kq_@VoYd
%OQF*j)G%eS_=r>V4(3XU2d"L!6hC^f]Z-H`4:VV\a5nE25(mlt.%Z93m!+\qHdQWk34HA0)gR6IX)oQ`Jc>T*iQ&@ne#/88b4!qh
%C(Ch5Z9-muk1/U*ld!]5Sb87<\U$9l]5PE3;)%HUm_%A([]_pQ/:DiO^XF3&XC=KO[i[;0^S`Knr3uUc\oN:5lV%*EcLuR^\'o]#
%5(R<h[RtbT*nJM`p@?1lda#;h*p;faT2kIHoV9U'[S#(+B[Fm<+)G+&G5M)RT<nBLNV,uO?0VI0rN!>=k.O&8YMVRhIVV&,KkBm5
%jlJpID>,W[B"`Q_nPeQqQ[Um)<>f`Ho?R&Pnak%<0ATmVY<Nj<=*CW%BSQ:^r!Fc%?i,4cAK*^jpRASW<Bk\=I:+4YI!qBcYgW9:
%mH9O*Gt$*E?LH"uQSs5;pcZAnh7Jm,YeT#?*,jVJnP6_M<sR*2o5/'@;Q(FN<cV:<q:9`OJbF%7qg/5,g.q(`gLAGK4F["ljh7^s
%8u6opTB^3G>3Uo'c'0SeX'<@=FgM)/AMr4enGL['GO<j%;`]C&*=5j(fm7q?5r7ZS]?`R,<om2"mHOW$'<CrnC#-(doP.R,>M3M%
%f:1!fZBB^jHO$(I*kBk$VGoM?\L1r*A@DM[ARjQ@2QXeCVr=`L?miFmIIFPImML1&5JQs?]_BXm[D/e[^T2h=<%mZfVL"lB*WSdX
%bfBHs=?`1Ok*m-ll<3h,e_C];qQ=""f]RVYq'Y:kLW)>j+1g*`M-kY(=pP;#;(h;)l1E0QZf8Fg[!c,&`US$8Ks/-Ioh=0D$%B(Z
%4aU43=7a`kT8JM$T5JRI^V0V5UZqLil9!'*?8I+sIHbt7F3k*!o(33m>b,9BSS\:qfF8GWF5?b%I]I!So&&$h[3r/l(Wti0pTs#$
%gGdF:KD0:?#J'20^33c]^@V<pjs;jJe^%"93C?#ueIR@T[e;>S^X!l6oA<<hF7jJ6PHA$[_.>?&Hd%"qcb<T6;7.E$BHM_B^<.F[
%*ks2e=0&MaG<B4'.=`Vhn"ejB4b$Q4c:N=og?"m-PQ'C^aijZkR(*EC,u/];n\0@jX6LO6cp8.[.4BSB5.FS,DElGt`D8Q6ahd]&
%m:%,IjRN(M[dAI!N`VUYo&+hH_8YU5<Gt-M6>C%3]e&P_c<i>iS*dW/f%8nRm8Z3BCnH)O=7:Xljuj#l`#KaWDK4cHB/OmE*aKT5
%9'Ke-Y:pL4g8&PF$WRnj*LL-WLHsY.e_K7dTkA4BhB$70&*dkN*"H=4hM!Go]3Eoi^Mr1e`OU/!je/$caaS@APg)!3T.QU>a7Ycq
%-+r%iWs4ccTIT60^-=/4rPRX[@:Q@*2a40UcZ[(_4UqL,5Zad_/E@6jCMk-),MePq0A`g0X8+,M4--`*qUK2dd<aEiS6WbB%s>Ng
%o.0#=f%[CYikl5kA*0_5oa$G'I[E"E8ln?%Y3'M\?C9*sp(^YcKm2umGT%T+GkLl#/+-Y+I?47(C]6Z83mG<c;!E](*bLF-4uVbG
%NK%f'DLl*/AcdYZ94^23^!`kr[s-M_V!:/a4YFoo!S\ftDPgYI$7eoeT*CT/ngt4@9&I45%_B\J#kllXXhA$MoQTDgO_'0ba3=)*
%QT=T<PPMerr?@R4PcsO@+-[gYfn[Chk'1j>#N$.Ll84#JGIj'aLO@2(M>H:LqtWO\AQc4ZpQV$CO#tLbQ"C'rWb.MtXIA+??Cj<&
%i7%R9!%[NZ0Qrk\'%i/%=r&DkX^(#$P2G3HWcQ5hM;hhL]HUZdV[.OnO5SKr4@^")*RTi'6,\p:U1TkiBH:"Fr=UceX*N)5hC%Y1
%eH2;7AiQVd-$F&]Hd#om2PQ+u_;\<Eq43PS>1sbIJbh>`+.l3F?hP#=!UK,oq!2EZjsILNnn#jOjRsOL$(Rh6*kh8^q2u&OMp6oF
%.t2ka3Z+!A#b"WZm!AS]XpY)fcTG6^35Y3;?b+OFpgDRgSJXdiP$oLPpa<7;nSRJkPRSP#&`PN72EonFa`I^W1<_EJJsqPV(FPQ:
%iGh8[)NeP*8cg26/U/*d/P7u:&e4\[KY&JR<_i/)B;&A252PT%B7/P=6P^_Hc9A=mir_*sVMpn1=:FAD/?74N2_d4HE)UpU'H6!-
%HVU(VC&[<$L%p&.bl'&#UgXi<F/I?T`n"59"7HncKS4;J++4LnKT@o:mp<DZ4-//1L]_ClCd4F`$`rN&WVCW9CpSBLE>m)jia-HT
%Sd2K>+8hQ)p!2g8\!OZ%Qh-b7jnejADVHEY_rr2&%X2GjAF5Vu*K8Rd&J'"AJ%;i\SGRtpH`Nb?UDJg.P^>L\*j%E4X232=r2WoV
%ZSG,*F#S0iarfsiJ*C:4F5,>]Z>_U8'O#=e<Z:/U)deNjkdO@UY'u$hoj+Il=[.1p2:p@f.C<X=Mp&d1\F:\]\]B>J3H,&V#k.,D
%I3:t&Z=a4..gEdaUY)_h[r&'qpGs#CBKt07qNSgVT`YJ4]^ar^JsQV&$TV%u(q_,M>Wd5W(Xrm>NX+./#l2Yd&Ad"YFSCJ+LURes
%L"l8!AX5I6J5nm8$Q"%a]^8-m00\K)A^*`l_WjS`c-FAMff'F*pW6E9?LBR!L/i8m6IPnXI$N"GIC%&sk:lBjk(t8&ZsHl')PrYA
%_:r$6p+T4ON!;E_'m">[4u:I(r]JiX2U'@*'H9:n6$P*=<VIWNHi:a6H1khhdiT>"[,0^-gq@Zs[4V?"\DGYi(hWZ-:c>qRj2T@_
%'YjRk.S%eqe=F'm*"gJf4Ec9_fD:0]JGS7$?LI+-SPA><q7.jST@6&E)RVj(H@HA*Q,B'Y:R"S4)nojdeYdVC0790h2QP)WJj]2d
%'M4eIica9Zg98IFIeip:?Eqiqi:Ktj3),mcfD>Fn+)S&VHC92&\9"UOSi'l5Xq&_uADXs_IYT)WpVlAU9sD2,:pI/.(PbV^PA]a\
%%btrtBlA;e>/0I%Tc%2mM`]b_eQ[HCs7A=ZYbaJ>qMG;]:8p7a4fS"):A.+W+(Q+prjI"u1_(VBA=Tc')u^X$qY,(p_kXWVqG-eQ
%b88.<X6VgFY#>UVeuLAV=%C6hq<FM$UfH1&^A-.13IS7-E:[i3\.7*:q*s?rl0=sAa,>rTbO4Do6ILVMk"akQ8+gM8W4$6c=>_lF
%aWsd0B$sB(Jir/iBe8o[V_LStm96[LX.,?&f_>_I7H&SG;ItGrJ5l!,4(-:GBrnSqgoCXQCbkn5CX`EdB8?H0X#!f<A,5cIlY=/f
%FOiSe>e(7$r,X0VHZ>)cViCD@B5*qki7YQfVoGV2oq<m<p#>I4[ZNa_;!DtXHkC%H\,#m&rOHnHjhXINroK]An(B?E^'VFBV%7[P
%H2dn!_q@BrFBQ+unt@,uCe0&*U_$n#nBrUD:tFl[k;[;(3NBKh(#6ZmK8Xg?=LM'#e5csB2<@b+?ZFqQ.Qk,LIj!Ismd4gTJ,:q7
%f;sJG)XlO\1N+<V?=o3mequG**pe?aZIc23PoU]Z@%KR(msQ`M7M"R9:dA*#+3/N]5'_DQ\9NJkiE<l!/B]s<qs4'E/#t2]ncW-H
%gl'>\f,tsVh6#E0j/\PJFYKjd]u&K5ZR4Eg*3[Y5p<1anqu+7dF:!]tnrDBV'eq,\)COd/d!(Q=.!m%[[m_=OaecZ<rjQ'JZi915
%559HiR:?0^`T&r;6?pKg1pckcrUJ>rXET`-f9NIj#g/J1AbDM_DO[g_\*A\?p'1e:dU8JQU\K,Dfmio*n\4hAAk86Uot\$&?ZGi&
%\bU\5pH&':Gsjp9g.1n_7rYHB+2LM:I$`VX;3d:K%\MbJWjI3f1Ce,dW38ndC%;(Ym<k[>":h^Sa=m;UjD2eCgU[1:qZb-NIZS8,
%gM=h9&rd@ChEed%EV=0D=QX"tn7lSdgQC<4dC8M.SaM4g5RkDjYs)5rkA/Ap-\W(Ks'^SWcF<5:'CZ1>S7UDU#EP!]@?L)n./NU8
%d!b-/o0#ZESins=3%8jM1PM$OjW'CIH(M4Ql(O7%>!qrV`P#_5oD,\ZgUTFmEW7KBb;`;#1[ul]a5;'sSa;W"g\JS5*RN"(md=n_
%\sGL%VgD1<ba;uLlKVjt09E$JX/*+Cs"@X#p24BT\b=8$I=_+SqhM:0J$_&ZRY;f[ptpU\I!`BpY')R^.Xu'E*9>R=eW$-EfAE_W
%cQ3!G1%,l^3O*\dceIn+'pg,M9sBDH+aDL]EohcGlET*oAWFD_)!#%Ol1OW5(WF8blMUs+5pFXhB:B.PN+&E*Eu3'Ro`oN1[b(p8
%4oGEVE$nHP[?E5]K1`6p9uXg&kHDK.MK`CoFROYBkA0I&3_"!-YbRPc\2a,pR&`C%Jna;b2s;tuR(h[b=7Q:eDfnK+Y-7E.cQ9US
%G;pqqgfE9[kkXmh'j(+/V\jr56>c6Vmr!Wk5[pr5`/+CJOnO$2eMb!CVr0,nI`i_8X9R)IoBVt7B:XD?V"D;Epf)Yc0iI8<Ik[M.
%eI*7)j4,)J)(_X&_P42^.B4c#7d=lre1+FV(,W^e?B*pqUPs?.?\EDY43Y&f[?V?K!;BjRUZtq^Vb4MTggAOG[[oUoPA&*nUgK)*
%W!VDFm?Kk/kEAq9;4eZ^J7s@2$C.s#Ol(H3q<fE0\'`SZ\MW]Fm5/MPd;q>!T"b-l;IU3)U!MDH[<%ra%C%$jilZrIG^ugSBQKrW
%h=YKIEu"R*<g@KrdJ4];o-Htl9_h-96J6f5qtHgWPCJ^/P[.PC\;,u*9'3'XlK?b0^/mH&l?_B44(N9.R>6L=?1Tj?3d80SJpm88
%l@F>4EE&ZOHE5VEp^j1sDe@oO`HVR`TYCkK)K9M)N2*Y#>$*k2Zj&YjZ7ujXffmX#=8/EQ@QLZ+BZ=uhFD&3_>a6?%BPkeb-Qp^r
%n%%$Rk:7F;[:d/`:7s"4FWsg]=5L$M@0H2u8c@N.[d\E&XQ"NcM$XO<D!Y9m0+/YE\(AZSoSqkQbDg^+p9rZ/E]5'uJa0"1\`mba
%S)dn=L43HK_l@d>YqJ/)P(b%Oqr(9F"ZV'MAZI_.]2;#PI[km3Q13Cm8THN.nXV\\i/A`oM`[7Jm)OaBl=;V-.5E5F@$Il+13BOJ
%PHqlo3F:ToZ+58;$8k1+>,VktSnIDLoNcPRc%qI4I;6;qrOQ/ihnB!dcF0>-?KA7Q<psK'G'@TrNV4[ulIGT6J)*+g%/mPBq-d]E
%lgn?M8?FgdMRrf#!_WL1243?+-Zdck:.$MAr-kQQqYkC3eOp@Is'E,IVd6u1!/DYtPOh'Jdrre+E_l:nL3[uiIIO4R55Y>h!+F=9
%n&=['70o`nX*cedW@+CgH6VK2I(8lla1@b<bm;[[cT1=$g>5;#]lX4s7Z\5<XB$i!Rqhch@CEGW:3PNEGi++Xl">YH+%LVTj^M'a
%qK[%64#e9Yn?gSH5LF1!j8i?G3da+8[3lok0`#]h19HJXT!.<D<IRf7A/1qh)khT8JRA:c!'EAj!%RE]+S\u.g1f^1X`Y8\cahp.
%<W_9MVkGppEr,)NfW:+]b:),K4&R8fpm$97I?K(bIo=s+5C8[?f^!ldhnqKQ6aPA<P=BQL)^+,9'u7l4<\ao`?JrE\jV`)*%JAu1
%?*G(3a0"oHq\t:":C>u#'FR[J?MO*jl7M4kNO'K"YNFSlO5GVr.2>(,XLu'sheErWk,OR"?X9d<Xh?Z/'X1*VfPePAfIoDiWP8D+
%Y]48^B(])>6P=tHQhAPG8\XrOr;N_or$b%\.hI,GZZ(PG/WZO`]Xc\-I[^:A5J&;"RpQb]s'UJJU[$4_jK<[+)u70:mPNo-.-d9t
%pPLK)Z8R`fiJ7*7`.Ceih=PhX*Fi'DE,ec0!]:j1q?&bl0<19$p6$jH*(mtB,crNGE.2E*;#^<.4k"_+kHO`(jg0i.i`#j<SXL15
%d&[*BbLYOdM^*<7rS%^Q`[qPT&HkkmNL'u!Lsc6,KbckoH%'i+hWI;=Q42r(Xg#S&_!G90LUhNT.o`+RJ?%Him+cgA(-^T!/l+3b
%L;(@:S::<-k2`Pja'Sc&ZbQFuA)TdiH+HA+D\NUT5OhHoGWraanY5aea]6:G%`CN6OlLMREm)3H_qX]!4fXgAO,&_#J'#Z1bUGF6
%Z'<<k*=qY9%rCVdl*V)VJ'"<h@H++!r"kuHYoN[K8Jqdb?2XAfQ0dpRWmmc6L7)pDmWR^$Hhl0'M@_d4Q#j_Dk\AJVF*s('?A<b*
%2n#7@Gjj*,IjtX]jO-3"9gkdQ-2u1_M1=c>n@m(PnF,lpH\Lji]PZU6e8"9s]8K3;<pBJj>u+[ZXeo3(f53TW$l&tT<AjQk1/]'k
%lD+m>d6jPEQagIL"96M1-Yq@\2Z)*U9%%3(`;K,j/[=?0i'9!HVI>SlA?Y9a'+P==9fOO'qZ$)9JH#&6/Vi#JM6H'oQ=AS;6._L`
%i!2tb3kZ$!C6$FJ8%!F@TA%[d`NjXVUepWkJ/fqRlGu_+Z.$-m4#k`iU8/OSZ3:q+V@[:j#)?<HV%LYN4X:)/YUE.[NZL[.j1/@'
%2DqT;/Q/oSeq^8;RMi\k&g\7t.#ba/Or?Ut^5aK3`WK4#+hZD^Sfl:Y:#^`UCbD#0%?dp8Du#Kobef.&9J!'=*Cj+dFj*N0RVj:u
%83;\9o](X[VX!ikAdD;`QE"%"#^abaTd3?r&JZ[q)5\H!*niI[5ln;3Mc4Ae'h*=+'^Pp7SI^C"'MZt;W2K\F1OtMhoiptl0'H(2
%niJH7H9bnhkjng)Aqm.Z,_eV(MJ;=f/@=`qfLH,JXZ8)1!G!][(+M3^p`tJC;ui@g<^9ZP,dsfeU98MXC=!qk;p7L,BI$_1O*143
%6*D7q@sf+rg,*U`MVPF9>nnL4Z=n>RgQWfqc:AFuesHLY/b,MLK`S4+e1JEA%oF)M!NL+$dS2p`4sCCdW'X7h_/N!MTFck[W1MQ\
%9he40"f)UtTG!E1KfGnplakD4pje=O1gm;WEd>,F*BFEJbuPfU5ZLO4;$hfXF'+E2WtH+L"lnb/[Nu^pOCjqj;Ah18+V;^#A"lF7
%.LS@(%H>&[P=rRK(5mas*9t<B6uI]DVM:ie!]e%uC-$kH%olTO"O[^LK.I$XCn8a11JBu%.ZB_]blE?]3#&/XL8r$"__P3mZ5)F/
%-lM58Zpko?HGlJ^MTTmq_I1hHL-_+-#):8):c#3SH['JQ[&I^o<:1lZ5]<N18d'r0");*h"n"ZL*3/=Z`hB79V$LT\@ZiOo-Xhi!
%c*.c/dSr@Uf4G,#/7-nCeqW^-;-n<OK[h%jP8cbL[K$Fi*FY86!YJae!S#Ra_2&(^[kolBEr6Ea(b9uG"'!Z*ii8_lPGN8%7?D5P
%&u<D-VoifnY7ZM8g*6_U9Z9O3cg@q<!-\N%X[^bK['X7\/ZIEr8sh`C9,u)2dkblPFYt!``F,u_"-Dg#[KIcm9TW='A-)e-Bsq\C
%<H'WK@%D.Z(0^eI7V*$9S\QT\pk-9-6-ZEAA>8B>N0'gV/d[%ZbmG=M*CeA63]I*r*8:n\l/7qsAuIU.N.<N>Me*@edgX3Sp(4S:
%8q^a8!Ml-<d#=EJD*VU>/jZEh(?ci5PL2Y0R3R(g7C>.3JKTZ$<n22#\@Wm'PBp^5<_>W>&4a&8!OA\Gi3q[ZmK'9'q5dc"N7d&b
%`H8I`EV*R[?#F1T\mu2N$el.icN,AC9JecZG)2J+'H8hZDP7)aj<9?!-id+Or;lM_,nAIBl<$m<!!rq?!=$VSEb@do3YsqUArN]o
%L$L_%<Q:$%WC'X9+=QGmSP*])+QNomXu8+(jV=fN(CHg%Ce`Xs)V_VuLW#KHL>#Hucq?p9A!kcI!>>[=GqPD@JNs$t#As5cW0pgl
%9t`b##:JJ39eD`H$3hXh9L:i5]W#D'<%1A6WF3Yr^Opl`E=$;gTm$p9pT'-9QkM17!+b:OOE&WDC`Ls\3+GpTD&gE31>3lBR\&LB
%C"cZ3$&kh$-591lJH4+a:%R)ciXspQgeAhjBHV@#f;bcU22;9"Tc'Yi@6Q-UFUcib_T1El18APCYnY)+W)L<9C`F?o(iigqQ)S"&
%YZ]_&9F_2^!fBCL'ukeI4rTQ8`'FV1#Vj-!;S4,-!;U.cI^;-J!ff$J>.cb$ZOL7/L10Q]&eK@`MST:D0hp&u7iVLL'6q;1J?hNR
%n.IaR**X,a"IiCh2q3HHfUU.4d4LK.`J;Yf)^%>Q!M7&je]DDZQ-,bFe.,bckf:qn:57'(>QCC=Os&Zk9HXfJ<MH;kLlPdado(WT
%@'GNfL'jiM)3.<V@H]&9?Dq._fG[W5'_9nLTYh1E&C_Frj&j!0V)SUC+*KqO3.qgVf@('C0?nSUNM2'8TEKZc#Y<e`Kp>m(,0omd
%X(rh71b&KmU^g+C$\SXHfX?bMrCX*+_$gK^%0OHlHk[E)0nuZ%W^0#<JTa@;2=?F^aJpYJ('5qR,UE`o#$n8AWW?"Rj/..>/V1]T
%R:s6Y=d.#\G\L!GnRb>Z:lUim649c]3d:H-MLc[U]EZMD&/9a97eKs?KZbKsTg;j=0?DmE/_#J@3C,`aJZaW?Bpd@(^"+4[7!^C\
%:X%D'ej]Tj@#\Z9PnFW8:r`T/3'1(k"@BO7bUX'B1<3PA**)1h.)MdQ#4[!HhN%$3%YWch+$oo5(PYk$17\PF4_Ep!%)4'-%0f_o
%.C,_i?j46A;XBd3eJS<]@/qrCSjQj&3#PFC6PP=f'EsY1LaeW#dSY`-DD"=[Q(ed/)3ah)>Q=sI.1RNkJ]>LNMisB6%#hF194AR!
%]/27*Zh`g!p`d-HM:#6EbS+Pb*\*Zi>>]4?&Sa3(@8@R^'gq@jol5oDj/,grpVHs+VP;lLkt#<_%"i%/QkrU%==F@T]C)USDl(=U
%5ehDXUke!B2SZ-'*)-B?oZ;XN"qCX]!B.b^+3"POA=s7O^p^1k61J'M<."fpU]%Z+,#C'h4oq<8&6gX>#M1Y'TkOY4#KC1/XURtl
%EM,Mt=IpSDVt(B*C*#30lg=NW^N\0fV)WaURGpNMUgf-9`"`c@n1Rc,mq9d](Ea.\8XF9ZoO40q:EG,]ZcU"0^etGO6_s,=a>>:d
%$Ohpmp:62D4N>JBJDie4Z,opB0[t7G/BL-_c+m'J;N/81*)%j[mq;L#7VUep.gDCVnEtFpT;5Wqo7X9I%kWL/&?r)opQ;6iih8XI
%$&7c4UJ=>#PA5W8?m^Qj_0cU$qED8#L+5<S.>;PnLB]V0D:fgA_gCGsbTDS=V^<9KSuKQ5+p?.I6^XU*49mL)R'pLDW.o"(#B=b"
%d33FE\CNl"Al9GE?1?<+C+RWuU#G_W_g"I@PSU(L0HtUcQ2\XNrTYRY6k!H-0P%OB>lNl7W<E;K7\Uj[n3A;T:Bhpi"eaV)fqqml
%BOd21aL4g)64o[q<V\#Ekq=j2ZFCR[@FHE\ar-rF`5ICiM+!IYZ&H%U8OZkBJPM%<\']!"<NrH[jh\f6c5/i%eYm-n$.4$)-8b2m
%SL>Y)KHVa9>/7[FQ1Ms+S-WdU6P=uL`cAou:GW%'De'0J.2*GmBU+(#+ch,rZk;=l9JP!Ce%*UD;_(-jatH?J"Q(]A10V^f+Sqk%
%AYV3&,_42pWL/[9`N[gl49/ddL0'D"R*][!*7g.,$38KUUsoDO&uI=+X!:"=/4kY.ag*WIa/MsYd&RF\%VG#.Lc<FD3Pe,$^o.Hf
%A6pPfY.PX@<)-+h_%#O7ODA@?=E#?UW$t)]"!MJHL%eo[0S`$GlPrVaW!fS5!cOE`\!^:0WB&8]T&0RkeML,!*"/)G8`N/0D(DP?
%4]k:1Tb=dnbV'n?$d/Htmg1dA\3MWE@B*em8a8kI$[NeWNJ%1,.NH0_^Hp_H`H+Bn9G,g>JL(Wdi8-_j#4bF-_;rI_O:^ng<V0X0
%3]pN#%)uA96Y+-OK!M/N\BP1>kb2_K_EPkCFG<8"&i1=^PRW-iY0Ng:mGR[n:&5miFc5E=!uNZE,Ec,fUSi*MLYnEm]gB&cYCHq@
%"\)h9"MIl,!!jJM@(\:E,sca1W6,:%cTsM**gno"'O.r^bC]fqPd4&J#+/sn!/Y/,AuAX+8lUFDONAaU5_TEsn4F9$qQH?t!oR&l
%!$n:eR+ELr)R%=]\oM9sK9PP,;lAD7MN^?SUfrdi33mq2[L"aN;Ca57IdqJ1-stn1W#0o7rr\HcA:m/^FiTYqV%=2^T]dBZQ]?\%
%KdY1@?R5fU[SFFiA3.O+U1O7!=!V2#B;p,,n4ur64&^+$0UB.hLSAb[fpF)%8eMOk`8M>.8LbYaPKNkb+qtEu9f#1j#7D,PVH"$=
%6:Ac.K!L7*mk#(pA:Q*O"4.9J#s*eA$pA:D9dD'a^e9e4W'k`J)FHc%0KnOL"E]4I5tufT*i),$:N\K]!nt.\XiNAR+C9[5;"Q9:
%b4#3=Kp!pO\mrXE-D+=P$uJ?5i\9r^!U!U<Le7mHeD#OnP/3@IJS%U6\C@%!<2_g]4:sE+i1+ad*^ja>#4cX8<I$_L,&e<^Efbmh
%"Ic@[bbBim`MUd'BIO@$(p+*X:d[?%W8Y4$!t?4OAh%PK**be[XXH1B<:5!-6Tk"%P,%U'1Gk$#FtZLARi],M$"tar`U..ZLG.0h
%%h3:KUZ<hN%o7iu!=b0D^6.NR!PJhLJTCQNU9h+=:FmXP;#K8a98!?P_7DH[\F3)m0^LRP5p/H:"P"2B-.`='XcC"(Uc&CT_WN6W
%iIhb"i/=UjWXD(4])blQ0<!*i+A/T.]&bR_Hterh)]V;o,q+bPj+2/:EYoF28;9/DDOcl)_u5$RQk9C!iLSqID[=`);1W)F$jt^R
%TtGk@D*AP!eBWXiGAuXX?%1R7XB7TNJH3N,BMHDIQ9mhuXY@I`=XkI#%#Y(./V3F6B&Q(0i-&9DL(GL/;!PAo3Y(j2aY;248mA-2
%9;fXCZ,ic1b`[K&)5q$fa#@6-`FFHsnNTPND4Iu'0I7bo9SidV+O=^l`FFHbnNWbS0dLq\)DLQ<CQa5;6V0Jg_<ofIaGf8[V@9a*
%L=-DDoRM/j6DK.,.bm;5/1B^>kQ*/$5+OTpY](tX&ZR:18.>bgY?u`YIc$n79"I(I$qq1:gZLq<d&q+*85HV`dD6j2;2F*I)/(Oj
%<j+!?C<W!C(B@4D@]1G$#f(,S9Mgo]nJd^D]O*s)6/TQohM-3^^`7&6@ud>3JrU&PLBiY<WP_Gs%dl/.nNT^_R?ih*)RSW9&K0\F
%2H5DmXsm/f/0f"0>iGcW+X#o5Cm>,$ij$:lpdAt<$`%J6#\8`(4GeXWIY\UY.!OAq*=)JJFF^fo'0n%=jO83GLb=_6HGEDa8B4uJ
%@1oEs?pWa98I0r.e..\Y5p7Ehc5f=]pGa5X'i(QmDh/I*aFVJEI5\WPfR1lI!$VP\eVNg=TLj`CNgj!:#f`M^WLtS#7BARQ::00b
%.\(bI[3]=6emY@Pr0emehjtAMHf`cloK5I4UmQf'nAqf-H)%==Q5T`8+s]k@LO)<!^FsmUS#U)T.B+Y5C^ih-h#iIR@^EY,A`3)r
%9<QBl8F8u&^K7-VWTPH$DQ]9+k'3N3)_X;gbsJl`J8##7j3BLkpD2fRTOnJp5X7_-:iUOm15\i(_m%cC'>G\r[__^O'7^t[1h'9d
%!dX0@0aW`XZ66H9C-jq#nFTl1RKoQSKO0F]4GahN>7>eBA=%@>lDhYX?4hhkoIKPM1kVf9Ht5T4A*J5+NIgPO2g(K!0ds'<YP#]K
%!P58QrV&>b\t`cRAK$c(.8SGBHDtesh!`ho_*Y,d>\7nUd!/H(GFSLlktQ63GNKmKFFcUrpO>*Vo:R>UK*@4P0$6q3!^!1/RrBuJ
%HjWc;,e4JA10)BNV`&3V"[@O$cY+PZ$2eqe`AREs&V]OA"cn@idhd'9#d\A!O'[HUnO%>q5\p_W%@W"mPgQWBE`m8%>07B]:G8cE
%QNF+?R;dhF6;S,^%m'j2@rut`L=pgA*^`HEQYBC7"6g/1.D]:%4pVZOU(l"W+?m.XTHm`j^ItggEmpg&(.A"2K_V3T)1=o*+Bc,n
%l7YJD>;r+5$`JTd@,`IV!Ncu*n-%t_J.h_\W6a`_<"+V@Mt`)]O'<$P3R9>T=qRQ&ED2.r4bN_=8O9=R/VY%mJFD\P`DIJ/(W26Y
%Zrn<+&QDI_pjZG.#,->sOeul%;:=rS'2.+C&WAHu4gFB]JhfI+.e^QFi!ds==!*<tV8s#e&H%8*NGiLlm@ZD'MsHN;qZ)ZUVTBi*
%#tgOln:Odj;*8V_-TQ#j.+%_q8qQUA6i^buVEhM)POXZRF//(!n:-HsACKdB3e<2NguXrS-Xk@o9UHfgNYhD&&JfXgM+*kW?UDOP
%!1CD2*IWt`6Tft1RSFPUDl<g&=>B6#$R?8s)70DS6&%^=amkZ']\*<OFO*f:[WU!"@7AQ@,t3@Y9rPRs0!+E8B(-'5h^K5BKd*N"
%/JW/4;ea"&Aa'tu-Jbm`FQdifBZ(F?p5bkXZ;p`j`IBb=9CPC^Tn#GL3*_`9Gi2.Y+\$QO#dP2c"6#V&Ur(S>N:Cu\Z$7T[4r(4P
%go@l%!4N?o4WlS>`3+0a+>BKU1X:*L5]'o'J^6<)65#51T(D-?@iP=g(Sgr+RXj[J?OVP]L-PmheOeE%_GdGBfQUHV'f%fU:ZIGt
%4CoN?[G^<88SSup*=ie9?5F?o0g-rC@W*Y(:*;U(3QqdALtG$b\IaVY(ddHu-&:KB(K@'c]uVrGUJi[JdgdP@<&`<E-()@QP!ei]
%[RE_(fFF*$o1rR)-ShN.3a.CH*M37--$,g7^5<Ec-+uqi9X,f7,1POt'I9[q-u`CO!:^[??)0*#J`'@lomo@NaM>]j_nG[F!jmib
%W-huDm5?t(VmTf`C).=u/=^DoU11cj&W`pU@N+7^+X3W^6p6,]>[+#S?j=Lj`b1EJGm["%VdB^E?oelcVIPPKL)6@&"9L8S<7OFQ
%bOO(9*jj#$arCnK[-Dc=pBf<B@]WL5H%AdjZUF7&]Uk&?c<\#Z"@7.M#D2/?+9HiY2rU0N#Z('?]0U:$buWiR2iY-qZk+6dDfQt-
%oHpNV`BhC_L]jEP,m\%]68-`//eq\L#'%/]E2+JXL8ks$0cWRUOG[J8<.Ra[![2]pXkP(c-R*kQ&;Z9P-l9%(R$8M](`&l^!Do9G
%8a@^Yg'4Z.Tpidp&Lht9mtno!bgj`H.I]Z;$K'Ge=#SQCd%.CX&\[/XnN#+hV_l/uO.[D[#R!/FkVc_O']5'=oUpU2@5?-tRb$to
%bb<>C!d,J@QHc\SEk(R_:k4Z:@1L6\`?ZBXQtX#/rJ)q1]^9&3ZSQ-#R^6[9ip>T^lW''kK[.GBU:Ug)gS>Zi=27J*W7k)W8pY8Z
%Gcc87O?.@0ikDZSbRjN9(d9hQNK+R>gCb4@8AQH.,p;&Ob--*?9KYUOkV@tTL<FfM1_^]96,R!f"7jWd5YQN!ED7=V3S]Na:lf"s
%M2nbDqV>0ADA9ZDcj/Z%d1su[@5Bs/\5O(V(HjKgU0;qefjoDRT=o`mg]8;.S;X7C.Z^cRW;M&/#/jqD;flpYNHV5s5\?bY_?C)V
%r$R<8AVeSU?^0pXLptM]$mC]uk]tQ-+\X2<71L'hpL<\4@tJS@cnLGeOU.ig@60\ZV#/D)KjK'igo(aGqA'&o&o\9a0>%Y5*9)],
%Lj4o=.]B$.2+R@CiV2+sJN@N]%u('\@%9!qTTop-_YC*]$8:QE.C'J!@XM`jC/7+3g_@P%Lk[T[F"B\]&GV0_3N5^Z&p2A'q@r^)
%q,Bhojt/=`ZMR;H,7MacEuOV3>]snQC'3p]<[\&>-Xr`AQq*&Zg\+YrFX`G-1qLqngrZ<1,;$e7'pcI:7.(=_$3;H@*>7\Bn;j0p
%0bR[]e/CA[r)u)d^'nBdV\!-G<?,,M),c)KWHEZe;aCeA:''/_i;kF`;#n()Qa(L.K,Q6&F[n'?Vk<b#G7Vs:)ZUQs$rLh\MEWEo
%oi!1`5Vn'iqL,:>U+)3Q$6%chI-qLIKJk18)/Pl&+t,cW3aIXO@3YWb]>tu)mKnE(j7!fn$OmFi1%6)k7O_6JGL_=B6!Ph(O9.lW
%a;O06C"e<#ArA1d4ie-t5al/9C'/g$;*hBi#VkP9X42J!C1o#D,-`VW)%n0K7&&Zea`#'&ib:c"'NhX8R9U6o7aX!i>qQ.):P_H_
%SdCThL`Hs>QE'r`!M.N1=lQM*6MR+,W4+0g72uZa->R_Y(MXH_q8IhLKhNc!r'iuX/J\4#YAYZn[^\X.ZP+\^TVr.dRSQ>h'gdL+
%B(JsC'Fdl)gbksd_o*r'-rk@H-1M,%o`VP4WG:rj_8EU^1ktB7Sd"d1J8X9<gU&YuLQ%J0#!d46!X^JW`#V%,6N\WNr_SrN*`0,Y
%]aFj4.#,mY)g:(nW:r5ZW=bC2<F9`<DHIXnWQUta'L1'$B4Lk8*Lba1q&`TMQ$@-YX)qg(UNS_:6S.8--WkI?$=M):NQgZ)R>MZk
%@IY<\`P.5'jCPF@)9&l>KbWGeUTLN:'ab*r*&i8J!`XeHgDp\.;$gh;(I6nPk@k%F'q1I*_FqmbS?O!S6Zs-HOMqdc_\>@bSLjgN
%N7+,N!OBrn(5/\C`8PoSP(o*LRV(krbkP43'6?.kQ-dKt%*oBMGijp&[?UM7J0dsE6+=iWON1]6Z^C4o.JuL<?f!NV$jf4OY5(>T
%!iS^MR7q1VD)ic^RV(Nl.[&jJ9t/%;LJ@5,%U7`0@7tssI/46R1qG/Y'ZpQhX`U0?kD^!l^bhcHP'A4%Je.eO`@.CX0\Yr_T]k":
%h$o3>F6#;M8)0<5LgUW!cZg?!#BEpOUJdX%+obH)@pi21h@C*F^DRr2h;\b-Vbq0C7'Hi(BLJ;G7jRmAf7JsuYAS&Ek<_Hd([<[C
%Pi;";*fs7[V9=C&?cAZl9]/HT&6!%I;hA[jP\@eQ"Z7@dL!Z3IGo%-()U0T7h;O;(TJ7icM0rRp2AKOp2^mh+lhD3$d*OJuA)\6Y
%Rc>-9JOS7B37tN)<u$l?]E93V)tAQ@9*-/&d)`[u#A?:O"QW7dB,7X%#A?$059lm#&=fUSDLgl*bn`Uc`8X.os,OTZ-QnTm!EE_8
%g,H[>/]9B2BXkbrn.j+)*=3AI,9ftsg>\I^7T<ug9:6+.9[*F<h9%"`'6%%sq(h^`MF\[I9GR(!GAqL19][u4\8*91W07mP)_"M9
%$U*^*H3@C[d4ip$*UZh)#.`5I"PkKL\%VpBo@rN7.YAMX0Gf:9"8SD*U7;(np;A4rpmk=hd<*D;Cl("+"=.gNI5H')Qn:\"[Rp\d
%HinVD-5dsK+pM%"W:N+)ALnuJIc!;>QRUF8bpJY-J-cIMafP%V1.QbccZjir`KJ7GcXi!gc%7*l)++)Uq]fre15KrlShqQXnJkpN
%)Ch\AHSF]q.$YUU1lYj)V5cp,hH?_SJS,q-]:nFcjgQ-=!V&eVTL+Qs8N9VC6NZXDJ[S[_6#Qaan-S^Pi19-s0JI-'^m>*'$(E^m
%9ue6G*erm#3CL4sh5M-^JJqC*:D-88V0=WHWcJm/?nB_K?EBsolFC;qi9EAt\7tC6qCd`9+H1i2`gp5&L]0?lJEOO);/aPGj@?,]
%jT/Q75<@gEUdoD+XK[cPE+<M-Bbh!_2b*"cgb&!'P#1U1,nLXPNK;Bj:]WU/EQILPn[]!1@O`(%:1U$8no4K79GY"3^j#noAP^Fo
%dY,#FF/a"p>ME1JC"p/%XS.Q$L8\#i%fZ[9,U>#'(^ZjLlJ2=ac43X2G9`ntG\RU/UZ^<^$DTaH]-Rnod?Y##ZKgCoW^.P!'DH2E
%WBLc8Ce"]R_?9%[.5+!n7pTH6#`ktS8\*15UDYbqNYMa8MAB@e0^oeqVM3D3Z,4>(NW:DPi$TWV>AVRU'9E4!9jLLZ)P19$'9EKq
%gF2t&U_-<[@Z030V!'8jK>02$o0LYdC4&s`Pc")YJY>LCgm9Xr\b4AF;d;Ut<:auGQ1Lo`LKq7K1b7G!08<?"@\XQ5q$h&(fQegi
%JER+S3R>RknSH.^^#dJ)SA\^UXrV-OkY,rYc_1dq^V%^d.eoGMD1'bO]MO]^IS`:['Ri_Y5ZPBOPO;DjQfK,6"B#!$6kq7&6Z%R=
%9.CcU>6NBa%u:\apEoG""F*%n[?EY(:aYn.iLqBkppf;p%:5&b07NIa21-:0*b;WF:!93&Nrdb*`=`t48d#ZE7Vk(dnDZodKn8H!
%F*-=05q1QI6IDEEA6]6THtsUk-G`'j@?;cV#*aZ52Bg^o\Mcepd?0k4TEolJZkOiWL4Y9$#6s9^D8&/!DE7bh?'KnlPb9q,i#s`0
%mREEXZ"Zs-Ci1HM\$I5(B!@b5H'AOq7Y5+2/1cjmYWQr6.15^$Gt@"Ok/J5Y&1>&<Jm;lUaFUAL-^4$W3E3J$V`m?pp)jq61.;c1
%UlCFB48b*I%tk#h:kN[)p(?iW9f`Rl5l=s172:-?=@T)LQAu^ad5,+&ZHRmP<`AW%U5]\9R1^5;;Dgrg=-TOU9a%<&"$rBtT;H,*
%f9IHmWZm,i2N+;u678r*'Hk*k8$tATbr1i*X@*WU#p"Pp/FLTQK300ok)051EL,T-D$c9^9joB45X31p)Q"E=Zuk,gqF;Yt4*r8?
%&1Y-!$\G?9H32&q8rU"0ijKSt;B,n6&`ePBngf)M=D8&e0W`c#d5,3L5Z/<-NlqE`#%'<*EnpaGQ([?q16o3YU[<PQ,7\=q$,ed6
%-SP\u*4n(=#^!X:=ft]tDUf(t`f8BaAZq"K&K$7,"LW4I$g50ck0dn0r$WpZ`3Y,OLuG;2_O&X6E?31.&P/g0F9[Ku]I6Q!$@[\#
%o-R:JbQ'%:#$u_:nJ<4B7e-G!_hn)IiU(^a![Wm97V^Q^d5j+%Sc]ShGLM0nG,U1)(l:ejkjT@R(_/C5&4MgbN.r:F$=e0iXC`KE
%<UmD6G_X5ajHqA<UDP0nU_9_Bi\aW8Yh[BMQ;OD2aodPq;@a[%S"k$g:<;Fj0hu?@Kj3+pr;$%'`AEa%\$r[IKq/^ICsXupr(U9M
%2k&"!'GDi\cnHnB;ZfDhiq>4Zj?Qld+HT3n^[OKL^:P!^dG)t^;:^M#D@SrB^E3^<R)Y\mfIYlX6P'U2F5d*)W0k`)br_]j-YN\5
%2OK$C]n6T2%!!DnA^#OU6!bAF:niZDZY=0"'G%P>eonS,FQ.q$#/?1d\:fd,)u01KSJmYW(^DNQfbY@sTH6JqAIKfVI\fE6hqht3
%W.[#uNU!_J#e:lePZVpo,^4fi7`@>:m^`+<EI/X2@Kr]TK7USTB]%gP(\GX'<E#[+p)dQ5TEqhtHHXV:`H7LPaQ--iaG@3F?q*C8
%@BAFnMA>Cc"IAu>>lrt?$U/,fgBA`Uj_$upP!#>aN3nI`&OFX<UQ5+W3'M,ukjCf<JERao;-#g#N6c(pK7sRD\*drG^K(K6N#@K]
%'&j0T>mhe[C_<<riT\`nM[r7<8P:g&kQ`1A^2tSCWr+I8TS!M*=HjGMo",GqP3I?>Ndnh]"S&lZR=bcfF?43_),2Cl71BR>OL3fo
%1?,Mh24(U*6C-VR`N<s<;&)b<F8lQM:t>B@=2j*9iK7b`W[J/X-uM[Ckkl%S0UW0?A'73?ke995C5/tD["+&eRV?M1L+%G[;ODA4
%"QrNYamt)<-8VXei$"L3XTXrCcIGr^;[>0]GR6;Qo%R>14![Nk%i"OOHphnLd0IYC3ftU_k_Q3k(g&9p,Xsdn(5>n#iC84*nYhQ3
%K1%>X'k*`T(S:U[FGY8U87Jk5'na?d10i-7V@g^k!b&_[*a7\k$&`]noOIqfRVJjRTHJp]IKop#MF,VtmT7jq56Q7/Y/B.b-]k3@
%Ool^_j)Y't)#Qq[&<t4W?C_32Z6ib8Oa/SeASI5;R\hdG]&@nR;6f@r^B^$`UB&DW<.H14d7:S='6mrI``+1[XCd2!:#$C43_4TB
%8O)bnmknA3M7+n*Z^#)+?W";C@.Hd0HlA/4P=0Gj:`,*S'5fD;rb@2N0=.U\jbjl0cP7QkI'5=if//sm8qKK:ELuI4#:)-1Q&lhH
%D/';=,!2gr`+dS>8Qc<#j\ZY,+@h4EB]=)k["lnn`)J5.n'dAR4<b`Z_%[)O\!.k(Eai,rI/.3igfu>k5G=GpUD.cs>ki*HD.5Wj
%E!5Gl7Bd["[00ImI"3-D'g$WrN=rXdfe9!J?c2IbNTo[ZD7`[0E@FCsgL&;nW0`7u=\$.!K!pGi(1eI;[/;*`i,g?2_[Jj5GtfV@
%`\d8#@iZ\lquKA,"BndVLW\Uj:sFqAC-:etXQSNT8VWK;j\?E10CfX>F2WDmdW,g_)"4`BSAXh':U)/iQ?.$;CjD9M6)JD?3DiZ)
%Tsa^s0AoG^GA9-m>[#9[b0)e)BMKsEM]gIYkB7F_'%Bel(nk+]=c=l6Wp3,[M34(XgQ=9Sl^FTG:!=:j4Vo?,p2&4]^[59sP`/qk
%Fdu^WlhTf6e$8E72U]](MdM<o$5$&S>H#GeW/@eD@DX*O%dq9_AWTY_TC^kI+XkiWV]_KFfAJ>gg]W<R;"H/g1fD&u:hS/?3W/"l
%BF?kR_S]7HV%O'qQ][.d_,[n]2,\J<1<Aon!;1'BQNu`?T7Gp0eqaTe/e>5JDDk"/hVf9n%RCPX*X_P4#SPHWdI"EQj[0+.CG4K$
%KRi^IV-FsW\or<qY?:m`n5hkJ@<04]SaM,s.b2MtWRS9`o",_=I8Y[NI"I-`Gfq%KL?59m4h8+[Cu<Z9S`.t6L':Hrm8ssX&[\c-
%k+VpVMA/Ci1rm[bA9*XV!cbLbm*rkRgD2,UE=]`onQR%H$:[tS:sGe?S8h1/W@-3@R`.S$K'W"l#R:da82ACk"GiAra!HB9DTQJ[
%)EJNVj8dTI9seXPA;C>)iN`Z4$C2DmZm'&=-<-TGU0!S5?l`l$mZ*!^K]o'N9HZjGG7A@e>h-bgG8NH!LJU@I37Pgsjet4DmNiE]
%6c1uaq6P/a8@2%A01gs4@g)"S%uA-rJ<*5+Y'%;A%l'ZeC5*:>!K9$Z#>K+G0LQ5<,Vh6FA?:eD?O.K)/2=WE>mHFPd!e4u7FgP[
%kj[,F+'9GueEP]YBOS/U#</J@oDkP88#hs'BO2;^S0NLTT0S9$dgn#jBf$MS9qL<R/:p)VU/9<:6^?*&01ToKSdHY'H[R.?_=nBn
%eE;1a9pB$Jg7T'&NeCsUaO^0Ki$F-US.7k+\pOWV_Us+t.8D4D).LT@)gD86\u/1(cbeagF/_!6(eho2X#0YO*N<=jjdk7MQTJm>
%B3gcOU$(Ad8#CKTn:WkXeFTO;df&r]+2^>VQ(c&L4*QFi5[lONb[OQ.#i->u6t93`n-k5GMD5cfjNNXaJ/C^0UerW3W[D+C`<slW
%m+rU7'(M0)BYo)BR$etcs)G=[/!Mc_)_9qlQ)*/.O4R8SR<OSDG<d5UZ-r/;@=B7<-\@'@nd-^oDA\A%0)Q93/"j8PKg<\OBnZ:F
%NOsP;J\/C&#c5h#NV%esCcg1c>tL#9gpGMa8HbcA]j/'c!a=T*W,s^6Tl`MhJ1@FuMb<LVNCmj[*7\hj[%.U4\gKiK)&g9f?D_k$
%J%)h27j:pOB>;C8Z8`,3AJWa6FcuSCJFIY*hf1%ZpRm*_r)DN$W*edclaO<J-Utb;UBbs5#X"f=Lrtf1NL)V30Sb?@,36:3'B0e:
%mL0V!o*3*QPHhjHXZLbX]1,7Qe8#8ZTipA@&VSanbE/D=df<N[s.b6\JPW4u+C_l0;A:eWGH;(EA*Te8oZAZ>1!b8!:$$TUMm=,3
%q?!N.=GGueCu=U<^'qZ,*^Mh?C@J]!6rErb$pmP4YfCk?3e?LJ2EcT+."q+U66%"#DgfQS/HU#@*'Q*=5,/()[0QOO=O3Ue$kRE.
%\)N'%kiM3KPV@QB7]%#@^*a^Gi/?S`:E]olSfnP&Xb_1T6;e@,QWmXtN01"";OU'I;k1/'S\7+0/KYd.E/JbMXJ[M?,a@4&WD%t+
%[$-e@L-qOF^3Do?)R4D)(J=ZZ&Gf`.i#,[&Ol\<J&0B7)+GNt.H]a>T%DqGL)7TQXQr9.WU$[PbB#=0Gb#9TCNA.K2R!cWI,)7Jg
%O>JIN:rI5?&TRi_'nQj^3\c6a!`B?P[oa82%!/?q/o,]lN^34?-Qp9u&0Yd?nLg3I'mtG_[R7_!5r+K'TKa4#(JP)Yk'3:XH"_2?
%JsMo.)8PmZ@VW3Ed#*?_8J3>lMI;T0g_@I_TpWCsCDkt\8^C4HW\$6W@7)XPZ1nGXmD=cJq0eMoV$Q)6=KggpOnU%s<EtIc!<C^f
%9b%mFaRk^QD]=*q0L5jj@N0_`e$l\JaMPP;ba>]k/4b"0C^6'D-jsYW(N1bQ9)$M!R^MrQiKCui%R4c$.Z&p63pHu6O@me"*A]d%
%VAS4idK=ueKIuP1R==;D0rtrCO:QNSVn'nX21uh?aT;$$E*f:N4[?q^9+Ubm'fW7J$1Sa#5d<Oi5$L9f(fB]U0n09Xq_B4O`K6nn
%#.l;,i)5_I-#&0<,sS:AdFQR=[f5[J\h[/f`s.F9\=[EdT+6XP*jik@+Q@kWW8^fBGPT;'TQd0L/4KjMW*uZ/W7%B"hUZik>^bXp
%[_1l-:lPj[T8L"-AIF"L`XiroKSIg)q1omiH1f.;']d6'a<1jl=Ld*L,4>7>fguK\nc_RpXFj;>W*0H=hbs3Kj('9ggL<1<lJQ)q
%SnI^OWfHN/=8\#WUXL!7E'b:jge.>J<NM1gRfn"78)nMUL(gSIT4A@2LB>2C'<6qlbBQ<j;dT(3dA1Dt6AUN]=%N9W&AEc9-3Q!\
%k!"c#0NQ5rVpCZ;H+C=74Y[VR3I9s!9s]u20f!Ul7SWF-:>j5#lD7n/$[/VS:VN_Srh90'5$!QHRX0#0n((^0WKh9X;lL1o8*taC
%EPq7b%rVo?7N5;]-B-=SYmie-J8(te4fnmVd8Xeadic6thC`(r7Y2emV=5k(l,cVYL0`:(H\JsG%HTs^KKj&,&S_9</7ekO]T#/s
%Y#]cu%,E45G#3/<Z"\MG1DPmMY<=:>ARU_A`,P.sNXSgZIAR0l?>q=&FSo/%TK4*0"?oa:[HiB?"B<QKXnNDbJ(<>X/c\K18l2^D
%;KX#u1%]dl89(#AndKFBqu?#r>H_TuEZY!>JH&!N$m5pV/`&/SPC3!H?lK;4Y[BU#`pr\[J4pjMa9(M]&&5V/\FqsdV95@^C3?p,
%l/^H3PJLW\(^pTn19Jp"%G8cWfX\9LEg`uT;JZo771V'oWJ\OK/\2L[B?Y\O`fnhsGR'PeD:CS'R:_[YQY^N)2,uQZB<s^E+3O+O
%O3;MAV/ko[m72Zqs)::5@pgSND:a.<0p6lg;0iL=YmGDH$)7t)=Yh`J^=I=!'tff&a.t.P_Lh>?D!C8@E3<&d^tme#%Uh(kWS=Q.
%#bHhJIYLICX2KCiqJO7F7_!qc("dQ;=]E_Jn*QF0o+h>";2)HhOpW_IAVeZBj.#Q2V;mWL'OLa,nD(8IH%(3[*c8c4`8XpKhJS2'
%(XCp:`dQU"SBSraOeI>5Af?Q:lUXVH@LC2^1_7Y\'LVCM)nD;?F,5(1P`EZX<JX\u;EQZU+!s,'R+XF-+lBIjQ,)4G%HD`H02nnn
%nFD<i4&UQ?9RH9T/:-I?gFY9Y;Y/46UPNW#QJsA/1/J^>3h.qQ2-uH?QO`Qf@VEbq/TYqJBeCY.P%8/88g%Ta3jTWGf'%mgn="=@
%D<PBi7[:dFS.4M(]I"c)e1-KF2alG`qD2X8K7@L\1G@X'WVITMA]ZH6Q6rT1Yco-==a?r$,49n!.LLLC%Fh(Bf%m#N[C(r3[j`EZ
%'Sq3qaEkQQe.3@V`;+,L3QUf9UILk5[n#sFg@(_7%Sf2$EC9$;NlbE!bbA`V^>2]YfKkYW=Go+9*H[1q_D?[(LA7KDAb%7BQKd1k
%OfXA]QOe@m%,5h3p.>D2A&uK]9Y>bkLK"0'!KLFM@3iCnUs`I&<3GTuk(OoY6OT1K`Iq>s]TeDsVMOD*oO0,"%-@)<0YSY[/.(<<
%`'uJ77cf=qBtP81\K2\4Xp#,fHr=n,)@EKR-K&1RK@)fZZDM7ek+-!B\b3nl2a)kL:Z9cPrU9dKIqugqKup7m7,F%D")5A*.:j=&
%6>&#KA,Si9DX1P&nt+L+YiM?T#`1Qh\lCN6QR)RoMX3dBD/db(eE'0%boAJ^PS!u<>d?qB=&>]Q'$qFY]`94b!8d]Cc48m>6IULX
%jj)Cc&oL?nd,ReeW--$Z(]Ii\9>'I#-:Q4RWO4gL<top*aUs4hD[#n&$_[pcGk0O]e.#N#)C5a:0R>aL5B/_+W4iUk&]k^U,+(+i
%.mb$6>e<*r"P[R6%YfX@];^e"%Q=[!,1j$$GgepBK-?IXFE33X\lF,f$_Du&M%+5\,&tW\Z9c>ZE&hR1PA3cs#fgj#j#o`Xo>W+5
%?#ia_INft-*lpf61RBn"?W\G4cPK/C-qj.IRU!hNUkkO*>!'HMm=[18e^@VHd3AaeaF*)Z+Jo"^I,pue:`&Wb:&t-U&nN-kg$@O0
%^a?G)+lj:3RQV#iMlT'P7_oTuL2kk]&SM*MH/=l#)l'pB;1o'Tj[d2mY6l'@$cjj9)Uu`9I6)m,44YQ$TW`7@@[*F)EpZ:)Ag"fr
%077>tW<^JmR^M"5IO+"ip='r=B5iJadFOHe_im--s%m9E/bn^F'7uKL.'"V<7Tgs.8>'?W7W413J]slGH_RM\;Q0a""5Y\i"4j`+
%.Sc=0hm[P.W3KI?0.n5H_oU=E5J6!%EfBLAZm+"K&pGdjs$TBhnuES+/6Lg@`oNjsMMm$<_+ofQQ'@f/oZa1>DF4W1$481>%(V3K
%a=>^W8\res?.DSN7;."0BF$]XrX<N*ER<Q:)6u?Z(s%<X)<'!XC.k?iJKrbiATOLV-=0+uMh__"(jIaC`0])@nk4-F%UqB*@`?:E
%=mlrk+^ILs?,o?FUjpB6UA>puDS.:I<CENo9en<j.QSg[@SImZ7<BPm8b=[.'e(qs'nW:A&3*CpI`M`$R.kJ*9+mQ4mST*jh:K'K
%lBDl8nVBIA\[sSjn^.-SMPX)sKD"A/7u`t)Ch$Oc:`="WId`f_J'X6$1mKOe$9i\XZ1MBg?6n*p/L9Z3,=L:k/>3]m]tJZa'2^[N
%Dg5FU)M_)+"6-EfN+o:D4DRgGK3j>d=0#?8_m!9!`)#M"Fj@+gX`uJ`l'Ej<DgX"!jX0sSA1C^hQ'<JD0\MT@Yi\M8$ZBu1EtL=_
%/4`\6dk[jGWoq+dm`kQ+&8BLRq$+QNb3k">Lq%BM*OW`<MoLheQ$-V_-AN\OQ3G)V&=tagL>M]\0u:=r&472CIGXdd^b%:4CpYJ@
%h]V#@_6uY?4A[aD1bf:BLoOu2E?&Ro2BM*@J;)b[6aUeY_j[,hM*`D$=tRhe%"NF5<Uk_LVBD=Z4Us?;kl)buY2TWG&B3A^Xd-02
%NbcAI>Do,M*!7I-B-B!%HM3;!$:GZ2!GHo62m]b`=_HiM8mi5u1GuUG,&8UfBC96P&Ea?;?0@>e<[csf4L6_kVj'-9+s_ZU@aaKU
%3IVncS$lSXUJ?Z4-NqU3+Wi[qM+pYI4t<kdE8qWWLHU>(,#_C2/gbgY]S2S$:LhHKa%cVE^=*Pq1FY(EE?^YLL9d6F'G:bI-H#p_
%-9Gp0FrECEO>rmU;j>mZ"b"Q0>flbpnYYYGZe.9n"'l1KXDU*7F/SMm3<\S?6<g?r<O_lU&#jm\Rr>U#(J_762lt7+O0NYm2^#3H
%/$,WogAkiLO_qn=h$O_VLPj8>=N+8iD%Qh5/6Q:LNNV"GDZVf;IY`_./IHrt?)'f0"6m8W:iI@>A/b`XF31k%VMG8'8(F@Q$V9S!
%jR[r-LolOYaH:oW)H0a#.*<E_^*X8j1kd7A3GqIa!]80g7Am@5T`k<J9g7u6PZB$BQ*MDVCD)%ppa"N@A>W2mjV4MQQ5ic=dst<<
%U(Xt`$l\;1GY=da<O'99T^BrlDWE(bMB>qH<B;BH!<I!JP@q#qrjAdj4BO&7`F!rApFjZHOb6a[Oht"r\Fn*XVC6fWl&KCnplld%
%:nT=*QjH.JEu$/I&#^CBO6RK[3:O">%OCpUr_QJ);+Q(1&G`#9(F,C^hXV=RL#1H<bdEF\[YUFl#pGr1&.l4M"-Td?_Y6]26kMOd
%0i/nTT;[&hR-#QlIi\3n7a]M<pu,KEPF@,,6P5G0+<W<u8=X,S<.''1)l5B4X_l#L]"s5%'YDa*V0hA[aINV*c90Z1G9Uh&;Gn!d
%Q%3uKP`FY2-T*+m5I*4+,>3NRh+rcXACfW4nr.@idIb<6MTD"'4Jj%)Cp5.rH)=*;,VDpj80EtK`(m7?Q<`5M]o+8Ojmtk'BSoAL
%-Rlt9)Ot_3pa7I6f3k)Xjq*H;Wp`uMGG\K`Zd3FrGh.C-r,/`P50%YO$::/%m@JY1e]m)+EbL6E<'Ik75a5u#`Qsu>,kE?sMS`?M
%lf16I+^(Re\QRMo&fT("N56dSc8"J#*F;mG%u<6QHqeB)#IekrN/$$):[.7&am&1>D*rbq*NESQ>;K]5enI@g_,6ZfPLM7e\M)r=
%-(gX"JE2l&/WOD&MR0Yo)&ZTIDmID\!\^X`*Wd9dPG@-A/Faq]Dtuahl%KYW86&?/Pn.p1(4G2FO>tB.Ig,HK`.iZ879).(,(IKl
%Vqgj<ZumX$.S>"D<EE_n3+u,8<S;I/m-ktcY+#O.;m5\lE0(YZ0Jl>5MnP@"I$j"0i0rD^lZRoE?.Y=\R>aKO"T8s5s+ZOkR!U`g
%Tc6\&SS6.X_O)^_=<$qk16tpVIO[6";l8l>2`@\^b0,_cSO'c`\:Cj0G[g3I(B-ZPZ\q)2`)F166?^)ba*1WM<P'Y.*Y@b6,R<p1
%nUM1ir,ujX[A?s^X$Uic'CtKW)Zr56MoSr)ibKDZ9;$Rqk`0`2:fX#[)oP$6@LcoaT^V.sI_$4+\%[ZcU(:QnZ7[c./0J_M0/MqJ
%5sjSAE%r'2D_H'g\3rNuD+t#]:n$%=08tBbZ$8__*GDXsGA?4-=kf%1?AGO#=DM,64fPb0iY%*hND>VC39)BC_BkG13b/R3VRsc3
%FqKc5LrP,$<<DQanD4m?8?Vo@L+LY!;F3SE[DSjjNQj5jD9c)tSP^BQWP/c-BQPRP*:?2F,sa@t@KFhE!PQ[L!l5"^Ngtk`Y)6Ml
%Nn/j>9u'a_i8om&WtH*KARF523WK=TDiXQ4'RYQPSMNl3BB4;VS<>=&3YgBH`::f4hREW_U75-FRI3&]>+jGCS!gQgU"dX[/J_<_
%KG_MH>t%]@ZWJ,7;<?'gJEkuZ8OYt,@YHINqC.jM-:VMMo%>`q/S02>:M<cZ(N*8gYm!!k94<0J/t!$/%4kPbRA"TiEg,kY.?0>8
%fOD\a2SV08<%tA9%EX&Vcr*4FLjHj#JkK4N.Oe^KD`A>kE9O$cM,1*#;W*.)$pgRX7)FHX->*@`%nDO!X#((1T-1/h8H!_r(MMn5
%2fOf).>P*EBFME=VF(ZTcDA?8^&c7\.5Bl!'XGJ^.Q1jX/]j#]95of`Ko][/K:kAj??pCD';(Z+QCKGoX,=qmCkP9<%,8\\BeSb:
%_Z<+G3dKH[)\'hACaX9<KuA+,^-doN?g(nHOF7C>NI4]FdhPU(de_<b9G<Q10o9)o]R0-;ji5lG]Hm_,ou`-*?BV%FpEI<hVqSM`
%4!clt#256).>+riF`A9F]lJkQBN9pQ&XijI;$,k?M$BJ<*';dFq#Ndhkk$L&UkrR?YU[dEWle,@+)q:`,\k\h1U3n?ar1['jrtn)
%F5u0;WL'D9"A1>(C4KfUAW=rQ\98N":dS>`&kG8b1fYOn!05FEFl75@c/Vp.i=4P$VZ3"EBA#B#2^LY^n/SGOM7=`BnLl7nq%_cH
%5k3LAAU[@8Vmp_25^a"DiTVM8N'ckla1ii1[rS:p/IJt4MH;KA#@nB)s5P?JrRcG2#92PkS3OalOhma@lgJc>'$Z`;m#7XHO3u29
%A1fIhUW\Bs#MtZK"#O&,J5/0!T"fId1t0L<b0]0LZ6[[(+sQ5;_Us*jS7eulpFNl[DF#Y)d-a]8\O#u]W;3mi5rX_)VgEO7s8/"h
%aS!A,d[e>Qd14t5mSR[`(rI]j/V[0tTj0iAhl/1hL=gg5qLNL$h1CY`p\S1EYBapA*i(T@]hH:o)S84!^#%HpgnRVZ.EX`$N&n6$
%.de@"S9:d")CHEsW(l[J4`b`,IlR`"omoK$7bJ7+K)>;Wn=cA!eb8CEIT.)u;>V_GXn<i+pnC_l;NP?@"(qft5btfaqP4H"ThG-P
%eiZbgl%,d'EJ#9@>-bSK+PFoLrSIA,Ga"iBRjV=SLEG4N-GCf`OQr4\KsGlJ+@Os's,]Me`T%$J@!DLjOCo'<*D_s722:m?Y.i]9
%l7qp*g)^"P.$((6\[lG.Q*o3]ph6gJ,u3;>`'3CqDI+\;IY3_ZKYUeq)?2_sYVuj/1LDS$BST5gE(YRO,_EA+Je&C/'p<-&gWse(
%p[`mS9+s)kcPcYG"<-Uo^luR12#dE&l*IYil*"Fb1);l!W&+KpCP'8Rr*WDh!sD$Aq9o-[)F/Ql*)a9^NeFVE8.!'r\X!eW(SCl3
%6UBp[Lj[3>IXeeL'"ee//K*LD1XO4KQAkJ%#j&T!3-\7eQ'?"X#V,*Y_^J!IGQU(pTEp!64>d>[jTg(9QJe+Nh%M#hN5!h^I"o5X
%U\^8b3JT8\d:H#imFMs@nGiF$YW0T0)^[Y[^DrF]i+=p%Xeb<GaB<2:=_[14.X5]&;0__!Q6Pd(me19C:qJ/DI#eIM@4$4gr,mt-
%Ee&r?#Y+gQk=*53n<Q(T_BC9/"@R&tXF=J&7tVoE&G#68cb<;>g+=3%4#G=JP*S#jf+EI3%U.nM;hl>@kU*f\rW%_hXQu5'8QR@k
%YKdXP@*FW^71M?1TBQLIVJOD'Ns6M2-;m>2Fc<eMY^2>>!^>[1_*,VRW8T>$S+;aD!Y2l9o'6sL_E!X1+GcA:rKU*][:G*^:r,km
%['WE>Nc<0mlnJ3/UIVT94s^\=M?;en:`R-IXUdnecX;2#O:r,\K@8'\m%a*(71H)jn4>sHKWb!27#N[:'`"G;r`l3@.4%<Lr_RMu
%**>1o_W(V.692Q`efo#6MksF8,)G=F!(`\m";km=F^QoE#TPr5oX]^+W<`\-_>gFpGkR4!2XW?/W%i-TGZ!0!oQO8ieUJ<G)J;\W
%;oL#HTg&s-GtN`:(=0B5[65Qt'#e;qY$`MZf]\Gb2CDc,12PZa!7E8;/4Zu'-MAL^#[D-PQ7-2je$k?mm?h;hopZa`5`n0o%[InY
%cluCi&`9YIKBoa+Ipljg>qJt9]nX#7RZ:p0L_<`^GgIW<ML)MJ--Sm;>!VHm7$p+^ge#<GS:CW)=A(WV24[JPMung67@N/5#k$aZ
%i<N,&0%3dK3,rRurS:^P%*"AL$TU:>6T!Lo,6%[S7fK40XDQ3'H)"`Z@U0bD1dngXKN*8+LQ*JdSc:AY6m)ko=/%&uL`_kY=Q!Ai
%4=LCWhMK$9gC=]fSS=`rC^3;Y>5CSg6^&S!.4P>^H41d`XZp@5K(@TN&+#?"7,qnDr_1A"jOjpsA.cHC1)EJO*%<%11E=JlVOmPu
%'4@lR_YG&M&65o=KN/W7P.9U;5-%*nN_l;e8uU2bJpD&*9PEBfRJr&Q,=7:[3/9>UAZE#GW?.V$3Cq166?pmKg0?rmPQ]&9`I>l`
%Ls4&R?.^\T+dCF3).HdUjR]]3MuHO2&:PrtNV?l(0055WPrGu[)ffL/Ql^4oW+0:iF4c"K@G9/!,7@S*m!l+$EU/mQOtT%qp^8*$
%m^;h`U@;-2<g)f(--Ppo6:mb;I2Q%3E>op[U.3iR%ajqe7A/`u]]IP<+K6XD<T;e,d+t[@jZ[s^a[2W#Y\(!m?CsYt\'"XaBm[E2
%Dk-T\om[dR-WTM1HF/i[!,44olVh6/g(8r_e)QN<!CmB^RXWh4>&B)n]UO"9MY=Y)^T4sDCL\5rWIJqu60>+Kok1,HC2/hI1I[9S
%iSjcW''2$p-BkWuTluXdGk/!o/WGu_rr`?l1Ac[?WM./)/1\h0U.J%+]1pAncU8atrfARM9*6Ie"1Umg",D>;l<tskC'_(!qp0BM
%DktSi:B2Up7#Hk]<cnF6fHO4Jr/bB,*MX8q;;5"m_#(A[$i%5^K:c%)n(aOb[,E.Rhtdte@A\>0/KD_cLFfB!e).^+$8I:m8`FH7
%D'CacSaZ1'Se>SLF='RSdaCP%SVf@ALqs6Tgd4<&C<@p07U%M2#nKX3Qh<32XWBW%+G;[G,ZDr7,qTF*Mi]D]C`pQo?XeXt.aB3s
%ED<V\2Xj<@WDSa*D>2Fp"`ob[C'Gt%@[`9*V1aSV;#4WDIFo+1cnm6Ei)q^qOD/kbf=H,d$:hSM)1$AP-F8UUXTUiGk2,9X:h5>R
%Y(D$r61t^j!g?s\\ClI8_=\W.4`]JRBVpt72@!&YS]h)%gIQq1U_>*7AQ\aRDCK4\2;VX7h6\mnO>Tg0,U_oC62<-`Uae!cMQL(p
%2*@V?AtP1fk@c?+:o).:%09Y4!/m@qfan/R;mt7+n(:S(eIFlEL]PC_]F!uI<<aI5@=JcR"9_N@gkR#0fDt*4(u&jr:R3OuBS;bT
%-5F#;(n46`?Xi7[367H:bQ.I;-6>n>`@ArKo^e\P(*2:oQp];m15k!-!h>+X9Ykj>C.r)e'qo\_(#))d2cofZ!#l<0,K/4IBhUh]
%`U$/N!i>D%SjX]$&6YFFcstCj>eul;V]bOoX.7@K("^MHYrmk?#_gMicJ&[O$EGQX9E@#<ZUg4,7403qM&C("2k@tJ85QE>7EA<R
%@n:Vm@6-nomL[7!8e4W%Qm)gl<a8Tl*h!\.7=d:]g*VO/B`^`V)H*',9>enO799PKO=W@iFRrV].I_"!M$r&XQ!7G'4c1Ep@GK&,
%8UY&]5>bN+M&aPc$[e?R/:+[mkX:XY?kDkl3oh+Z>8YoE#,2kcK;.o/:`?4g"VC>cA7*E5IKC-^rDb;ZL0\CdAnoE8]J6!`=?t<k
%(O3+'hP4TJl.j]t@1Gtbc)XP<i/i.pI,rW).3Mt/Gu&X7j@.ds[<?EC)1llUKK2drN?(7,Co@Mfk9]OU+Gd0R[7oqn8ff<o8=]ZY
%?QR#</d!Su6o6`g#te/aKGRd!o]YDD-1$#3Vm'Gj$Sn4l<>Tf2rc:[.TZ!`t<-r?EHkW!"[ZBfg;abbD;<u1bUF05uPj3E+6@tcm
%\5!L$4ZV1%Yr4g0[\nWhA\*9p$u9kNm4!4`d=uo,=Ph8^"8PqJ]9&$$]MZQpbXi?)o#&T_U"Zo\9^;K=C0lWD#CsWtM9;ce$-*T_
%.[8\)Ig/tD/\\'^4o9@dgt+pD^U8G!P3gW.,M-N7EZ7!k[:J4U!"mU/3bA?h(>M.SfqA3YNeCXmrA"ud+.(roOIh<C!Vaoi^doRk
%,OKk,k=>`'>_Y3-536e^r"e'Ps+,4mKa"[X0bOYNOYl,p9DN,u4h-"@,=aNRaE7uGZ,^EpD5R+sndT9IrW0q#R^N>?\U7QJ$9g'b
%jm.1sIXV[ic[Y#/+H]9PQPgD)E<.q9fDk[Wdi\V*)*.+RN+@Fo@:8r&jJmF=^;KZ*58]/]K?IrBZ(;3-9V^@S;Y[h\_Xlj>Mnl.1
%jUKFL+("j.Z8Q^6/sJ,"SICT/hElo!H"Sa'8sWnXNQLpq];^c\O)M>%O1Io0W$PL9#2'5g3T%_f]mBmkJ:2*@!`G$BHFiV8493K=
%#[EZ#3-Kb]bj.ieGlGn.R;7g9N<fI+.@"Jj0/IuGna^8MA*`q:m/DJ4&nQ^<oh,BulmJ__RSCEp`l9AlG]OH%5'kLB*[#%@W#X,K
%!"u7b;FDSq]%%A5_k^psd=2@U8EH7/fqnkMHJ.;o#Sl9$b3\V>*=D?iKJHj41J.S^[ced*+;.5d:,.8$Z)88]>rlUHU4*S_;sM/T
%9O"YK3%S\?oZY`B1FcaAOF5AcI=t`Qb8u-=QMi=<DEg0ERmSQB9MViX9s]8qf?>?JWIYm%@^9s;]n.-b]8]:kW56F2NFYKO#S/eQ
%a2$2A'LB;!k<2QShBFomFsi(aV?W;$!T#rdJj#.QSR<\cg6uOO`R1T9KX`s^FSLDL:/j`rq_5`HZhj'cJ_En`p>pIH:C_4+DT;0&
%fTQJff'YNmbi\5-Ho,\ao(SklD3SAGdmQg`eG5ds?BRdh5VhtOTQ/mpehfjb)n6(-msfJmp?'H",]U0Z%Qm>\4qZODZ_jSKpnE\r
%$LCbT8Mq4(.BoND7(#*k4:oGYa\C+d'>IQ<D++e'npN9F+2\%G2\Q!D]u8WA3QUmX:o2FEV?;&aW=RO$s)$b>C;L3J;7oa7O<9nN
%!A)4&H0F=BU6RN0qrZf=L\q+EMBEhbOOsg4@;"c2CX,5;)]McY?#r&ckOICtn@GfbB;^W?DrqDlVBFo.,P2(qgX#?8[&/+J5?E(e
%Q&hmWjSb03rQJfsRbES`Ee?uQ'1j.Ydn&r("3ISU6h09*,t/jG(JSJ"HpF86)o[Ckk%JdDF\e2dn#&kELKi9(0aF5-:fN;+NU7lO
%NV2V#JQ`+">m*M[5MaB^f8hd_H%[Hm_P'm0]67u25nm(S.!/(9ICSHF>MFu"Fb<;WP;4/qFenb`;()rE\d4%bI_I2Kr-60O@ABCB
%7=$[UoLWs;RKtr#_`i0@Y0AujjFj6ohem9Aib>dg:Z:0k^)E`D'&H$+\Y?J.4ICJpo/aOWPZmNDO^j!O`=Gi2m28>2'7t20:/L:f
%XCCtY45J5=lE/--b:)g!\AKg(+`%`ILAflW*rgDYRF;:'Xshnu+K3F0P%1$a%8kl%UEn>GA;hb?%XBg%2h@YW8r:@j$3iraA?]-i
%&D/%ji;p'tL184<c6T^L("/_/=>(b^hV-Xd_6pi#+hAU@Q&]F-UJ+5,I?[2j:ma;rSo$,+",;)T'ICWGLs&WK^M(93<m&PY&R%1b
%Z(T9Bb*Q8-E-"8<n/SD]RZKe)P>+85djb#:F3dM<lh=8[%e&\OI=kE6,A4#-`>I'CW,RAA;(j?c9^>bF.P1/o+sRC;<VrI@nH;_3
%'gP`S5UJH#6jO>rTc0<i?r1Shbphu@7;5S/`C1R>[F%jc>nmiC$?(D.X95:s\Eh6/<!hQj.3O'+cm\]NK9So]ZGQk%^dE%QITL%-
%JaGga.b.5LL*utI'"sYo6_b%+_?_EoVE_12B0^.V6689c!.l&="/+\Erm3pk/j#OH20egt&1jP?2;3`PIKYn#MMKp8:sj6.b!-f@
%?XbQ@%Ug^n`QAln,7K:^0./OW)Frcb/Fg`6oM0^%-nJ0rWIgsE8++:2OZUtr;1aljq'i-\(+JQK7[Jj!0mJ53oZGR5FGWs#W_+qm
%a$o6$Z'GR(<FlLB@$".O65gTXf&)@4,0Dn8]%HVs!]I8eHUr;A*1-+d2aipE/c*ZGCoD?7_V@#$o2bI%X"Z##+u/(KNXTJ>CP#84
%%;*bW8ShHccO([^[BtWm$Y5Nc`jF]+0kr0!5;>=j<\X?k#L-=\%?K_T@%C2%F@+[VlaBN`5Z<T&Qb#MpL]_F?pL/'dkmF3;8DNYL
%D,*_uW%O""X-h\,c]>Aq73uLT$#YjG1?M1D95WAkR6FJJ)tm$&RmdmfV<APDRP#\RYlc22VuG8o2YPuP1-eWU#`@=h]rr'3M0r?-
%:"C@3nRCkigV=7Lme;9,1:1m%8t6g4[Nc#G;H+O7PfO3KQlJO8F!)*0Z7::P'LhWAHUC%m,Hr:C75pNcpid<g$5?sVaSM49)c.;u
%*8%R=40:Q;1-D4,p!6G_aHY-q)cA$Dj26YXL6Z21BJPH4N:QR:"OK:f,UYpQ7cW4[7m38)EQrIJ&4,dJIP9pFC'>.bSl".pIr+=/
%m8>KoD9\5KHt]l1*EOXsQ/niD3Pbi_$=K/)4glZ+6_48&3U>=@;hto%Zj),jQ<VR[m3tZR0)UmtS=9&&>2=(QNDeGSJn,*U;3`PF
%:Ng+[d>E*TUEEB"-X0;l3=ZO0oTMGJgq[L6K44jaT#g^;"@\je@QfOCoq@ep;XHh@ksc5C+2!LU8"Xb(Kcu[W,!5a?T0c5S;,gf]
%8K7TQ`iD)E's+/N;8-hR0O&"L/h"1(5\?53@N1hBbC\H:]LjO>;go?VBe.h20IIf"81>3sXB`DtC0QpM#h7pORlXM4LB:J4il@^^
%ZWKmOft/V=V!7k7LX8?k^A+c["Oe)!Wu16S*k4LM9l3]j`.J'eOBWZK%O95@S"+>]8<jQqD*SWT3S;XQV/BK^AGKXSC^K2cjh&Ji
%[W'fS9DU35Rrq-sB==j\TEb@*WT3#i%RI92d0JE?(ius7"=FI%P`cL&;,J.F7'%5tn5];k3_u^R_jYYX1aai:DY9o;Lerm0'?5qr
%3Jr6PA?;SbPj;m#iX)QaLrC:^mKp`ndSFVCnl@Y/i;/tse>5$.`PUWX2E3_Q,=+[u7IH,YU=66i]MlgBb,ff=ki92i0kEZ(OBV*M
%A^!>3I&W8VfBm[XW4<uTd\/rE8gen9R]`os$\b<8R/s)N_i!)&PMZf\1fU>Gj/]^R3ETOGN>1Cg5$l:pNMF:8%h20GEC")DqH>?m
%A@@Z1WpF5a&g65(d@Ab,RF3):Ua@LhbYij4AQ;g&g4C:aM^a%r50E&h+[+1!V)+@2liWK+T=lPNH>=3tRFVI+.N*uh*hj],)i<r5
%EG?ln_U3'WW@qZ"BjK"=b'1hu$_7dtf)[=IX&2/J5^A\@YaPg*?clhI.GDEp5L_sV-fG2.5u>Vi5Uc-ZIOQCnWd;KcL;50$1Yq?l
%G_P&:iN%#Q/1@Lt<;[@1WV%]5cTW?HpdCPaV)h)/k0!D[EVooiII_TH:6+]WRH^;0]%AV3*/=!=b"A*i*K2:n7mRWLX_7=.g[WKc
%SW,u[g<-m7;'ArHam:>N0N@p'*P59p$Ylof/uDZ+GEfUqpRLWAWcJV%^Rq3+n2+VL2*"ls11HM;ZQf^Q]4NH/s3qa5>oNKKhdtcg
%XtBL\n\Ig6R#!FohKIHkU"b>Wl;8cO#H<fARGpD8/5DPo/sc1^]oLu1#]if[2>-PbWA?OXOWL5RLH\HILD%uuY(_4E\+'?+8mSo;
%#KJmBbDqTG:^r+A)Ros#>_$YRn7]OI`d54T7F94[.cQU:<5BK_"o%J8jMYR9$_<X#.!c@M2g,_&POJUa>POo0)*<V@,@&U9("G(1
%B++I4[dXBR'DQDfh&PR)Pr&LpK7R#F*rZ'7HZV496`1,'>=Z;#NM)Wc80[lQ,i#0,Kc`<4a">[cgg0juK>^N5R@@E"s8E7Waq#p[
%8l9;gGHGX=!^_gT_)@\B+YV!+<"?H3o!37jBaI+$M9L-rs"8:X+Q(n-\CWYo!nnKO^kWhL.!f8LT-L7es.pkdkmc%bN3oN3XD>Fm
%(+3XG(I[8=;.V0<bGRKpMWjY1KQDlmq:(ej^T:E+i;Bh<8`J3cK9M1_TAh[>Y+H3H+`mJ/JMR3PPSl?13[TfVc[t]L@QAfej'Drj
%ad9hW@qe1d.Y0?BAX;PQGQ)FrI3'JBXo_!&*=3a<'\$uuE,Cg@;LE8J@l8YC!_KjnTDMGT!=/r04^(,s`)Bod$g#TM*SKSL&qXc#
%*n^Z8=E'#ZT6siKh+#PD-P!o)16he80Dct$<r)Ia_sm&#j#[+c61l*c#HebuLoJ5AHsY:8cLSrJCM5^R2EWU*P^I+u!m4bi0h]C.
%'C)OGnA`3X'N&5.=a6\5%bc%la4O9S3GK7S4"+2&EK'HRM\XC^7T5G,ot0Ml+r]A6[t<mi*`nR2^,n(C4S/L<Q-o7`ZhNR)VGA7L
%nnn\P)=>NJ5C<,UHt)`sN-ma7\'k&?)#Khtf&UY$dfG&%@;2%T4o.-7"TRR,*4-LL;:i[g%C>eVq3=qI(@KS6b3osWT0ns@;mDG)
%.e>'-$KDIbK'!oG^j@U<"tekcODq[l0?L!1E8@3'G&s(T$@KVAD@`%fd3<)t_l<mFG&nUCrAmmaFNs&(T#^-uB2>ORiC>RE?RgUV
%R`!WYM,Z@;VZZKhD%p-1$Ze\)K@b>7Y.e7oKH!m"d!o0*#i]`>6ROf,2$.uC2N4R(hF(AUY>F-t&_^TP\PgpO5t.s)Oq&mC9RoW1
%7P+D86KSHIE:M`koR;UnICLRu>B>VdeY,IhDTrCU1tm9_WJ-OuIQ;"4;)\MH\W"SN*]eS?BVZFI^9tcL02J=L,c6d$rLq?&[C-\)
%lUHlHh3nf4Bs^)L+.].50B0g@T6*K7K`c(@Zc&H`JUEY0!U3cTo"o[X7%mOAm))!Resq@t^J6tO^b$WhMX+[=V#r.p.mH:<o;S[X
%FNV0VNcfa.KhBDHZC,#]#"S3.U4stJne5a[mV0/m$p+7@W"E^fm9r,:p\c"VO.UDW-`JXbApl[:PXB%9);=DE2i7u8WJaMNXqj2h
%V7.h:iZST-gh>`bV<B;RN=S>GhOIERX!\U*3e03W'LA]dK'N?;"I49ID\mKHnL.SNmM&#e2U*r];kk=9;!LMEUm-sSO^_%]`?=jX
%d](Dl)HH:FCZcgg"Kplk,T"sAGX)Ll\.mO!'M/ln8]"ksCf$WMm/4*KE\n$`BDIGUI*$:3=3`(S9;<"Xe%Ug$TWUiQ8Uj>Y;ji-3
%%HAqiBVc>e6$PP1J]=O@);qm2IPM/K,Pro[&.qoX5%FaSJh4)P6seY;e=K^VfC-F[*7]fC3RWEbDjHo0"]@fA6\QJu8p>.effWdD
%)B)(Y2^g;X)4Jtg\bQLDNKk=Uh<[?52NVt!OX6[J\J%N,WR+.<<$&F@BhOEhSr,+@630t\Gt=&oMTBCH1)Ur]nP1;$ePSP#K(snW
%Pd6s]o>2>]MD7IN%mVr7m],gGKM'A;L#V#]&E5#CU;nZ5MPp_9\&+I-ha!;AOeAL%;8TFK=pFN$hek7Z(<,)L7EeAjOe^6e;B[P?
%a#EONf-ip>M.*l\Au"G+#nTO=$-?Y(oI9KW+&NrO+P_1ko0I]iXihL2Z]JhrQpT@_,ekr#Y+HeJY%pOu897pG&#g_@NL&I+ctF$#
%64/un#m3MU,=-]\#2_m-`Co`#`*_<)'9m;SKQVj(blX?6-;>:d%e0aSTKTD.>YWOm$CQcGoD2mpp=gd\=e,>R";(1Qd;b8@kk_+Q
%`&,'\=n-Ytk@G]&dDc#;JbY"U]rJGVIKQcidGd$(!"t?&a=lf&L[os.liEs7*6`"AH9k]BW+=>>Vm2;7[2?!V2i7nU3@s!ioOrL]
%H"kTNq/G]_RP$@=I"7BAb`n'N9pJO])M8Ea0JnW1_i\3YYgl:@'U^U#lDC;nmF&-%>$4,]di,g#dmPskiIYsi4;=:=)]h^J5E)Vt
%Cq-!#S5iFkIS5[#aU0U&OK8LO=[)f"&jkf?%@:jnWs0la'Nk`e@RTSL>ublA)22YU<Ga,JQ/W\gMP796jfKQE-t^#'VjX`Q7-!IU
%RiO!0a?#U")c.5c>hGVK'U#GN>'706@<>)?9@+4rf:(9ben!LYK$kYhgF9Zf#]1gXKQ*erJs,U["mLY+p9[,Wb"TW^T(Rmkl1(,`
%J_n`O?I6_-,q`G!g"Cjg`'&$C<+`g9Yb9Vq0aB_b:_#=F-T:fN+qg(j4YC<+o@fc?euLdIodlD5D@DMnGR#f`8R'AC[5D1Am&^nL
%l.6Rm2bUkM8L!e%1oI#T:M[>(TYHbA9,/?lAI)It//2BGLu<+46BlQE3S)=F'j-X+!dq2>J!ughTg<II7c%/mQTu[bMsZ4[IH`Xl
%62<6e$"f?1-1Xu9kuU!JGW\ft=)N,][*d=VD?>Z?"H=kfdFImrl!*WjD*pPK)YL%^&S5]g&ucA\Sm"b^)Q=F*3.<WT2,F\@PU;oF
%6Soj*g0?sA<esaVXpe0]:sr.@;$$?'B=6-eS>"OU^h1\DEj@qiP-U?OX+SpEOdd'Z+fG,tRS.He;8:R2,dp>GQI3@UJPjWB7YDq!
%mer[c>]?O]R8!$s:q*=l&[)Sgk7$+p?n7+MqL!=\4I+20!jSoK%(9bRZLYnD92R''X+"5V(/#m/H_f60#6?IVA'fKL4[(]J&u/7u
%+e>Wm;N&VVp]nF6J0oDefu?tJd8EB@)+c.;/Y-(2O#W6->*_KomqkkPk$8>iR+K-I_?@:'2M]U1OGYQF8E?4^Id1J.j;;`c7[hX9
%7^&7os%?M533XFUSYI[Qm1U'NdXTnb+50t/#07)XrL1`1kYT5`1.]TD2e]?5']li(FLZ1']YGn/@[3mo?n/#=!Yp'O9'/OJ1cRA+
%8fo5=EMEas-R@Ai:9[F>DS_R"/C39C-21r-2OKA*'-uXM'p[;0`&2Xgd[m)!Vu/<M6k,F8=@FV,b=7)(aYl<25)^[LH7p!mr?7Y!
%ej7r?/?!G0l<L<`*?.XqY/H>.Gc0?tV.cb+&;(5bP^GIeOR8sf9n[cTJ>B<h6ji57G!HW1fPR"%R$p-%b'=a2T\/<3@Lj<!l1#1Y
%YRf3;7bQ$Tng_E*E:ZH"<&[q1q(OD+baQ*Z#!34j@7;:r5C*)#%h&9[W&\#<ASQ"%g?FjYa"]<CiY&rATHP#;E(VL!0jXK-$nkh^
%I#-rORjmd,Me>2l2CUfW:<mM@F==Cr6nap5Q-G2">U%ICf[q.cO;psE'eq_5=#ZUGX--PqDAi0..,0^k2RGC@?<6eV52Pn*R#IbT
%c!@ua8.7g4OfC[;hH1Vk\Yq_Y/^Pu!U?@d"baE@h5r)T1G8)f-OQ`+8hQPl`>Fm75hf3n$C[K6Lrjp_OqZ_-p.9^b%?=9"BUS*o$
%.4YgTSEN"uW"*i"gnVK8miJ+d]5:fikqX5E+4ieV*N(:%n'Kn-pE*-e'oK&(/?-g3"FXM[3GXh_L#'U/\m+rlZNHbQK?cIs7F0rB
%_7r%oi<+22n0<]U<_9i\7_m&eLi&FsZ>\+G^^lO6WLFI!qo)aBK+[`q7;4Q->[+^.[=o\PBaG$/Ga1*O+'19i>+i3UHW45EOgF)O
%MB(UCqT#983j4la\-McsIn\KX1luroEojnq)Gubf,_RM@F/'#nK"htmT]El2RB%e6a>\\,R2K6YfR4Ut7DEVT6dk@kRbZtt;A((,
%8Z*uo6-u#\UUor2#D<^g1M_o#QE)+5`-("/Jg-CME1b+BLN`\8`l841Gm[gJT-7sXAG96W4.,'7`ej9[B3ehbSt?IO/hL-i7s[Id
%-'?V%A^@l!+aA'*)b2I>'$kIc[[j1')rDPg6oHAX9r+IXLV34SW@m$&h6KacN[N+;#=@N6jej&oPFH?h+SrJ?:'GoEHGe3U15$ia
%@lIG>.)n'DrsgG@bBeaC)6j$7B[c:pF_9m1Ht//QaDVpnp;.C<+0ic15ZhURit')>Im"2/T+tT1U0-bMj\'T-foQV_P3K]8_s+fB
%9QTdtnkYdj+ZcFZUrmsu2E2%FGhu0>_#E<KUEXW#A8!f??[H?L:iop>nW'0BOG=UH)"=W_4s4N@,F8FGG8O^XOsu(2)-&guP-drn
%!e,BO)&'(lA(8smhX5'=dE*BF6TF2!-mmg047^,_S"mAmepdOJ_3XC<;XnuMj.Oi!e$-7F,sV^3MX'\]+/=G/_`eH_U^[dg('d&p
%7;2*&,sBmfTbJ"d'5P^O6Y6`@ZEtdOq`;7]Q\e1u17'"Aq.!jA=`8q&Kc^:FkOYo2!TJM;"V'^0c7^K%`P]0aQ#e!:n*\B0oOams
%\%^*;SM,=rE%<nLr]a3*=/U&ap/N6,`9-HA!Zg%='V"[kb;]%j"512P>k_?4/T(\E_,sL(\*FgQGq7)l.<&]HCHE=>l/7,ka*l&K
%(dR,KikNMn.e2($P\4=gfDSI%@_VH<-l;GM]l;M.&m01]DPW*SmJ(+UDua[g:Uu'!Ks*N:p1Rg5r'$8C:W/h(rU9aF0E:3"rmfo@
%s5W#:O+6qCs7?9fo^@>/fhY`#X7Pk"5Q/S$q2bRIn,MAHrq'k'iBR8%qtpEint5s&5Q3Thr,4gu+8GKcj8ZdQg)UlJNm1<pFLt*O
%SN+2+]Lu4VK?=/racRFZHb98R(tIk/\Tc=ulAu2\l1%-?hYbZf6eX1AV`e_^/3#P.mGlJ#7W,&aI.LG1?d7PrXi--d*OXH-*\39-
%diO>0)8CjVkrF359jpo>lkGF'Dg,a)hSde/^@65bnF*6sD%/hBgK+"J*@Q<>VMnU.Z+SnTnbD::Q/=d[JSke`EkW8`?O(I"F1`iG
%iMpQH7nB@ZYY2GbBJ#/cQe2cgjO`Uf>]V<&LRVN"Y<m0:e@]VKT0'tV"!Y4/7o<GEo93OXha).Q%Q0:5k)=6)6[HA@k1)AelaJ%l
%dbsX>g6pB(.@NR7eX8HX[LQ^eEYIccab`#`F4bGN=mSX*&.->(NU8u07)1&oiNqYdj99:n9&OT)&*%B:0/G`LCSG"t$2FU`'CEub
%@"b<H!_sI/KtY@;,rA1"7N:"AgU3HnOVCe"7XJ>'BlMs!UqrtqdRUoFoY/TP]bd`=q7)p%T:9/NK4enD(9=oKC0kJ450q*4=3SP%
%;Y*$6YI$nH_B_ZN2blR5Ku)09KN>;SGf`=9$H)g!ZS1U7#=k&"(:qd%/[.\TPOc2"#[q))mc=.[UFR;8`DW2kp`Wk]=sea"4])-i
%0"H_/#OsIn3/p4OTV-;Lj"R`P4H_"4Km8mH%-+!5Tp,1CiDggSMSMZNmi5:TLsl;[F4B;5bEV^OC1"=p$`EHk*K0K#r[lU3G*).h
%GTOl>1b3^PQpW5Ge2;U?HS.[3h0,s\]tJ]UhGF%1A@_Sd"a[eWju_3Ig7`=H<1N!ED!r];^PDMJr>$\!g!(DlSqcl\9?jZF>.7NO
%N<[*,k7,UO%"r?OC,L1';^%+mQUG4_8JsO^;C"!9!],3-"JWC/;A`494opLk7U`Nb<=q5ZOD(IG7dgN0N5'-J8jrDVYZb[+2AeF/
%n_c<H[:Xfr=s5_B"XKW/-AQ<=c(UE!`rPd'_1N?=Ull]BWOra,"TPr'h+G&!*$"qK\(lbWkTce[R#-[Y@,?S3TuF3b@V>2g#=SsX
%1eiA4*.Nf3I9>EWbKaIPlMi;2%?neu%*$]t`RPHR&g(f:f/s@jX*A1gUW-O_8I',EreWj5Pocp#a9;e+nE5a92G3c8jfXX7q8iGl
%'_H8'>)a5A#EM!&YG&IBOJhrQ+K4]%XW-F45JGnZhW$Q2q]:@`H[!h*nft_BK*J!lo8ZMX-l`tg-MeE?+We30_CF]Ta;nK]:D\X.
%8&WNeFpTn@S2?5Z=Af,o9mYrcoHrl$\Z,9\na[#?mjIP=0om4")a4F`?LToO#K#"naa[";*=YIi]M=9Sr@275Hn5$Bh9XLQhq+=H
%%uG]L__*cn4Hm7=h$i8]%+F(I6C=RCr)l5_rY6S%[ki:oCL<q(3gD^LK_RMfOLF:^=^1N[AN/gPL]>,%nt*'))A6!q\]UJ1In\KR
%1[I`NLGS`,@5gP]qrlm[:7qOFYQ*Q'5Q08Brq00,J,'WTq"K:6q="@<s19iGs7h*Bj8\^8rqjZN^'T2#DtYj`l[O<[QbWO#:]Kk3
%T<5m-qQKlNrnY?fo^AcKn9=3qp"u<7s/bneJL1&_?=CnuKr2L,=N4sr=__3i4u`^?>\Z&"g/&(6Z:pJ1JatIjL.9.r7!fLS?Q=/!
%$b=?s*%mAqG]LoEjX@]c%"<F"L>R/,BH:aDpQN\L,>Zd-4e>L,V4q+g@ZRk"'Mu8-ZH(!g3K6"%X8I3eM+]CNmTh7@8gP-5i2hlP
%9o/,<<&ulNc@tmda>cf4"!%#RC?D7NWu]tpdtd6g;5luha)P7B+GDftT!'N!T^)CG/Nk;q\NEh?iR%+<Q*R8?1*bf05uX[_?Pq2O
%='\A(Rj1(mej6Hgr@Tu`=D$V%7PJLX;#ET-M(>>KR:8e>HQrp%1?NK,n`<gH*kr$=pCb2A=EKe[3V!i\aVUt?@@7PWT2:_XF!s@Y
%fDL7QaO?X,:(;W[n1l6M,O012fJL(]GpU1"h7%$qJ*QNi&@^"ii`A["&aQ%Qpr^P3;g10`=0kX`r0Xu`0?j8G@H]5cQB.p9Q:4#.
%gN?]7e^jVJ\9ftLEo$5o>P,Zsgp]',R>S1Al7Hk^j7nsKntkeao#[/M(k+8u(DhOf9_2RN@;lL)=4aB\d)BR.%=VK0<?a(.>LC""
%"S.c7<$K]LJF`!3E^p!*;\,2O-/=\./;))Q5+Xj@gTYU=pN%B&BmB%/S05EP\\1o1EI_bi>M)0T"o$@!c#AVm<7FHDZ3nN&4+OUo
%%pam7WOb@gpOq%GL"Hd>5@5Q0mdo7q5O2YTc+\SpVGU[#JZP,a3CPr'@<NO`n/uPP/dp$TILE`ZJ+.:7OQ[L>7HQV)fNZq3F@a&q
%WsPaC5W&3Kd,:]%7*49@:?&4@6`^Q=];*2#kSXWmb73PD#:[\!lPL6J9>V<4.RQcaH$4qo;g0uX\Eb,3GRt>aV3:6F]uT8#k(#@"
%4Lu$_m>cd>FaWNI<Qu#(^b')$s2$g.&o$isB$i&s&<s"(m8K`Y31Nmi!aqT>Ljt#4#Tt3=6J.3\/[@hV[$aYKd3hi,_^s!X^>'1b
%oA.bWh[]&FLI8]6iic'lr<"FNdJGV<#?cc?p%*tIZ(GW8_A8plj;,^=\2cMsN5-dn\_o5=g:NM)WIuhk)G&m]a`AeLf]K0F)(,_V
%(4.#l72dRVnL#=!;+6cR-Z]=)\B]"I`V+Gbq,UGZ<c"A[s7q\.cX.jh*7j:7#(4-pe`W!\qOu,]Z_@9Gh3Yb,rd6(0TC4&ho1-*0
%]C'Q<ke3eLYiXKNB_c6R0Hmh.Vg1T7HK/e&ZmL(h^_M9fB]'5fO0]"Niq5*5EC':F=":cFm:GEfK!]Q)&NIIcba(_]c%@8)j$;3?
%W*P#0G74/DCZ-!diC=SHnc&-:b."!]>Bl]M#UW,G#JO,2b#!@-Wp&J.#84q.W2R(BO1H*UJ9g?k?1O`3J0`$lU5?2NdJ`ju'$2LV
%"t*aI-uu/c<UX.UWkbO:&bL6>bc=EnRgs#"J]^,;b1=+TF2Dbi2rk5/;.YQlk.#RPdG$6-0/XX]jXS/H!'!DG<!B-r$Ljt>aOr_h
%1-j-Gc:Y'Lk,ZElB/tPTaYbIQl@DjDAh%GXOD:]UZeY_[>.YJnI@sC.IYW4#iI/6WhWNYPID-`Yk7<>lbKO=/55sJS/4hVU:]P<n
%G>(GhQ*3pKG<,)7WCf;gc>#rQP58$LES-PQ*MZG@/(UTP-Dse>OL@?aDM=?r+<c=oWbt4NZGJ#]lH3>2eeUmcT`[B(r>A3'7Utuk
%6$f,]caQl$rg;]Cd=&aj`91@-IK#VO+,]'e>*V#eI^u$KcZbQCq,XFXIk6,ZMt2;th_0Rcrqu@0[X>DO]HV;P;cjd"@$')bM5gPN
%gl,*M3(#$qkWZQ7+l"VOiP?Gr?7lB++btZ$@9apCaWXm@n^GHtPcrpa(go2Qmt=[:S[Q:X92iEYfZ82oHrGoLaj>r&R'Tc[%<BKJ
%EIWm%i>]U=,[GED&*MBHfh/cp8b$:-.E[1Y,I-sbGsFo@=YIO+Z@K$/N@5D44!F9f*?Nuu7Tq1kIV0Q-GoG`?X)=W("*0`a4;FD5
%IS3LV;m"O2&>!&!]060nb\pDCUrj"/8F.>EBFo3ef5^U8?)nLfJH85mrGG9DDI3QY'=!\c(n#f.r!jF-ksU:N`)3SPB$DJSZgNTQ
%!(_#<0.)O^RNG)\Yep!eOHYo6q\rBNp(+V8=SjQq7Y1Y:,CD_J>($2\),tr2XCSo<AD&*NnPfQ8dc$\T#pPu-,PD-CeK1`C-u,KD
%6VTe`j3^O\H`T5[Zs1s&#%D#Jp1ZHDOJHG_f;Ttb\;c>Dcj`X:H62;I@9.mT6:;&&a-6dk(l<JC"=6_KAq^5!WfTY*]ofYY6--q(
%*!?OjW.RML(EAFl\P]fa%7OT<oDEHYbiL[)(Ch$4p+M\7Gr*K(:h#E85*_(d>Xg0Q%P=*u[p.sMX[O"+')=AKO-E!9h53RPs&Gf#
%6.ssjl$4@NPsI)CAQGWT!!apU!:LK380K8$,7+eu*h?:iR)o0VaQl)[0.eE`@5il#5P#b@Itf=:fH5((_ZM,5adNgS1o6#S47Dkf
%-!"5J6ae.dHt<gma/jQ^94$!T7QfnqMQp+F5tB'o)\D\,24+]rAHGp\_toP72%aaiet*&$9(ifa[0RtY.f!aGY.O`Ga%N(f_lXJ(
%eH8Ak;O4"7"X9jZ71j9"?0W:.7>4c.#Io\ir9OZ]$ss'IWa#pFL;6)F)biuI(3),l<0HV+pafE*E!gAu\ce\6Z4?/Paq!W*75b0^
%B-YhHW%_%>!tf<G8_"/oR?gt@:jb>>7%'<nD'jR`J/YR'C.?XqdHi#K+T-g`f"D=WTP+o[dYP?f)XWlnbMF"3A/`PS3n!RP's[<K
%fj]#QH.(i]OB>We6_3#^YnU2LU0b:gB&hsgYhLK;2c#KD*_+`]Hk%NF&0@Xj>W<GF@JJ2,=)b*0a".QCo,((^5=Fb/EAk9Lf<7Q,
%5hDM9j*A:HKWHUT]nfu)aG;?NB]^GmLfog`K/&6U+/?+s%:t>LA1:$ZXD?'/9Z_8*nDX.X>c3-2ea1BijINiR.8cae"dQto;m>QW
%\q,6'SC3:2Mc,u;CE5+>!uefnRl3l>NdBBc:&R&UU80Uh-*Z'm".B-UK(pHkZe94\#>$OI:LhqmPoN?R5bi-).gV+i_obUNZbgi&
%I\QT$ZtPTQ$]P\PcfD,')s8IcaItd%m;FdKNf$Sg/@R/jNtI]qU:a7F94:?!5H+jGZR-S4nk]/"(7B_5eOPpW?45NHZUaHR,!S/=
%n@.9e5:NTc*qUrS7e8bla,:.M]@@"EF$84Y\m8oT?]T*`4tZ4N4`F<:LCFa]`#GPiRu<rh@M3(1J\+r*Voo<ug?NTC9;5g&TNQ_8
%\t("W)M:FM"XA7(OP&r[jg9,eE<V4l4+Kf_2c+9NOEL>DK&/ntr:-4Aa$f,8IJer'g`N`q?S2$@^I7Ke4m>H(hg`>p^]+UC:u@j"
%jnU%s`?2h]]_m/Srqb#h+45!:o$8]_[l[2'YB"O>e2"$`7$>LBdA)@GI`+cXNZjT:#4:;Vmd!^$"A1pW'nH@)V6eiYb?X=B6\Ftf
%SA.Lk2I<]W4uT-WfIqq^qOMd0"c^FfVICd:;80g1Nh=fO.SV&2KZl[7rD?ZSYVVHb)EJ"&Nen90r'N$5*/eNb5qbb1LVM1RCGN(-
%JP_J`nNXs#1!Jc@fSC/K^JnCu9Y_Z69h!Gr[CLco8,3(`^p9jYm)oFP?MF6^aT"bPjSt+Rq?K!iIWa[7p\;e$`9H^W%rh9/\AAsa
%>Qc[(pk>nc.i46b;V]MaBdrnd^AVtYj)N237)bg4?EaQ0<f$0q.?h83\8J5E-/QFC\o<`DZ@=>,^WUIMome'<1&u2I4EMIA3&,0s
%P":4`G(!e6(076s[<Oj?kfYr(\6lCi_")p:gZUrfO&uc5&OS-Ra(dtEF)i88c-MsA-VF).Xi?pt![C2%B1L$tY%)n9A_c"fV=(UT
%V$WbSh5]-B3_1XPrROQY6s],(aO9,dFH6RM,C9?2@)2U%_a-c6riMA2lbc,''=+=0d>Bb(Y6S.1E7+mN>\WrZ3HU'P[/6\`#c&V<
%j,bTKO1%EEOJB,CX#/4nqb&=0M3@hd/PWhb':hjRLX*0=qM&m(8]MTNpm0C&8BQWC]p:JkMKSm3;53U+k:)*U57Pl^D]cEh71-.W
%#>)]&>=1JiB.&q$2:j(Nc?K4:K\pYKmDD'qC[QJ\YJ-u'&+YI$o$]TjWZ!4f/%i`5itFe%2n*=Q@_^`;f3c^]Qb9=i.^W]L_qSn$
%`X="Z%maa9E.n6?6CjMneq\mBP5ST2RC]e$n/e1Lc5@oIGoH)9n*Fup6dfgS"L0CGZftdG@7)$rdVD6XidA^MHlgu&7ZkpN-Q:ag
%LB^V,3^@.P&ISfXEC;E>gqJu/_M')0p]<uS\_sPS,i/f=n&L28+Y$+Aeg$7sOOQ!Tf%"#:Bi+3t;6ERJAhk7"I`+K(WR<EG1>T#0
%<mW=i#-DQ!]-.=p6(Of"68GB7Cc0DJq6cY1r=h\EP:Z3GHt#W(5sejGl#pg@>B0fhPAh'10>q?D)lAjh`ORL@&_Wi9!C.Ucs,U(4
%".;Pd,p4#(hE!+%,,Z#2'OI;Ppu'4aLEa,Nj90C).Glf\-i+\-9pe47b7Z5';"$Sa_@Y>SL881NVA\QM7SklPo9P(#Abu!2.VX't
%MIhPZ'#!/D,7Q)'&K"+L<dg_C@G&#Y$k!Ft-VfSkAeAf4:9L-]X+b>P/-0W+!Ae\PEp^^I;>@ANSG4'PKuYpDS+FjCI6Oi4GG43q
%><.6'$_ps_^ei6L2.fa?p(O/&.F$+,_*FHFh-AqH[(]mukdNOK?9TpQepMNXo)3l6#i*\X0V6:bek=R>DTE3KB@76ukfe&k:hXiT
%AIBCf?pI:o@SL!(,qY#jH1V1?W;=%*,;*N-,DCf'P6GlS\:h/#q/+<\p^6JW'/C.gPp,.Cj9\=1<(Q[dH:'-EHJR[W*I3mU72&'"
%R0HtW@^LZqVE.,Hl0/EX8h+&Zeg@5ZKC[uFcFi\&A%W/jC6l9:5I;n$8..]1<D2"hZ,3^reBeS.(#UH-,LZ:Cl-SQ2?7W:s+[okl
%SttUAJ.A_[52[msLLie55$na4>C%57SMfY!G:F;rjs!\V]]6WO@p_?ElIm3=Gb[TtFR@hbL3T4=eX"eR!rVmeF\DRFiBM%4K,V=U
%R$)u8rEM1`U=>oR:765Z+K:G4#YtCYTdJ,t"&RG&`#Hg2_a4kGj_@\D:epYB"h/H9?/0Fn-oRnNB($/$3'Z6CPMGj0X"^0k3RRNs
%petDI5CTAPrF1$O"cED!ig[pVrp(B<qk'bUon)`@cc>E+a"cJ3gNTRiT/l%PJ&&DBi7Yg5G"^*'/d-.qP*1$b'ALlr%QZ0QDeg8`
%4@Cp*I!Ut56=!86p4-EGJR,TNMG((8(Y9mP:mSc'kAQ]GnorZ?+\%:d;CSJM=r1#rE2#?Z2Y8i[QX(%u>'cqDN;g]>LmWs49Y;22
%OM&DL5K.23T=1*45p6]9.FY4$>Zse0NWTWi!RKZ+4XB]lI4#L[;XCkZZC&_]#;0OW@YH.nD!3q6='ZKrCjB@t<4BogDr-140(6YY
%/D`V,RJ8;%r0'G9p_,_LrebL/<7S.id]&(a9IY&H&2#O`PK1RjM0P,pVN(E+f5d[#KtC-g;;:kR<ahJ%6Z&'8[Y0IgC]P;GV&_67
%c,?D@;=aN79n[jqITQ>5`@\ou5G7"b'JFc%I7kL$roVLW)/K92g^jZ6Doth0YT%OpUMMFI,Le[Ln_h,A"iBZZ^)OoglfGuM_/a?<
%Q-?7=UOGDr_"[u5V&?+mjtUjTpu!ou0Xl!\/%C0_&sKQ$4kt,u2%&SrFjn,qrm3ArRlbjerP"hm()ek(f>6CM2-4Lr+[>S\AZ!7+
%gRj6S=]-Muk;s0g%]Ql-[Ga>cc^/008Z7#/;EqHLLeilfkmVra&;T,#Y.B284r#rSJ9Go7m1)<NPd9n3^L3_B7XeT$L/b]Y%EX-c
%o9lqMCit0#AAuS>\d[OA:C!k%BctL'dQg5O'&KfnNmFE"5dr$Fo#AG6?%9qfPpO:aqPLFUG^IuPfHdT0SqW4D#aOC'8-)Xm8(&j4
%%k5>G6Y&BS3&\:j\N9Pm>RJ6JAQ/;?/9aI1B$1G7HY2h[*j2h<^K]i?/^;bP/>W>:g8<[;5=>U5'C1kr7e5?G1A1S^>=&!!;4'=1
%LtAN?%7Jrq6hjVl99e_H4T)[5dnManK>Yn7./De*C\MsPd5)g;1k5L\Nr+sO7dTT#6f;?dEqX/PUOO73l30%:s5dG:-lmS&S0+K>
%h2d?cbr*a`8,)s1IZ\@*RdZL.7.V]m9#,2?T+Q>9qLN1;Tm]"8DDdE4guj&3*.o[&5[EP9Wk\si&h?3@(Le)ql45lAAd:@lBks<:
%dd>f2BHco_INAh;bcddjo](@3bff@IH_*G4Su+_('Rko-2gR0fAb$+SAb=m%/BX56,URud_YU;4Y&MN&!?W[+fnqjm`s:h^0Y2Lu
%G#u/GFnOQBUt'*HYWem1U8h][C8A9'3X\CCiiTg'<$TFY[#=Csg(fi.X`9Ik>`u3YBt%YeipE&d,6W>QhDo,tI>EXcXW>YLNTXlM
%Os:@D),8E)\7UT:Tf@?ensrX\OT97X+J.>35,'JcQB$n$*C$n2KUC`q!Sre6L-Hb7nqlBcoC=_ho\4rOV<R4`;SLus@RG%;)`4Ga
%"k@UsmYT!a/CWj9ZD-]1&)ijU'tjuds47%9PZ>+h0IlWCihdQR<cZXS>=J(0@;VfZ%lUS-E^19sSK,\b;+)^",XL//iJAnp1>DaW
%oZgTW.IZU%%M`K`."Se7+lBChPs0!.#4Xh01\UO3e"bf@o9kV#@XhuhHh^B!HKO>D/M3%8emS58+A7Y=+j5%9X=0[gj?ikG[SA,f
%1jI*bNhM7^^m1g5Nc+C)3F79n3U<m*-L$<,c<Nm4c#)ZPo1#"\h4+r7H+\=2p8p((+7SiUL`96ADG2t`)\tU.o'M_]B2X5+<=Is*
%-Zb/[0MT[IL5^P76S`&GG=cG,<s4@GatF2L9FAI'7?WClQ(YU"S2`eiMR?gbbD2V;N1`.T<^WWi#2CGC@Hpr1"cXR2G:LssDQsf&
%h%R:,mf=Q61^5AE;P\3rmq/7WlMOrC=h-1QrZua;YHN[X:d("\7U2+hK"H#7S\.pM0Uhc_6lsSTaeai+-gMZ^4[`WgV:q4j#E^rW
%6KnO\dmG8f"P'ni&k$:_crt,L,=."dM:1T&j`dQ*`=q'7jjS"'>F<oMLj6fc@_'NH.#k-Bp@NT\C^k9his";,SimWuHKr'<<Trh9
%)Y5btDU[2IV$',P,or4YYMi:\UYh_STH4i.=EBsM:IBH?V<0e5VCS_Gbr%1_hZd6;95t^&UO21N(I9,J9$neb8lJh"pS_ldB34je
%cXk,@oXkY]l!qkG3#hODmhY?=?Sn8hNlZ'$\=fd$T0l!oT_rh/c.+h0_`]IY4RQC\iI#%)7pN\#fm]oGrr%kpZj1V,<mM?[O0RU6
%l"9G2XaYJS4M-__0/J#sUu<aZ#e/4`EEbQn;/P93g[6/[fGmR>oGIQjX6t^le*[a3S6o43pKIe01!VS\$Y48`YscfW_?<4TAqi(r
%+=f&*0(RBM<7MW5,Nq0C:Ps8#ehS44q31,E&;hMtINe_+dXm/?)D],&[m?k6)D^<E8,:U)nHW<HVW4)qY7F20rkt6Q#/8nkn`#b;
%lN)8a\c`C<Cj)3VV0Hc*Z;$b?EW#BhQPMr.%9hrmjI/_on%)f>$B`+Hh_aFm[gs)178Zsp\IBQ1hP_'sS$QNcO8!35it$B[6c9G5
%5;so.r!eRUH22VVbpuT0THg_/B6Htk6aE",eUIoG8GQZ#E;eaKaPk6Z'f['H+A/4lo[5V$5r&csl$e*6W4i[/(T`<c&>q\LJ:j6]
%jg&,L"h<SK]j..nEZ.a[ZL5f;9oQ!>3pIK)fQm$^*@8UPgl;-ASr>,HSg#$9c6$c@^@8(!Md;+W[j2gC8AYAFhV^1q_@pS98Pf^b
%Zo]";&2&*C0B12K!gP&q),Q"\SDJlpO>.lX+\ccfl>BD`^R*$@B<m$>_:T.o)If.4`H%"eg\V`n@M/<=&6j])Kg`C44Ehpn%B0]j
%$5D^kQC(aEMf1WjdAS?t#YQJ7j;W3"e"b+tD/Ah1Bfp=CUjUKUEMAtZV+Gl.Z:>Ca\23bsTHLbf/c9MF*d'&^pHpYdWNG&o32eMC
%F2&,rURpu2_EIaRL@\^;caE4@\`Im?Am`bLKPoo_62p]?Y0B2&ZOLW1eFSA9)a&n)c_[PU5I^L0HR/;'"IVqV]SK75_mWpJiuXHB
%5Aj^(UD0/L,o]!;J'Y(ViSV$>0E+5lQDl^n0WgiJXj;GsD+]m9YcqnF</7.s]SoBn$.B&Z!'sA#\:2JN5Q`)L`5=:Np:3J*Le.LM
%PHYPPi=&>k]Bi>Z64o3!7/bU5ffK$7b&M5l)598dfG0%1[\ltbNq;\JAr:pR_3[6F#^I?e1P_P=q=YEDmtPu>YFU!U*e'<A#Mqh7
%P>h]sl8W2O!4ubu<03k+?id%`h)Y\1aIMgGb<S&FHK-)f;bHuU;3A>K`b;,,^rC;bG(U+C23[?)!Df-$R!rhk`q[KZ[mPPW\Mi/3
%MsTNE_>hce43!liJ+NS>n8SJGm]Q/.'n`uV"Qk>*k02FqNe3-Z4cE%h[Z7W^`uNO.i'C%p.$uKbc[L<Nm[sO9j/B@idldM*nE?p5
%"kIrWHOoP:^ZaA=DE@8ElUbuu]2ppePB-dHPhgrZk6Gcp@u%me"7-_^Hg0i3Pb12.g:[.0OngnB`hhV@/94;>&`M.(4h,ujp*J7u
%cb=SqEX*eFg<>mqDo)DDf7X9E_6!uiY*[*Mi40[MUVePT\)@8]?*rq,]>1"=/Q"akT:;1DCnP.C\*No\'E%iIeK0,Z9A)SFC2__u
%N@&mAr;>$44c/h>=i"UmhQH8c4n/?\Q$A,3Z"C,A>L5%aS(2rZFY%'?iE4/*qDEW3\o75Vfp?'eeuW6"#5U3(]=MqQ_!bXD(Apc_
%Z1fd%5eguNQhQI`pqVS,B8)\2UJBlfYF,K%7%DgOU_ChkMGU8e&'oePaqqAF1ZK*[S45uM3"3.8&s5d.a46%`<qLdV/Qmt94L@Y<
%;L.$'PG6?G;[rB;jN)#Uh-)IBi)R<IPAC@9?A?t72G/X"+H=TW#%Fg4":"[OnYQs_d'Z"H3a<r(25EPU*c^6[M"dSXW;s$!MW,7)
%I<oN*]=YEEFp$bc*N+H3'1^iWjNd`2`I2/u+3"I1'0(143;BI:%S,i0eMm9m@"e[$m9cYW$>;XYA+<0H<rYt:o3A)=`r[],#/F*8
%gh/uoO%:K$.(\q2VRMK_:dL2P5lC5Nog#U:2E>Sg;hCJ"o([)9gi:Zsq%1c&6I(2Is#kfIE!UhQ/-c3Zjof>Q:i7M_"(")Q$1-F&
%J::N<I(OZEb<mFr00*ZaaKfp]pg1YZR[-CF6=tQ%AhH<0:Qkn05:.nXUJ.KW>&od=9?s?^QDGc1q$-+.\#)h2=HA6O:r9YE;<#:S
%q5*]]P*\c_.0@o]DJb6e\+OD1aY-RkA%J,<Wm_]$aIt2UnZfKU1PnNKfS3hgka-0F+)?J?/OB9eld4<(Z;_9QbM3<bQh^hS5q&).
%$;kCVRRVS:'p?kc<a%GOg]sk;&)hLrbo',6psTkmhi5W'"4XNIXD]&+*9_'/*OL)X-e:iN)B56r&1u:f]mk(Y-q%r&e2a3&=%/7I
%-fs8jF-(Q</f$f;M9j(bWUK@h*+*U2#?MGHE8cOOcTHXQOT2eB]C1-Z+;^Z[%*Ub)/46aM#ZgT6`F1eDYIL5KdL-+F.JXNV,V42l
%7E'%#KPVGnWn_E4EhL0c:'T\S($P%[dCS:]&=Ec4FsnI_E41,ecmI/81)Ac;N;/g!YOtJ9Zj`QDF.!U"i!l<N-KOQa&4%BcC@c^,
%lVHO1p7Wm_ZjpI,StlF3=^R^jD+<-^U*hsGNR>?P)mTZc_>X8gHQ9T#ih\<JcCSEc`AGn1mm6pFX3-E9_\Gc:;S*L@kXk1tWESW\
%V!K/X^HWQ6/%>35!7=*Xf?We]C#F!_lErRH1<e^WIhb*c7fLJ60>k:)p[?Gb@&[nof%mL%Qei@<7-7.[\)@8aMi+@!n<Vsc(9bke
%dE@]o>b^MJr`a@Ark#ZhDcSM#@$scPd`3DEHD>rbhQQQ5Xml4W-%'n!QM&8q$GKm6cYDDRY0*4KHr><ml](`eI)"D(1rJd#=6;r6
%pf4sg]LVqS^0C,?LWA\g7ZQ$4;884]fDM1g\9-pNphne=n;[:PI)#%:<5`S-QT*+`Z:=a9hl'o.pIkN]9mgRq-C;B@e7`rScaJ\^
%8d8CUS3Ii%`<6h'OK7->ZhV/\b.-(K9aZ6qi)#o)?^IJ'Yp<[r9,c>3:R+i0H&7L4K8H?pojqj?UMMO4(#8/nYqTI_6"S,7bt*r4
%+JEc?>]3c"]HDN_]32J%OBY[n(5M/E87TOPVl7H="Y#Kse_K!-*f*2B(^YFC^RK#;L+&=Z02qF6a6(YE>YHT79B$U7@Zh=\CEGt5
%*i@%I*Zp.O'M5ZXNca"3ki5(_S77MW,]\k!0/5K4b-tMA+J#Zln!-O<&rJ%C5itc2h)[?P:H)d1]BU7KN\B1b['3B<<cd(JLlr60
%HH9Y@DlJ_6UhYsE$W>1+-pSQO73.$tk;c[2oK4.=[7SG@ka7FLZ=+fPGa7F#gVJ;^GNVI)23R^>F9[`+?"`j!2=:oqecjXUeeiV[
%qiU)[kqIOn7EDjiQF4EWS4qY*[#*Qgf:ZUn)\lY_>>p77--C"h/UFFJ[X:+np!8_M=#`H0<Z&Ci\CILhL+^lUb5>/o3`">>du::D
%4QQ1X2JBa0n^a">-/0TOlMBW>eQ6k4rJ"dpmBu5=(g56*g?QH_eEI'rRPln7D4S$-.'K-6?=lfGms(_pmP`9j\41[2]bfM,:_<`N
%[$._5Wt[&%a2AI\&IFWOP`/2eA/@Y1]E-PRkqX$-o\3b6^`!E0<&:)<2P`3*B'CEF=QUuH*m?3U;*o+/&&I3#hS$c4cM9sMFa,j-
%)]hc,(uh@<Cc>C@4Hnld;:$d<5T:GL7)%G%+&WSqqPm3cRR)[X8h'f#i/HWFHK:U66Z*3"i-I*c6;3o&V#obs`XsL63d8a^;9:%I
%\@'8OcLFcZ8jI>WO\74!Nq-]rCJe[U90eW?nO2F@lM=FNr/V'H3>1lcBs3bR'M-R(fFhN9VMrspP7j$H,hf2%4/QQZ0B1-R?jnG7
%;0fBJ"&Yq.84r^qOm=:^D^>M`JiZMf'?,SR=sK/<)^\BadMPW*'7qX;8jjkb_X\rno**OtLQF'0.3m@bkJEQK;J"kljgBC(.(Hnl
%*flUMgamN)Ut.rk=K6pE,N2o.ed=R>A60thRU+("FOs)6,k,(i\4"j5_.u&Ag#3"f"nrg:02Uc?E%Vhi9:lun38gBG6#01RTm57d
%9QAN:)FPW$C@-@2$H5.RL+(q06+"1!^M=<?ZP59DpcGJ8M^uh1q7/5:5!`.s7nDcTn-`J/O"2m&;QSf$jLRO<8-i&5<lLt*(??n.
%W0,d[EM<0K"Ws[:&6D<;)iKmOH)oG'7TK4ipq&kRn)ujeqZ,_+XgP<#):t[k.J,3hn/GO[A;sFp4OE@o58dTjV$I&tIe<uRjhShM
%E__SC4Lf'!&/CJ';R4$oQ<G!d@nMl>2Pl>U4N;_6V'Dp<,fm>$@n%*DUd['n=<9iX@`!A(._@a8K1Zn&$TJlZl;?hka.P)<(U*_#
%Pj5#;WR$5F/PXZN06O6o0kM(I%;mb08m.o#rH<=Li]KC5r:o!R(:8tJd;?)kDtF49-ftXG\<d))["q>4l!Olojh)FiGsQ3sHS2dA
%>$knE2kjRU<i6AZC2+hO[:O"X'<0>p19dF;%QQgP'?S\j"DXXR5`T1A:_4ou0:p@-Qa/GSN_rN)V+9VfeU1gh<lHZsj&SsnF[hjL
%PqD$C0.9C$^K1&af1!<uR(?Y[$R&<(;ZZZlY_I1u!X=)\g$=mRUm.;4*RN2H^Z[%m-?Gr>$sdfm02m(sl;m&s,,3Xdp?Jta^=%0s
%G!XN?X=E7bE._E/cDI=.V0gJ$+I*5A"lOW(Q!iH!Q45se8;Z^^$_kjIkLKa9^Q.INW!+d%48PKVAj7$rnN5SgC<bP7h\o_).L<V8
%ihnohDP+naJua[[L((+g<g.FUCKuE359B\``k`sUbReIY2I"CZbS=Hma^]JtoukdY"pd[K$<jQrQ>N%+CM"$X%rIE1*oshhC,)u1
%KORHGTUcZ`kL<PG[FK5qh6Ju]k^Zn'`HH#nN,3@0O[mG5Sm4,V;&OuOK6`puW9AW:/a9a/1s.@GoIE"u1KCD>;j6+%8W2:t?#3S#
%Hbkn,V(jig!@D!WAjum^H:hdc+&LGNfq98PXu/*,GH^E_@)U`T@1U0!'mla&!0NBN99A*r#3M(&0$2u531OrL)p2QVM$5e0oW[Kd
%=nQE!IU_hX4uE/=8-!\fO2rE#S1KIS8LI>bO;L;R/!>\Fjs`E)q*ZUOOlPL^OnZNPq@S9KM`(!ZZ7OF-E]#5ZIMS0+m'M,5,m6SH
%?Ji%.;rJWhDV_0^p6p(RlPo;UUjAX]JHRW)S5*30B1gZZbEPU3bKd(.4F<f1"&i'R'Ygbo;.Z^u:dWX4#&@^7-sHA60d20fYd'&m
%?"drHO@7It)FUiEAGimZ]=4oR(WtDp[XuQKX\Sc*D$6LAE@Pn>LWGL,%oKiQD^us@e&p.q-c+-;$XLk,7HDjb[Cn,6hTXfQQa"r^
%PCD7*e$9Qtigj+.cim:(<k$O%lNe+Ub"lSA:,qbQhJ%8m:=FAig"t3=UTtF^G!MKgYZV>A&q\B.=O>.c>;JLljE)Es7_s9S4E7f'
%R_4oB)8nF/6;@qDTQI"]lY;SP2%+.b/J#1\f[<r209(HBo+Yl:-)WL!:Qa-oh=_k#\gqUTbn,bO0)+MQ76j"S;j6T@0WIPr2.\pF
%$0'`PC(=9:bh9<?$!I[;/JP6E,7iQ$ehN73adgS4#$@h\SQa`4i%/jp\O'cNMs]ps'FWf%Z]i2PWLarc2EOq*!SHr&(oa')2G<Bn
%ZPf[=SqFk&3ncAu7jsk1IFds&CM,C9J:2Am1"dp:02DBmBQCQmN$b+mAEfq8+$iWVpHd?\`'2QE`Nr@S[`\=>f[f%G8Gbif:Y`Ok
%m8RuhJ"PT2U=dM6djWre@!ZHI%D7/Dh??hggBV0PDEBA]?JJire">Ch@7o*U,[M@,=,L_Zm;Of9^-+9$'A+oWgF]k/a7bbb&b;F;
%Frf6g[2hrLQYfN_ht5-&AUEH\CY93/rEk#Sh2X8FP.*MIp[.?kF5-S8c^>ZTSTn`tCi>rT.a0DVf#MqSRZ4UYN8BrT^.>SV[`?g4
%U[?e-7[1GKc.La!;DZG'6e0q/g[f/LhY,9a.;408B/+:JY?@1G.;\_@Z`!^q@T!0jhakRYCL]iZ0@D^p(=3EVO]E.5#,1t$Oj4\J
%_l?=-<Gl:eNo:[MFcfZU6R-kF:Is+JP[Pt^13U&P$=],3Ob=*Nh"3S^.$i+W$B??MI-1:I6gO4qMZ5,?UC8To9RS2VL3%gK9aM;%
%EuoZA6*8er`'[JQ0jm:-B?-nR;!i&gWX1m%2ikW,NpC]_NpDb\lmT]]8[L+fBIGVGL_Fi;XH?MOL[;$MK.+g3GW1c9E!4&GINoOH
%DXcihjX&#?I_32emHWiCX./"LDLT4/q<dH:TPqNTH/mdgG3Hu=edhW`0\]@:lhOf]rnFFN[o<0BVtT"CmD#4G?Zp2!7+^h9\ejG:
%(m>>8U8%M4-B^1ug5m#u6E+Q7o&@*O+"mLI#pNl2+j'(4ZoQ3/jc=Y'#$aL1p,\it7<VE_Dus`hXKV^#/doGWOA;(L-!unlHOg+r
%/=geCDCjc'm#;6R"3iVu9$I?l4U;E&?%+8]+i$PhCfSo%R24S#Ta:<V--%Q5UhpOr7Tuko(Moh8#3lJVl3N5!"G"EYRLVcTklclC
%`8!Os"LN&VAJr<;.@26G&o!7m(M-RgpqCQoBn)?iU[>Y<d3;1_;/5mWjho#nd5uNOc;9<qZg@!c,8\Q),Sg`%YL5&#aj,I5,-I44
%2+[U9LpG-#6@,Z:&Z"h4#!llGK%_ufFL8=#&e9Ij9,#1O:B:h`nbBY@!$Eaj-56t7Dlueh"X]T>&-tL@V]e<!k1iQGK;\pL0U\84
%C4+/IA$e*HJWY*IQ?cVg<RcBt89J0g:dnP197$DhOm[3TdaD"j_^\T=cRO@?M<*&`-%8k9<=_-;&iu?t7W&VYN9nuD1FZ;G63:`M
%(s<CS*RUMA;RT<,-XL?2`?YMA/*WcX,t8]VjHl#%^PPRo:PcB>ROceC.?pA'DB<fDUaE*8fKq(3XEX)o8dk^DK;PBaQ2/@F]uW`4
%&gs\&hs/]bl=:S1$cEtEKok2cc56T+X0jI=+qg5&+VYM#12!L<Y^2/s"=N5kP/nIq?)#IP3<B*nC##-E_1u&/.<MNm,cHJf.fuCB
%N:Y&>##C3M6$!W,YlMU.;ic__+:1I&FlmuPNU-lY&Wtk%O@2"@!S?5V,"7H7Q`l_BbFapP!QgVZcraA`o+*:*07d)FG0h#P"echO
%6&lY:W$?#@o..P(pFX@`^FT2*lPuK9?#-L4;+P*KJP`a:5=C$)Ul?5mUu^O&"m!g(`8gFpQ1H\_aGR@XJYb)'9#iuoRdnA_8Z0-1
%;0jQ!0S675L6ih2JRn;<E%PR^CYb?X+oktOMTI;`9"O1cC$or]p$MssleSsU(;5XCZdhG)"H-VqA.t;U/ju)n\ls?lG0Tl`9,aGL
%6,YGShDe+!edi.fUJIdT5Q\F^<"2#!U<6R_&IEM<XgJ_sX1`P+iQqF"*Jae!G2o\PHduhQl?%U<pXr`:*oPQ41c(<S;o!rci&Fh]
%;4cc@K'?+CgBtMmO7rGSc?NL!3c?N.#a1Hi>>NQ`,363]*$K\%>8[t^i6hK5Y(<78S*c-TO$i/YpBF6N7G/$pD&*4%rOO(\&:=\d
%I2fpI]si4[:>X(@#bYLNoYpre9(f!h8HF]_U(5pfTjitMOg:#$K-R,7Pj(blCV7ou:cW*SD:CkeN6ZqT;G+S=>,Xg-7oH\7a:lpt
%\(fhgi:DU\nB<1eL*6G:$u[bm"0k@d?.lWqbdK_j>4shPOU@EDC!Ra)$f)8teI/>Gd+/]!Aelf6M[b)^aMtZ(:+UG;XdSR:34821
%&G-Ch`[Z`IotLc2TI.Ti,b0LA:ZLAPj0RCMrfj<iWQ!MCT/'gq%d\GaChGNb[jhDOs/*paX.5.)S-mbRn!OYe,d6OUGg!#OlX#[H
%*()U0X@PJ?cG:Uf\eoZuQ2U8>^sAP99\*d0>*PaXA1]F9;tDsaX^o207B<J9Ebu;i""%"To#`.cf2X2U.@#TbCA"]S,1Tc9?:./O
%'Vjp$-<DKQ@h'7r<d/N_L5[*oVA920ba49SeL.oQZOE1C/4"D><D5WBPXAYdPDcu-_k-N^q3O[5X*M,38QFB%DA2(XSoQhW>6tm(
%@s2&dT_5M!GK2-SQBle4X`BI+K.HbGNc#>]nlYWRo(>fKO7B)=hYEP-gK_kPT2Zsm]:m4Za=*\S7La%RV2.S^B?mCu,jQ0`7:gr%
%[K2JQ]a6t`0gkCteC4IjeSVcU_B08+[SUc1<-"HeFGj)MSJC56/o_VhD(<q]77_#@aZ1".)Bjo\BZa<X4esq#N,M*r2?/ut0s*(,
%?56UhqA`p?V'7c&$./`YZQ"`o74s<pMDI%t)khAo<lVR7A!(0m5ahJmU8;Y7&A@0u:fP>6A(1m!UGEjXOl7j.7FYHcX$f0NUYRf(
%`kCh<NrY1o4XW5[UH\Bj_mE@_k(asO2V7:$F0O8V3dVe34L?KZc:u?\gA,L0^)b)!LtH/'O<m!<D5";"T1Pn#&.])UF6"*Z4_sKY
%?q8XTiRlQ.(76+\D%YJNpfOV@>.-k:#O9"nmGNDk#Wn\t?"0`,X`<^7J#F^b$7O%XbZkBWe!Z-Q:l4=l@,37ZHuUa;Ji1$WTnptl
%@1(ao,[7==/*0V-l>a(76<l9m,;I6`Z/_4(B5^N,"kjpJFr0tFDYo]89AIf?gGcU.b&=N0SY\EQF*d)"]q&YN?[#7%2#s/I9rnK\
%O`T*,F5<hGi>d5[RlF3:1Lclt:otc$=B(c'4!:*]j;aG"A3"S*RUXS0l"i9@+'%@HGu=HV:>N%t<cidn2(G0k<\;WFGP7MaH_Zab
%<K,9c_`3Q!!hHHLo1!>gZWRQ)G1"[IA=@1:M71ESkjEFVEesgQMMZ.$:Jfo.&P?WW-uV_3G9HC,nss5?jI9R(=^2\^$+Prj`Eh=h
%'e1WtSr_dgL1N3R4(5I+STQ?l_Gc$g">,d218%fn\2lN.Bm:+uXg>WBPrYJ;r)S*3nb@c1E%:$,^#AK;,UD\&0kD=NBdmEG^&o*1
%/I1?T'g12Q?!1sda@\:u:NH!n6Jl*Gp[kpVQJ_+4I_0+cm>g;;4-ndl=?a<+H"3&rZKj^R`-0s$Lc'@]?4PePhbN1GS]$">M>q`3
%s6V*2l%LMT?_0R/Kt2VIk-tg<#$8-5X?u^V(Ijb)g_ck!`/OYP<sD>/'O1a)q(dQ'&O+_V9%sO9+%/O2_B+"?>Ze$J>0AF9(u^<(
%[2M9?eo:+O8#LUR_N19NFd:)cI.Cd/HO`9mot?#n!c><0!=YgPGK[F]T@Tj$$#8hIT"&&DSI'1YJj@7*<EBf_-o$o!%nIo=b)$HQ
%Zo)dD5Xdh0\i8UZjl&3T@UbFL,Qe%>Oc78Bp&`!7l^HK>.,2ta-G%J+3?Z(Y(5N$!l*l@`:i6m1$rFE^Z+b`Zm[B""U,=9CD(EiW
%`4J5F$%8A$8HKV$1&cbQdA-?61Q/<^Y.[^932Ha0R0FgS_l-6A=A&a]M#&"baV7%Bp1E@e:%VXb$o."gj&D1sYU+7/-Q3rW.19i8
%SqW>a&s1*SX6aF+NKpHcH<C:T9*N[MNrXWu\Jf@_'D[kFaGp=d8s2s5m8dQV>Ic6cBgWc'9TW*UB4Uj8mKP&uECV9&fiOScrO(K>
%Rg8.]47+C\NUmpEaj7[$nK]_tl/p(#7O]Am<W)q2ZOcI4fE]n,a/]`h/M"MVmnO_*Zd;ci7#f#h4$\F.ae@2l^X"#p=:nFcR5*qn
%\b=%7_"7g?<i7Ncb&;pP3<P8'5EoAPqN/3.1gL6QMb+*\cP:0heSdc3Xb7oR0,9EIg(I6F]GfF3Uajla3Y_`e>%huIIsFfk;lJV0
%Nk;Be!!RX5KC^]'2u:TT2*p?HoH:.RL[Afq!$HP?"`P`\GjW;7^Z,JdHYeh::?>ICnl?@&RHJq]h@'nrSI+P,*(C@id5XG`*AZ;*
%@Th*0GmHoSEs39RNdo,A3C/5Jkn*\?d]WTLm(H,sAP7%a2E0Ro:_NpFiRcl\SLKPsie5)Z%*0!Q)'N7Q1'&2&aK:$n^%Y_#Ocegu
%fA5Si\m6"g&'0(_St4aV)6kqPJg#a*n!^Ii]<lHGr)'T2A(^2780>7"?JLVZ&k?lP0tVd7E2>_G0mI!'MIVa;$2m")c!n?P.;O;n
%X])8i%3dNNRp')"?jKgt<m!!llIDM-<&+-.^%.%Pke00<HLAb+9N2)$fS\"6&j:&6OP<kYPpgIAI#DE]5@Q\`O:pZ`*s&?d&N4N]
%]G@p.FuZ/*XD\XPr/p4B/hC+p]Ic(1!_?h[R,e:DXp%*Z!S&PY-H`,);;UE"/BlY1Mg;j)D"87$S[9kXo5]aILh!(rQHA2GTJB6c
%;Rut91N+?;d.:5=[IXIHY_.L^$BX,r3_pitLgGk`XT%"m%^O<4eae"F!EEpcN^c@aIOK,pYlZRNX`2]d8JVOZ4-HSX$5[+U2]t3S
%p'EAmW@=bIUAL6f$A7p(>O+#_K(Y#WTaD&SFO?mY94=%'>RB[(9`fU;AU4l[/?U(l*RX(am7E;3FeYe4l<?)]>k+Lg-FOBpOeBG9
%-k_ZDC*%5iV-4p?5pFu=9@Fc0WmE]d;Eh4_do$@GE@)VbW2f3>lk\&afiqb)Wqc]/B8W?*'9o7l2/+8fFDGXG!m,7G/T9+(Pl4GO
%pK3l!q4ZAV%)g_reI_VN[RKPa)Bmg;)\oZS1-IO=dr&4[+A^t$N(0/U^d;DN[d/TtDU7^;=[YNYh(K^h$,FGIX-JBjT]6YL+fqUg
%qMo]"QeoRu0%kW\5`tGRc=80\[Gg`eA4qB>EGPFQp#_OVrW.&KEnd/?BL$9;n*P?1s/dg+[N/#&>3inTif!u)=*-%u!3L$s+>33g
%&al2)YlZWB0'c#\%j9ta9M,>#:8++9"3L^_bIgM[Gm;q-KUE)<;p%pe)RdHb/Ki0Ql4TN"9&6?>Y!QS.\:=gKd`?_I>hY$]M"U,?
%,6L0C<gQ0L%MfhHiq^J-Vq(KdWO7akjj]L3/FuUIh=ji$dt/Lg:-CTYJ^smWf+69Qqs7Y,=c:4Kl(/5tZ(/p$KcKcL)pg138iYf2
%2$=^pog!U"TXV'ND&/+^#mlf1.\^*WfVs&Qi]7@l<:u$@WQ5UTP$OnmEE2g4f6u;?fgMYK%>im@eZq%]%)LG\&$BmQ]Y@QU[U+\a
%jYkZ]2i^kdCC/Va=9Z6Nf*2QO`n@ahVI)0Kb10.FeAW:\-'Z*^;sg]h!ifbsD_G62i#o==X.oLn)JqkoR8?t^f%"K/6RrbFS'Y\i
%].H07<3I)a55`]*rD8s9"D>,S4G<F-Kb6@SQH7``1KhT!QsgX4cO?IfPg*)5dp_rLQo$V3cIk&_/Z]#[j2+tSHgb'8Af(<tgX`.'
%cu!C7V7c1m?h<#eoprA4gUMsG*UJ,i>Ka`*[oj`\m^BlYO)H9!-,I%OUWD(W^WVp;%CcO]$6`"kTc-N4,&Iu+0).>E&I%6-3)#EO
%)T8K>k"DFNhSb;pmnLR,Pi"St4:X9Cj6+FZIJe2,H70h$:*S@o[>?4pco**`:VKP/q%:.D/jDlc',D)5c'\=C]QlA!^,H'/chYi8
%R6KPFT'HfSoo$u3Ad;$:M%l\!.ZnN%.SV07<VM@"V.rP`j4pZa-:;)%MNk)TAs$<R.U;%B<S*.&X_NNOdbU@%jF1+J$j<j#TeBO>
%YJH\<@S!(*TEktZ2aP&slD#O>3Bll2J)6ooMU3*!GC"dE_h;nB6Php.=U:LE.8l<9s4&),:8NW9+Uf?N3\ef4%Z%p:,>kVoXLWME
%-DgTbciaKf'o;30okI6Y'W^5"-k!a4],_VBdpmI"3#lWs_p>?Q#1\4CkQ#%E&D]]:K_@rG+#Z+e]$p\9[p*9I[(1?Ba@d#19/QGu
%=q[rKl2!Fa]<I+TO<=t:\0:9D0@n%qpBr,<H%Y^6KCaA@o6Gu[H%Y^6KCccoE7?d/&*V'KYQOa>'t-*eDOE^QmIa8%rR5*Q[+@P0
%ocISFs1nDL,rL%^5-s=aKjC!,=Ui$V1%0YB]b&Q([gB#i2-c<FkUo87!8tJJ(Cu4[eT/j)nCD>;5n._]Dt<9b1EKrCim=%hI#IZ(
%HWc"+icRqWHEA-2)?ZrWqKn8/dPu`A;(-^)M=s$)&b$2k.AE[C?Agb!ek;7=qS6:Yr)r1D1`j<IX-ZhD?%Ef?U1jVWn>M/<fQEGH
%nr#b2<jbRkr$[E!"]Ufp:n3=]&TL9K]ZGoVMRbDOeZ8L_1"QLkgP:bU2t`sui@S8*mLRUAO_QbO@MU["#V<-/@Tj+j&)92P+amBL
%L.>&&[h?mT7N%FilEsU20^@>%c8=O.66FW/eb'']'&ZNDhWgj9`!D&Y0n1K2G,T;O/_9D-Ls^_iX6c8bEg++4kldgkJku$Dm+Z;0
%"RD'<!j08k>hl:ZdGcjXI/+P%-Z!k$8kj9_N>I[-&Q99:Pr:4ac/i8uO][gMioJS>Clji,%RP/nA*8Dh&HMN.g>jMlQ*q34)kQ/5
%$pj5^4@oW!NtuWo=qZQ-i/h=tUPeID8DRnqo`LA?jic._#GuAj<e'S3ER>*?+_bVCEL%qX4+PbUo5e'3#QuVKS0+7*qC+)?DXi#p
%!`X+Np#Il6AsmYTa=eeFQ=e5?Z?RoO$RUJRZ:()c>.m1uh$0[#_AK5J1d[Y$$\;,de+7(<6P:UB_MAHHm!&29($&DXQ]>!!%VPWc
%='8_gnt<@?18Y<Eglc(PJQe-mT%+=/N5HdWA.r?"'HPRp6,Qb[11b^G1RilpRouLX""I<Z?=jaa+LVN\Lf?OFoMGY9/dIsN=X2@l
%*dD.E(o3d)h(.H>lF.F!]9;O,==Z9Vh7:1@9d6XY/i3dMJ*LdTb^b%6DFj]Jp;f+t\;qfI[uC%2kG"Bt]P"=77hV_CA5d+4c-K\u
%e]n>*-e3fP*t-3m%IJjNlj^m>T#LD>>fOb%K!4oXEKBjk^gf,MD==&JaaBRhUZ-YS;K!hu&iVDlI]lgr2_>'rXbZsB.c#`Y5`+li
%.9'C7+aL41jIM4-/)(['U5U[d"3KUEN#+MEUL8`jRnXr&J3o++$kb9&%<gFpj7;uV/?4X:DAZGA$G(Js4B>-<#,p3UDr6^rQ1"6B
%Ko5*",GYi/0/],XSPt'-UfFeN%$3F[Ki=%uWMhe"4S!\WPBr%JF3sI4V_-7J%X`RN".;L$prSLjN3o1:GkRnkTF:6n$1VOE"8aAI
%APas\XgfI@%RO[ZoHPh87!-__7KZW_HrGH$Y\VN\;ih!YX('GOJ1>K8)Aa7lEE4s)%$653g?KX1#mh#YC7\619-G`Xh[(;AUMq5J
%2,L<=r1U+"I&;TYe[]d;WU,:k(,L*!m#Qhf18U<>,-5b1NescSZDu=I<^W'LfnKak!LZu;U/^#[EN8*?HFGaC)lR@9m"Xs#fO)$Q
%N7p!R!d=`dkctV6*+N4h>^f,>F+FRW9c,RT0YCL=9(hDdnpP!)'VN#f,GosQJMMP\C2(DPJ>=\u?Zk2`;nAFbeN$VE#g7Hj=;GOs
%QW90[r(d")%E[q\]m9*4Z&`=_a#XT$,F_Bc?Gsb&V3Fdh(Z$+r2>Q[fh)uonZk=)SZb$Jsl_r!b7f?:tb3UmW61Wf-90*%sTdI\Q
%]5U\?L1cEMlPNBjoD*G=N8j2kN0.0JMT:*$PI?tb[/,^_Gq.dO,"a.?RHl:QS'#r"D:2VL5p0u(3*N(<r5?A]MdB\26],h"If,k\
%abU$`Vnf!58WHgj;C6`ON]k%7b^J0LVro;bH?;1@j:DL0?X`p"_\RG%;"jh07(1s8`#I\%LAPLq1EQ+7BkVmJCBO4_m.*No);t$E
%qM`Q#gbuLp\%!1TFR&g)o6U58F6bZm+1dC[FPV_$Q:^@DG)pb<gnH!HCCa,aZ5#"IR$9$9E2o13<,u;BIA;#P-r-B0mFBamh#?T>
%;u2$A6YusZ4M.J2lFVa]GAs^=d[@KHAJH"nZhoNPe)G*oFjW-Jn\oo_=]%Hh!h$("[5l%o]F[e@eSRRbc)?sJA42Zn.u,4HQG8?!
%F5X"Kbm&*YgD7C7DM5sR]!:6^iYKc[2`H/F!HoDrc\,M#HbS:r3[WEOZb6@oIbW&a%D?73\OF$[S_K-NEOp^HXC<tRpL8>^F`.RF
%CZF8ko@N`h[ZPtcDIY_F=Z<p?CN%DO"i*%TUSQPN^5J6##e8Z0jrheo-Q$*KD&1!bh52]s=PUR/A.Fn(-*SIDA2d3qV=E\H>\lLd
%ij*ur1[u%//<6><S*TT#AWoINnCd/jT2M.gZEl*D;;ok0XHafdJ_RITFE:jKW!u^o*m&t/ZZA2>DrH3W%%V/8S&]Su@2")UYmARH
%Bcqsk1d*,rNBs0CN2.mdJ[[K/-kMn7Ns\:Rl<Afk25Mk.W^2!dm&OiGS"NbU0_2_X@gmagC6jtq(A78&=8m@>dm:@n,"E3(>Om2@
%en8ajq;MS'E/jW6Fl!92J,@64UhnK1T)Weea`1^,mVqi!;O$a*;RR6U8U(6.8ZtZA,V940aZ6q(IPt<=%)#r7l>n&@,Ss#A>=bj(
%lqGkh?ioF98"[3mJa9gh"(AP^TT:-fg,G`t%KmdQ5c(qL<64NRc!j&:6]-u2Pu?GXSRGrPbjG5R-L27PY7mTLZB"1LBTf`Z!j1Y?
%MX\M7^@\\?$kKm%0:'T3pC'gkH%GR4Jb+/<o6GoYH%GR4Jb.\ME5'Jm:T*jF?eQt-B2II1OZ*sPnS,L_)Xa5PqkrEPBt/Xo_u5W$
%Yl!gml_&g,6%;lShbsq?TXE7\([.tbI%`k[n%b&!*![?=s3A+ZJ1c\q8$pnZWFHO_!i0sWV@=eJ,i8/T`VOusI>J-(>D2aW7L10"
%1U1Xc@LL0c,RHLNH\rg64k[;2f+Wj$61\UMmhg)55GEAd\E(KURsg-/,+s$'B,0)`oicF6s(Y%8Beeq0G";h14AGq)Sg2aXXK`G>
%laO!S>I[d9$MIA?<$i]rUQ2sE1_'bc4oh#"B1B<SbCcuU2'ArNNp"o@7b5H?_QB"X-9Kt[(f++g..@4Z9GeuP=3aQ2dX+"Fn@O#l
%(I9ij(Y4JJfRtjo`,)\@d-j>rs6@'%k=]nJ?$'5d6Ze!_0!^okQ7="<_.o2"i2Z!;K(>#;dG_j`Ik]^TrEo'ZQ]KLIMbtV.-MS?t
%4<&qi.ocKTj%SC[,Wh=#I@isTFfu8RO<4C;"18Qc%(t!j`&P%"2H_RAr"/ThJF5"*`PFm:ilH7uC8XhO9O<MLliNlY1_Il"E[Adk
%:8h-3#3QNe&:itu(Na1a.NQ$GPN:1jJKbQ&M=f875GO9'&UCP+2#o6:96BFeqNQL>^>"gR.O_b^(#?f1*kdGt1SBkAC"D2+K-s:=
%VE^hN7:Eg.rG6N4E+73X^/oTD_?LhJ6,.33K*_-^?.;TU9Bsb<j0nS,EFeas0!/oPF<&Ad#9Xit4::(n;0,V@4=",>BD%LjNlBo3
%AJgR7Oo#j@@A5%C.UPs95THZSjEH79KmcZa+[0#m1o%[4g=$bC+EC.b(h#VGkZ))"o9d8ae(jMWp>W&C2H5F@8Mjb)$KnI(r+1ZU
%gG.u>qVeH"*Q</nr`JWkQW1.Vg39`"=\ml\XBk/DmVNb71(F[u=-"ECc3&S:@uLu*f8ObO4/h4"?UJ._lF^/gf:en<_ZI?%%jOQ!
%AMV1LITfM@!E6.Bh;L&%j&hlH@5;nM?H1I2)=@*GT,b4._QJE1s!gg6kEaniNLk#CfKQDX>O`KI^)6U9`L1gam1h[_!^NmP-UE<Y
%kXpUqJL-EgWIkjX\e)j0rTVj-3<nB"QD1Tf0]_N*:kWes3^e50DUcChLuhReR\++FhNqst-FE:M[14^IU7KV1PLXG]^e1iri`X*b
%7jB''$\CP)oAEc-kq8]Nn0b!Pkh=^DkJ=`C_BHCMi$7E0)WHOQ*+pUn(sV6](%6t5aRKta4(:\3nY:CVFj)kkFEYJ1E1[%'ZH-d7
%JhRA&j`Dm`XHZN&>iS(^S()1f#o[';Bf)^%i6cY<;:!)=l>.Au-prorW61=PKYU5`QBGr`GeW":6O*_#%!#or'tj<&[(=5o7(#M3
%r>$'=eh<qa#dj*STdu?%[S^s`N>"2=XlH+DU*m81>_bat.o1??F>532H<,mu^3ln@/\:PJnuXCHB\7td@]>1XAo#P<B_m$'c?/nZ
%Dc$F#"3jFDh(W%WoN.$4Y;0-:0Ng.?`8N50&1*>mIc#O5CdRP'*:A>sg;"$h)X!I2l0?i,>mR**EHr+]$eSV7_-pUM9!*DhAHCfF
%HO"p)X->GaO/mP*Bp7s.?1oZX\SK(E@-5mD_^5G+Y(U<;Cgbq;2ke)/#qE[3*\r(4K8F9DZGXNFfA=4E0n:b^CPU%?j>'GmS0/*'
%@<-^Q+'^S^;beL8BGoZ9'kk*U8LgV`+sJ.?^BoM^2SkQJ4>&j<Z]fMk7E,BplJ<YAnR8o7kX'WH6CIF<&FI-taj&*2D/TNGV;LQH
%_2PI$:-:[;L-CV-B+GZNC1$]Q`<PW'VC1%+OX:?(hU(17HK<2q3)"Mao+M<U?AF;g(.Mdk'>dOUfT"P-IVRp*D,>fS_gP5;s0TVn
%fdSI@ckV:i\-Y3MAl)Ku6?S=iEj^l[5sl6roMB+DIsALRUH/oZg5B^-CI[Li./0B$NLf5[kZX8Y<])Xdp^0$[DLd$_VJ<,gLIsrF
%@LaG";:55F?Y&T:?<l"p]i)!%TR76/4W1WV_;VQrC"(IFl&sr'apYhG_L1[hJ9!HR>'4M/?n[/0c-$I8Vlc+$Uu/3?*e1+,IOn5F
%JQSrl%(gY"<pW#[rGhJ[%@'()DU%st\^bb[YZjU]'5g,'l#K_gQrgc=p&ZqcD6FR2n;cVkQJc(nDD1G.l%\<)N84QkleTe7]d_a*
%NLRtjhS%%d2VqZcNTalu]!]41\!c<(s-r,!a9f?F[m4pS@#H$Q$kDflj;i6)@no7)BkK9A+VgQnf](@OO"Fn5*Jr3hdjQiW2qd3-
%IBt^!'\N&;*uCF-nM=a?6/h$I]#YA[9e#le[^i;\ghi4scc&Uiq<>FMYB\9/Em2ki9qhB^]t(Rr\o1?h["(m+\Z2kO^8Osi'BlI:
%V@-Zqft:eDA2aI$)NSs(Xqbe+1TF6?oQ363;kpLTD%8G'D1QL\r@UpPV?Ll&2JA#<iAI_md(lN*^1YH>QKR:O?:lc:G=[G"Mr0cd
%abDS4'*VPmWgV_@QOkegRK=N3WGL]C%7:Br^*^s=Ul/\DD_Vd$%6N"$"R$tsj`D@bCFA@-_E4l98i#.;8*M4]0c6o_Na[R',h%Y.
%hM+_Kdge7T(a</A$Pf.O0@>p)dH2D57Rugj.2n!"P*e@OX=b++H8sTN6@HJ!$+$>?XM9+B[*<bf82+Tl9FqlMeZ!`fd-_"t$1^08
%JED2O9Hb"M3*6H#I<i(UhR6@RKLY`r!UDqQD*G.?5-JfeYAHJ,D*G.?Iab^L=8DRSG^fS64.cI'WnZ"dX+bGds(StBnnGR_g?kMU
%qkr9L4m_kYEU(8*Lq6e:JNk.cD>:Q",aK8ghhtrg8T%`tFpX(>713l]j)WZm`!tY_,5S!H)Mf'B"h\b;01J_H8;"tO:h)&NE,5f6
%2/IluA$%].aI$>2`S.tZ3!l)Wmf]<+_=cZn-"-oJgKX@i8th!WRtjC1LLC,F@PH+t+),#pa^R*`-pq+B%O(B^V#QUDcnN#(+d[?J
%D644eg5lh\b-uS/8K\U>kXB:`X0K=HMb`7/Pc$[!7J\^r&1h<m-!huB2a*:+Icq=(YfFq?`*el?pC]ne)glB)M!BZ=&']-h4N7)]
%66p40ih))E(E,]J6,$O)ZgbcEZ%a8M[IS4>Fh*2/<#C9)&B@ecV%]r'&BKCiRB6PH10#5:.B;k*TL)=fE@]i/Xbk(\]2kkRge^EJ
%I!H:?S_j,Q8E]^78%'M:7S9@FN*:c^fCjWIkFsihC6V=Y,X>83aM-5Qm=]^g_oFqm.tmd2IT[hX[4RB?X0re5\D$Q!9qU.kX>t]Z
%[OOqCfm9j+rY<#(UIe#:j#5GI[+6[gDd/LU*Y=sT&7T_kf$NbbI,q3_[S+UHc\"dCTIDu:Rg*\?EH2fLMF8$,2D=G;>a#hM#_-<<
%G\p8]8S;G*A5%l9rT'G'3araS2"<<B^"<k%'W:]T-uKkNd3NPBZmM!LBe#\$$`](D*p&Egkt/fh]*/LYC;Bnu]3pT@jJ65K(]?7W
%U$PL?X:%p_C]d(Zjp;3iP&(u08-u(P22Gl1gSj[WotaSc#Y8R:aBl,In]6N"\h<s?CAL:e)Zmq_)L%fkEFF5!_m!32-cLcH(ko8e
%J:j3B"rZ<_T7=mO#dH5-c0JZCQKC=e&+<=q4$%oup8^=M(2,^`"i5g\MIUiTaeim8nPgV-0Gt74(WnIDGb'!Qh"K]A>AhJ"\Fh5h
%@bN=9q@c43*D6a^ifFb[[0NgS>)QsC6MJ-UD%'Xj5]+AL`T&go^KTD/do5&@%0We7Jj'!+_o(J3CYXt0<7cHM[nuq)H#.FbU@Gf3
%J4@8mZb/PS_^(<L(22rTp*bC:&j=TnSAMaE]=:+9;lY[gMEMd]iY3!d,HM/*/R=ITgaHY8@6:g.N]^i-hK3+77bJ6o9%T+qGZ\M0
%V6ZWpYhlNfj,j?]Y@J<r4BPtt-EG]nTW.B8_bnBsE4Nmh%CEt<l078]=XpQ`IRF7#RsdLlnSRRrfnhdR*4I$7GUJ[*N!D=gL*s:s
%S4>d\V/*+6P7MF=V#gPCo/:7uXAqZOW?LJBY#/7dK.g<&9W>SM>NK'dqn\I5;gtV6+a&cnC/Qu=O,16a263N)$$mJ^R`CTn#:cF'
%@Ube_<:94AXUg$2W$4KYi^fZ9*#^0=Q%a$h.-b*k+OaE>k$/D8(;4Q_S>j7?P?FLMA?\Qq`2tK<P6+Rq*EQ#D<J=[@h`iqTI[B3.
%riS-t"hT2#4mZLbNNp*2`e`#'1+o-kc282DmtOk8a"[8[]*g0Z9p*Z?NS\E2%^XC5%4MnNe(^'SeBi,V*V:nfrPNC7=l/b(<J=dS
%Vj#V!(`m9VW*=$l''8>K2[]LA?H2WN-VGMQ$A[a?ie@f1M8BJ^#WFKMD'7YK4\J38YTGs'e'Mq^=$?e%"FLI=rpCo*Pb_8-E'puX
%K"1#Xk2kL#>QHlb-E6Y%c6'Wbl?EVKHcY;O`t:%j%2Z"qX0Ff?*cHl-lF/65_+Z3k;^uVbAX2I/QLV(!68$#E@5%GM8pSp5(#dJr
%hBGtj1]"'l)PEee'^BE(ge;8ncCc+kRZ/U5<bS+tYC6j6HR\LO_o9PNU>$2MghTI<r$V`L5>$uLDV&u6G&a8.8PR:\E.ms42V^L]
%JLk;s>p\^jUl?l7]dm6k2%3a_9\"?r.Y9aUU(!4K/,7r3HIQ_,g8]V*V$[cOM/!de8_'WnKL#tA'WsZ8n[lPN6bq6Hb*i6hfaNHJ
%LXQ*\eC?^TS6ROt6_ToPNnP_NQF\T<fp[jN+$gWQDeG%j.k]-,A[9#l!S+.@PH)F3bOb(n.hhIm@F_=Xc9AsY`>cnHHX9_!%5L7B
%2#7);fCsK'Af&BXh0dk7F!G1=_6&ipYAUf86#kZ!8'YtE@t`Z?g/HrWeXeJ(]oJM',Af(72s'a"ELSU6-o2<\h/3&:=6DIuj"fI,
%WNZ&5\,)uS#&`3ZgCj3s[d@Y`N8(Rs]67E:^:UkFmP8/hoMJ_,bMT/=jp,/bCa(#0.5DA[6q*P]?G^:1-8;05FJ=CS1s>?P$uo.V
%8Wt9[2n@qBgDLipn!g;5#Jm9Zr5@7+O.Rql+c6NOVNUkQg4YZ^B:G<H#N)D_r.NinQ_1%B&W6n^VU#*Mh?9=?hj]CZ#Q6"9>U.n.
%T'HiTs,.6(-44#lflWtS/":aAHB%N[Y5`;Ne$YuGFp;MmPG54%D<fVNZd#aE*H%(GY3^#JelBT3m7,pZ3FLGn2c8q1k^3=,CN-U!
%lDPk;5h(6](+<mdZI%RJP/2@VN=\C'Db]UpX.,*j<JOVc0kB[9@k<amLpB3AQS_#tT8s"HE[E+Zq3,VbSr#>VcsAjKVg>T*omN/'
%-\\#FamO):*gh6hhj#$EIOXra9nCuna/RHV5eO;S0n@DjC%$V3?K3Fk"Q[YtV2j[IMDjTahJfJi3B)%pXLWLF>])A5?6aR(#Y%lc
%aU6Fbn@61$+*PRQ+aN.f_<g-Gm/&+!p?Z)ZS)`(JhWfLFl?qIRI,=.9hWfLFl?q2f*ApjC_trmVm'-J.rTtSI1Y$?p57RB`"9-KA
%!WV91JH,1S^jeQNr[E6Ns71A`p"062pODcFDnl=-s8%fVl+d23?iDpe^CWWAlhX[irp#"5rI=^"J,Cs,ro2i7gV82aqsWGArI=eE
%J&6.(eX-:N^\g%c5OY?)I4$C+>Z4<c\ZBaV'PgLWJLeM[WD=R]cbo8U>$KR)T#mKj2+s=S'B7!%?-k'IO7H!(36]u>2h][HHKfpK
%D_")maYSSM:u3Q^K]Ja>,H8JG]D'E7000HXQBk_UR+K\h%=VW\KHQ<%&EdfAXY:GTXfFR>l&>]N$QRHYH>k//W(PQ]4^o5r+c%I^
%b^nW*mfkf1,tlT`M;6@3SE6?XVIrSgUc&G1Ttl#An3bu:?3ZB=JlA8^'3a5:LiP6LC;Iu&H0YI8bBk2$9PF&0\Mu?+R??oDNU546
%>;RSoJaJs[^JY>S`(R5K<T6708E\9tb"E7r%2J6c,msRN+!P5]*Ck)T<*AC*]h&"ERGU4s`8rme2f=Emhn-W?)[`)mT>j@QXrbS[
%d7Un.4lF]KO@)3*9@nB9kPTmS8F-%ZUGA+oEZcVbaKe)F&("Ap9^KT'Up_1u6M"X0;dZpdm24A_YO)=D9b:.U/[,qY[+b3f/CDZu
%9Xac28o$8rC##Wr\cNRNhpb'_,pnPjGCMsoD8lg')%iMa9Fb$t:1M)m&S2WW]?9?9-H*VjCIG3WH)HX9Oq"Qp^.2/l4r7>^4c0m[
%Ei?LI"*]95KaqPQT3@'?rQsD7c8#JhSZ54iAG@>KO@83ngf8&1SrT[[1Fg4?lOrko6"Y04jjml4;%i6n702-3Se`t0%u;hNDt:$(
%+OiC%cs3"!$^MuNWdE.db2CPL]ua.dQ\XUVEfD^`*eAiN'#=]!X5O@PD%&"YY8eU8[_W^0&H#V+d#AOT.)S=?/i5!bp^7=;6!<0g
%HU)MT8TUTdh*8PrF4]:a]F!T#YL;AVDcfsSBGFMuaG5;7/VTFI2A"T.bS=3.7[[8^aT'*dM`C&7<t.R@L=j?q8I4;d?2Ct3N+IO>
%]\tojjSg<?U`$8eMo4#L3V$+^,HHe;IYaDR_6RrDJYmL=pX_6=$%3f6L@672(e"UrB-n$G%^4_mS.iOE8_dcpo'fOg*g7!_2!#TV
%_AN-haHqk>Lau?ILs(_FZ?cmO;,OTJp6t*VH1>IY`5cuh.fJ!$E$r/Ar#K#_/kS.]:]Unbmm(HBi`/ifIQ?<,9Z]%of^\7Zct0)K
%E.HN(WMG=eH&)[V)&6s\S"PA$9F=T-?3)o48(E[cLs*Y,ULT5+YHO24LZDn?%bD?>eU@=[l99@B:Yk]]Fk<gp:f^Hlp_;8NUA?5P
%eUMKW6K23qZ$l-*H\lG'\5?Wd=$rtSORN>$i$eu?B^3;7IAcEI)'('=-q/u7.UQ2XS6J$36CL7-hF.S\=V\Cldo?tN"L%f=ZFReO
%($`mdbQR%*ohq`fPe_-U2s3t9+ub53iai1+9)!F\j]j:fpm@8;?C]T0-(P;aVM&F!psrQ^Q%uk7$P".kJOt_dc<W-3TFT/n?fc0O
%C6eEHJen>Zo/E>"4r'b\=ULoRk]a@0FTi%$LJSW*M;&rqTNrY_$3Va*YOZNNg5-3B7t@Brolmb&m]0E;mEZ)S]%kY4?8unkE4`q.
%MTEGc;sp_aJYYafGk+"?G+(1LPaW%?V;RoFIS*`RXnXC:U\qa(=_E8NPdRt,],m'2>q*iUbdk`6+1aWd(4qOqZ?6TM=WhS*F(rDD
%"&@o_?`l'^nN['"s&0Hpg\'ZXq`[U]DO'92.(JL#cFYgFju&+51lL.>ES3"Vo!>Qd`$tkXE5RRVH[7M9<QO7,EK]C[e,Z,9X$p)-
%Imm=j/EU.Q"0jPK$,4B:A)$DFR6Rf[f.!'iSLkH6lRqS)qPhb^6_LR?/RC37?)"p)CUK)GJg^<&6/^!l=/>,0:1o_#V)*A*&*Q4>
%RWau5-@j%905ASn\+_r5;-BrW&ZPR\pCJD[o.eF^Z]HAgk/(WtD_b#\Sf@dm`(j<')%RJI^g+%;2O0(t&njR4e=FS$D^(_;V0AeU
%b"12Bf@%!R.r7I:Jgjt<-&[eojE0<0.AFX10`+&=o]ot;X^FCKk]AE63]'"?\uE\P03<-k,S;b(,>@#X.7ri2cu9W$+>2-X&YE2:
%!(ODZ^?$OsIMdWn"bgk@G>\T9Vj@R2^!o<(ncf\C^/r@6"93h)5"JN.ArtcU/pV1#:!c"'7&a`Q;?@tQ!<[H.W8(3ME=AF1FdCgm
%VAc>;MAe6S(#k:0/"p#7?5S<p5t,0_X:4Hf9JWA0bIrQBPp\WB=5)b+oMqrd]]1?r13c2#_BfhuXE[.`/fliqprHGR'UsI9j`nPZ
%b7a#>f**WrQ/Q?'^<C^L]uQn)\q9!=]:joT1dDaLKW]e"H5p_"ng"Q1deF\FjM$auP8<&?l&lF'77B*";"J8[63#4[[<+[&0UQ39
%&4k/fU7HBENeM'ZAM#C-GjE>'N8Yb_4?7qg$c<E*i<`)VG-!-@ARHa6@$]LPYGpZ&f<^Y)35o^:<V2D+aoWI_<QU9S:4ZQ[4KIDL
%@bk%[aAX+5Gq>rH1:Y&!/,jltB"+2'b+U5L(%,m*(j3hd':i5gZ7o+]l0l,Ka\EW9g<_q;VX[]sg@#&_iA__I"fO3Fh&-1%Tq6Ga
%#OV;cQa#PEb;JZ<W+(8r$:qJPO`Ntt+e7#p.CVqf@'&`0AeJ16*#D!tir'.A)>Yi"7j`HI/q_^=RaTE81hP\95_5MlcG%ih.0A=.
%lDs/0!eEOHO"P+Q3kI36&"@79&ALd?d[[0j_JJ-;DdZA\N4TTY=iQ.LjE(t9(-*%@[A>#Yb5#m[,,T%*b7?6hkaAN=d+tsArRHj=
%/Rd*9o:3cBC:KF]q[J#)RF/4#/b3g;%qEeG/Xb3SMaA<,:bZg5W:S0'':DkQ:a<!jclpk">$Xo[rj4LGBLt+AS42t%[%#qU/Y`Q4
%=%K?L<-dg6kgo'![e?\<g.ddeMVt"'/u>^J<2Nr?c3)#'J<W?0pnq,q:690#e59]]0.$U:rC*#^2Z8flDY3"j9CARN4EdeA/aOO/
%/=.Ns,#um7V]qn>W[slh_Sbim)ODmWgRo?%Oio;R`pB3E#[H5S'UQ8t9BKPu<@'N>qO<("7*NP'mul5M7Q7T"2-CVaG,Gf#I.J$U
%3]id9OBNWf#k2)n$NtRg+pS5p/nOLQAs^!%M5nLal^7$_MrKA2j_P\d#VOJOhc'\o1nP4'IBWifgrTQ!98P^0/LkN-Hj*<qP@u:h
%DRM*IZ:I+=Y(E@ni=*M=r=hP9AO9?5nNM_5R8&Z7H0-MA`Qm6cR?EC^!Z,_.=]MVd3[.P"hCLkEC)<d`W4:bY@MIE?2(j%b763Q<
%Qnj<@dTli'\-\d_Cl^rc@$<FRW[0;1^f\F[l_j#lLNgef'W-GN:teF+8FdNC*QQORF(?`>$7MStj<!aTQ`q!aOk0T@hS%d>6Vrmp
%JKno"++qP;*Q=tjEc%*gV4fd-b#P,9\9)Vnq7uFnY?GjK-YcR!4Rk'kQX+d#e-/b@TAIJrfXGUV@#W,PQ'?RYr/dfESn4-[Xe*%.
%#oc0cRPIg&Wj&q(2SlS8^@un0FYBUPTaG+fHjQC,fRu63&UF1YRrHZ)TBlG/3"Mj;s63aMX?MjRG<")/$3U`a]0sVZ)@"Jc@k-P]
%bs48PU>u_=2$7<08g/]JWI*l6eq57MM(UWkdn0$M'1:80Vd[\o%WVnoCFeW[p#Q?j=Y;#`]'/$!9aRU4^.nGc+jW^7F)a4ZG.2#'
%?%&O.J@8*27cE\6Q#-(4FX'4n`Ng@HJ@-l!R.O[?mN^g+l!r>196A;g^5$/+3B,(Pi`UaZ$mn(?>?08%WD:G<mE5G8-]7\lW@P;*
%bipO!_%@MbHs2;3R\Vg[92f\KkA-3K]f!Fc_'XMU^Ad)AM;rAM#$?-0;2rR<Tj4&$-b(ej2MHFRj(m4sC-:.'"Xc9cCp^b&KCO,/
%afr52D1Y"6"T0j`maa]c]eVK]#]JiNFH%tVN6`oZZ*@Pa/k)9>K7!3S;)?o7!?ca:]0mgo:h:F)40WZ0QFZk.f$T1V&Y\jjm16_A
%Ph_b!Uf-+V&\YCfIk+2:mX6^O,\.5R_K(ZQ4=$mt4;D[,#t?'l)9C=15Fq%L4SE58@7oO/5'&`?e)>UZA6=-1<RW\BFDO0l3&<dJ
%+k0B>@ESC4hUM)<d:k+#bnTKda=W(F<-fam@+]rR*HW0l<K&UWWJ5?'HZU/&L2BpY&qHiXp[ieoGD56&lkuE?l%_^+#.h'l$u]8Z
%%M?1rV-4$l2Bkb-OXhJ_,oJ[e.4Zk&-19_rZ6gO2M%C6#*+UJWOUgD(Kec):EZ5q-<<gt'Ynmlc=.a7JI,Xr?qS>g6DWW>YL$2L\
%/"hj,.d""B+,Hi+RXXQZ$$KMgHND?J4IhN!I<$r/AsMNN_9HB8[@q,lE&\E-oP!,U&'i[89TN+=I.tb?)0LW(mLk/r#UZ'[8SuTN
%C<4+?m9m#7BeFdEQ?@bUn[A:i^IH]=AXb&Wd+kV/(WeKV,&&7c`f7`l'I,][@B*p=_'kuWG#GM%HR$rbXZPntH(W*$pJTQlnjK;+
%"YTU1rK73$!tU53(WgN)-%$uN\P?nV4!8/n$\ePteB#Jg*%Bc=<-=I2/g+&0C@2Dg$:nDAS<r@7$`.s9^E!aBUV*iC]au&A21r1c
%V;!1naE_8(VHW1Q0OqMJc`YaD#eJfThQAqINVe"o5;cmhr\peroJ[u9Ld,3Valhbd[F+6fZKCPfoR>9fBYcpO5Wd*(_0g57Q/hX4
%TT]AS@q=Mg&/om@[FKr'6;ZoU-CE.^JE0[gHl'Lk@W<;@2KU;Oq@(]UH<4/TkLhPk$jEjA3BXHZ=_UJ7IZ5qBoi%d_YkmJ8^j/2F
%H;u+s$\p2;-`m[9EFttkX6Po._<iKo.aZ]ffM'!`/%1g9HSV%61YT2$"3+Y`6+BY0GBccm-FPp><^p/Z5Y,%4SUMo(#N%J/'hXdY
%l;I%GZi.6^If*p/=/mU[PS(i7@a+Ae&n08Q=^YJIcJE$FEmb8lGrMEDlkG[LnMPM#Mh/$hno.?I_4t[)-V.8H6b_oB_OY*`0:<dC
%o$%DajD'GQaZ'eq+bt__o3ib\jn:=Y.?.(:#&s>@^!hWG,h6+8Hm/]ZXt_.B-W5=EqdEjknQ3`Y>+NZ$%'J9KGpM3+ob!L1U3UHD
%b+`FBEMq9F?0>;j?!33p@:H&ijU%K`7BPCKTnM0kqGcaImAFOcUZGpH;u@mCEQ[ql5U)OSK,L]k,?-d#,5m*LD<gT2d_Ho1g#t1h
%3V^jq=#!JGi6:OV))L6+!*r2I$%[cHjGGQF9mCh_Fc-Ws`Q*('fdu*aW#1qIE.SIdOGaAB2OQXgdq.S_UhtZ_"0*?5d;S(]7\oJ5
%gSDM"&=$Ts9f#sNZYmT6[-I^JB.T^aC!+U6[?=6dd:676US8/u\eOGKg^0Oa7-6#m&i>o<`6i7!#p0ku.s*t=VTaI2l+dS:$Kal1
%5j)N0I'Z&$[H*#5J.Y\GRSMFL+ea?n0U;IX&OY)?c:jBp*n?KEVk!Q@elZ)<VO:JX)eg_`WBXmLMu.3%r'<+-HbW1#iYRU<^En6h
%RmX7\^/XHuT'm=/pjG>3bj[<?UhnX7!eogP%tE^,Yb@5*-T8-4b[:G1>KOA"PWF)H1%u6>Hl>P98\nT[q3U?0oo7"Zgu93k@%11H
%6Yo;!\E`VAEq/9EI()6UX&Odn(Y<3r/RPL6kWmQCEM]Ob?.FDo]$/N!PjFX!,J5fkk;RF%KNbcj3M2r*g)G-KdL1h-mE&I#(`i./
%lfKEnc1e'VT8E-/"uM6=3p;7g4:ea-IUs8mK%[e2P4>G&,JJb:Qb&hI,dpN%KA+$nE;'?i4)e*LUs+e]e%NThV2Q]B`BRnBGC=IT
%Dsa7tpDmFl3fY#',/A;E;e\mZpj'rH="Y.cJkcuqY"hSf*6PT7nfTbGSdd8(JX/gM0t$QbRtcN%,VZ0WOj.F%,9K6G;]=]k9%,o"
%K^'uJ`'F#`T=QQ%]Hhud1<h;H^urSmHl-GDP\oS>rl<3]Gl3]7^5qN*&H:1iraWDNmr'\M4SasISrjp[So-5M#bi_p"0-PQ6lE5j
%+_\?P7g$1j-:+bBQC&^H+C0"O^<)-;2G*q#C6qD;_Ei@G0[(K(90hp%64UmRG:+bP`hf1>6aNRD"AP%5L*9TB.V,.!''DFbCNDgY
%nXFp,."'V)rQe0"P!KMro52f0_]hIAf'07<ZRJN/XZFH"iGkSZ*lg@bE"/(pMs_AS!CIQ\L-c6`a]K./K4PTt82hat5DVPRlorpb
%Dr$>6+m8qsW)dbFZ1OKm0\jf<5`NDWm5S0;-%tcij55"dHAu\S7eZm;H7s_0m\`<m"RX)A]L7ggTA;"a'CrqlJ@fTM^i[YUKU4o>
%P27sY<`Fi<.`E,1"%N16E.5s2=U/iCV:@n&0da,q-*V5'P=g-XN1PWA)mkA<jG.OST*u8Y54UmQF\!(Opd<<.(`#Cp]$OLd=r>Vj
%ZG;#_#[pqk7#MZn^0#/O")G+(%E5/nTX%($o!Puimda;i//T"CgfJ2_8J]oMpL]+6FmNn<cm.#EgVGse\1<aL!=H+WTI+0i:(Ia.
%7R:!,P;"Ji^.Pe5UIhG$HUr]\"iV[fWh:*;,Xl7B)",qY+sN6gPN-I%>UCsk5H-ro:aOak(mpVY`]1e,q.fLJEAd6MTG3m?.p9U+
%DSd4PH*b$(3.ld<PF*ViSEgKMC(EaTLq=L*rKM7Q;j]a"36Np9rCIH"l&agriJ2hRmS%lLPtFSJ57i67QU+#Sn"p4KHjD4G,#F$2
%;H/:M%,/!(llhK+IrU%#eZGa(6#X%rjaoAf&G0#RilEBQa"n?jjINB8q$`2\P%e@E?X9k[T#7hO9-2^d^$R&h+IPVo61HOm5nZ+j
%$tj`T&jq@$Wg\.OJ*:p6#%l!_F@g)X;aBam::8f!EU^r](j8*obIB0j5#$N_/NRApi&=M7&)GcGK+Zb]U$4$0pFnelG`p*DHb?%i
%?R&;Q_BiKR8CV:5;4]nPZi!Wu'8FJV>eru5hb4QR`h^I,Wc<aOh`8a-W+a^h5IP>(oW\8%[ZLp-?1hnFYSe'7a*n;DN?V7!D,1<`
%Cq^":?-:e[@tq+E,hJIo6+?bnWE+_$'G']mO@)G_a[=RfV)_jVijdFu@VI&kH>UlZ*4<F#,p@1e,`\Hebc`Z7a7&`5q0dtSI]^I_
%:%_F`r=D]rlR@Wi4?l$Ko;?j4)9&pHBVpY2P5ls4"NpWhBTi%j+J_\pA2\Rl:SQVn?1!fPQfZ_l6oV,OZ3cAr`AI][&?[_^Q**kG
%!g;j^TLiuLE-ARgGrBcf%o*i-rg&D!Af=XS>e?40d_=jdA>G55,ajaoP.pdljsP_?H]&1/DD:#bh'_Vn_MDINO=pC*R[@\7FpT/(
%!F90)6>7I(eg[@W'4UB:ILEnXAiL!PZ2k]*;0O;lrC;YS^Srlq=masJZtbF+0.>_8*:0sr#plW2B?<B^&@8[Oq(;K5/[m\Z#*O-s
%N?_-NaNaU_1;1eqjWPp"1@DZ,65jR'f94CIgb7n_PlT)<$S4<inL5NH0mrQM5"E#Igf4D]ZYKBYbQ/@>%BMbHR"uWV7hsXFeuE`m
%.iB]Kce=eJ[JatRr$aRD^Klo::/\,JMu2p$78%Cs-'ZT#L85cAP$5cmZ'2uc8Z3+B$7+Zh-';sD0e50ZbL_Scb2l8dMK&oH]'GeT
%./#!RS0#,fI9!e;;H;Nr+W`*PdTu0(5UU98koEE&)nANs.P\*9EV<d,<@tf#\n#`WUcc.T%e3bnUCo'UP)u;dPR)l.kQ:O80VsAM
%C!j<Hil@\]-K,s&F)jHX;+qXTGb'`Po:$0;e62-M!&o=U#\CA1h4R`J#,OtH"c4'hR)tHOP__*JGT'O@!kdNsLte86Ga-j]jmrVE
%QMDG_],"UsBN&Y=$LoEt:+]bb;.(nQAnPA(q@&^RQ;&rcI\A+c'HI2Dc_8eV>S0mQ<?OdlQbpBloQR<I%UTi?<OrB_]W#'[r?"s%
%m5m&`OK^uTJX;+FQf#VLAQ^3I*VO^Ko0M]:Wn=TW]&//K>%5Sj.LNL.:#cmp*h@?"0]8Ck5@Bgif,omsLJLAqjb0+g9!p4.?:6Mp
%1S.J=+o$sEq3'jp_ct!D^5**D2-)XVqb9@Y(>bA9H,P:`c(Ir?dBQ#j`Mt74S!@(h=e7api+3-NDWkY#_)9K_!R8SM4)fd[-&XRK
%#"b`.iNf,k/YSEB`=h!ZME;Hg$,u5MV@:u&a/5$X@OY"ZG>V#jOt6@5ji-&6+7]>!**jIi]k)KX^_)hm2"QVF%?a*]N`S4Ie=(Ps
%[*:/*<AethT1,3M4!(8&YO$,J&mr@G+Z@>$/6sHOnN9TZ/gEnH24EYQW@Llc1k3Gd:IWb[MkR4LLT)uKJ'U6ic6hNe=2eICJkJSM
%.Sgqk.\2>egr0GSK;A;qZ\4(rZ.5`VBs+qJ7cC5&!k5up%pR!g?G+FtVlZu]gec<9mt:=\QUDIn>55s"cN2c`MXj;]`q2ka!]K=2
%jL63"6JUVhT@t%jDHWOdF>k0r6cnGehV2.-8o<"@iG:cD2iGIWPKIq/YkKTN9Msaprma!;8N%f#T]rq$l*/Xie;f*R%H^UMYjYt[
%$-eH'1`D(>qcR">//F")bK6N'5lfsc)_O4@4';Wm+[L4@-H_,**9]^qn5l?6pE@^`^TB]dA:$)f[&Y+E$#Z!WGa**4XA#c$okr\c
%I;--59_H"TnNgrqfHhD'&Y+uuah>M/->A>-IRb+R:&:7Ab(&Zb\##fL$I0`[-DR6B%]EP(?<n7:,T7h0f_VR8eF4_JX>W#&:lJK%
%9+A-:n8`b147`$:Yl]3ba[+DJ@-=50=\CC)"4^=<&(t6qDWG+5+_F,>D>HGYM1;`49XPW<_^$fmUF$>_GFVn[FlUgkU=I-A/W!pr
%%B*9@KCOO;b;S3))'-As;G68-]iq40,q<jPd1V3]=L67S2iU"m7FWD999W0D]+sij.hSc_c97l/@&&3MSPP2T6`D'j+e\H0T\;hX
%/pV2HUk?!@C5-)em"-sc7"s-sVi*3l&I3@!ib`[>Ejuk-VkL+;S0KWEW)!msh^40_1fY3S;a#G]4Sp9IQb7a&a,,8GgS.L6e.YS[
%0'APUp!WF(hUX6712-T#VLp1O!GMEYqdJdf2JYECf$JM9!7a32TSP8O$q1!.f`M:SW/7C\M*+_NWbUI_;jO*?b(d-R"pH-m?/gr"
%%RuWfV2_eiO't&E71rI*IQ2T*1F.pmN1jtp/$Zm,/;nF[Z>YYKX-\482nR'hWZS;$/!,^[^f$;+QMfHZaZ@jgf8pYUM'F7''7"[e
%2!/M63d8_JI7@b(V$E7M+Z.`tbH\_;m=Sd'Im;jC1UHB=r_+87R\%<s+Gu5UoPakd;1,n3%]3j+%`i-:@:GN?Y,$J*N!mtWq5_RI
%i<`df5$h2-BV<PI5,"I]VFuZ*5YHANPtbU/Wa`^QOpfF4122:KP@,ur5-^bW7lKL+a>I'jEaD0M%]D+1_U`jr1!]#<VH-WQd)eM$
%b!X`_65Wgfrn4hMRSq`nl%jVsb/$h.bK/%&KYrHmXk,4Wlt"6P,7_]Fi[ao//0Uuk#,li<Yl^3_:?5l2iX_=&0uCB2]*!oG90\E&
%4p+mYZra;&V!u<!i4T1K7.6RtJ8jA5*huGbNY*hJ7(C`hk;5(`="G4'V7V(4)L\gVGFRMd3<XiTY3R!bm2uh2cKfVMO]U%GX54>,
%!LrL!=YPTF&>i=G16e#fM\A:V41,l]2l<#$.X-UWdWC<@CHUIfoc`:lehg2eiS2R!c]4_e/,UPc(ukrT/"du.JWK.jF&?c)&s0IG
%ZCALORbGK4lr%YVW3=4+G.35NW=!_eHn:@catn-7c&Z3>8Z+Q;KY4-s.A5H7bOQR/:'-VR=hR(MFaJ&<GqqeQOLl8Qe$'iM;.^s,
%BN87t4T2XuGEqIBfj1ZiZEN^ZKZ4Am@5gYN*TGATHH&6,/og*4YE<mg2e7@;``PP0PX@K0Rli[BhV8JDMPF>B)4W-EED"IY8enIR
%ia/=&W,%l`r4=ES_.s+g5>mL-`A\Y[;ppWRJG8d!fts\:RSJ6.,hR-_)X2id!g:PtrRlFT5b#Gi<\.lq:pSjZ)M:Ct7oJ:`c,5'_
%`WeIG`*ep!1K4Zre=FO#D@%[q[=!T5,aWq[CWG'W-K[p4CNY)1gia.^(G9g#kn9-fqcZs<B@=<?MjgJ;\PX\!UVt6u=i*8*X[$#f
%/pB+@bYthEI12)a*E'N+=e\i7Pa@l`C$6j(<#IRaKS\^!2uT;oQ1U2@$9><Ce`e=jTZdEn'G?k!@7%RDLrQ?5U+O-HlN6@:lguaX
%"&[u#Mi/6MPP#gLg[2a*[paEe4V5ZNN[VAqe_2T$Z4PCP>u4N`0\*\&\,:/"5&aKJoOl0j_\o1GkDf[*?:<=TbTE6p4GQh[aL9Oo
%4nk]Ts6qRoJJdHVRj-!"=i\TC,sZ51D!hVlAi<.QiM^_2lNT0m$Ro3-":gY4r-iafN#TYFQ1-R6%53P0RNbRFpp1OjcH1Xf'@iQW
%))kE6dl%bb^?hBqm+%+GB+$_ff/'I`=W_fQ,"*)nkWGe_PW5^5GpY=m<_5&>@m0^dl&6S#!+dC;SOA1jlg%:tN@BW`TO_b?gW2I!
%$hQ3#:cR;qTB>ua;>g3aL=,lo8s$<T<XL7ab[ifPKhnF5P0#dEf($sT<>QmXi321_DM>r:s%R/eS\eAfPnOj0XRA5lA^37j_H@<[
%bW<,RD*&=7%8sTF*"IRf9H=bk9Ntc8$<;_<Z?DBBrKg0>a<i\?<`W157jLr:-H[u0$`11k?;#2L'9=`9FVM-FkqGOH)+)kbO1oaU
%Vg(<M[j=eT17ZnE*stj\M@5Y#,A%Cs=<k:*3?u_rF?cmc+"[t\\KOC2&8,3+-T%MjBQ-^V;+Rbg8k-3*!RlJXS>edcCiPqc5)8E"
%;1?oL+/W3qT<r4\[cUdq((&3#F1?G2WN4hd==n2VWdPb7"nfm3Y]$*)4&&!Z^,4MXXBBacdn$Ysh6IW6U@EhA.*@XNS@UQ:&0W=M
%qeB<'FnS/K!AYjM,)":--<h68;1h5-;W_M[,CBQG40$;%K(U71,\CYa0VNG&Z)^hOW2$$q;*o@b2&ht4--g+b@U8DJB1+:?;p=7B
%fTHuTX!]cEZD[OVrjTLL<[<QB19=22MLXa%(K/,IpjH,7VdXN.9tTrJ0Zo%`g2$TA-MW48i'3:Sb`X)tW(U@8$hnR3Y,]*QP18t3
%q/(1+>nYLPS#m*RYNXM5]mm+TLaIPb6)WOG1?'R>hQ:&Sqb%S"a*oOo7Tko4dN42N/Pr<(>sID%_4GaSZIU*a9rjHkXqt=!kVRd)
%qR[<%lWmaVVPGhgQ[%HuEV`V>>F]KEWlgfs@](":.FJp7M5sLW7^6Blec0Kb'$#gE<Z7ac^6jn`ht9i&XY4h1#)/7u8Fe62S1nqZ
%HQF[,AAK();DV[!Va2+5`/!^U+d*#<qrZVhVE$fW&Z4;-Sn[66r:(RKPL*&A4j>?Ge/a^>3/5dX?RaFBK$YhG<8'*);Y:5-0j9m5
%&f5%>E?QR(RoldeJ&Qg*B!dDi3+F!D&KFrW3mG[<pNI@*6(O9]m[#qn<cb?cjp&!i+BBO:VrH&$W**]S]M2865t&p+-j@#0b(lrs
%0V'"NWI*f*Vo\d/`rB+WJ_='@>Wa6,L)Njt`K@[[8P'uZj;QW4<<POOHU+hj!V+i%\$s;q2+V!h6k.j7X@rM?GB&S!`6\Wf0E$?_
%jUJLRl6AloX+9aUI=r/BR+L$ggNs:d_l]Lu>#3Pu-Ru:+6-)jRe5]_Bc'YW6a8QsP\#)1tqhI@??6$uXl93Yoopc,$U[D$b_09Mn
%A6jXKIp_kOd9*2p/d)cs3mNso^VrrVnf-Zd6("^<\S*b)`qg^^/<+ieq<`\$M>[4UfD\P2(98*QmCLL/4LUAk0d#Sf.,r93"sVpG
%Lb;>?^fuW'm'9r51t4u`!n87SV>!WC!n+jt:]uqF`AK'!dGH@iW?j'7UIu!%3ejH(Nf?p"*%F;tB.$JS'TZNJXtEe62'3*.pf0L8
%1^@Hr;<rD(_Zo<&LthVg@(E,Ff=g\K&+65\)cJ&!s'o*J^O+ZVEAmjmcJ,C2q"N\+N'Vn7fm?cW[pNtU6^(V]j+qF]*:I(YLjXmH
%JD\3EOc;eJ2[Z<fbjj3;LdE?-cTcR!8ppo?G.aE1d')<GpDs87_E!Y@T6Kp6cKO/8(X&^lqHJg9#?RC5#E"VWIJJ7.MG)DE@c5\%
%h*We^a\ZP/&3t<eCekhck$d`tH'AEgdAFanq2Uaj.;^2_b\GM?fAVJtRXibt`!.*s+tZZS=*GdDnlCVN*#HA[XoX@dJe*d#bEW1*
%RYP-RKcaXX&u7$1id3lDdJur]8(1NscihT^=MMn5-5^^]jBq]eLXE5]H"/UoV'>1<\2<!+rN&O\do[A.$De1&,\cb)XIcM\O'APn
%MrGl/"!`D5<$bY1)SiUk(s?0=`QP[Ua7tq\GCZ#)Nf#dk<,PSO]=-p08=H-K8RSF>fLJrZl;$r(^%='RUO9'M:GiK+nZs564E9H0
%l\qd6@@GQc5F:/2)EFs5I0sb*+1J=pX`p`V`ZW=(eh9ggAE<^uorH+(Dt_067KZLBO^&;t#@;:>p`#MHcbn'\q1lDS0[e"-C_B@I
%0Y1rFk6@52Ja$%uE#/(J.6lM^q'3?4DcRa;^4TnT4uSL"6#;TEc"dZP_N5%K5RUM^!c:J6QLcdPl\s2d\>d]$q.C7.iC5[Ac2M.\
%p].q9DXQ"T04l[]%;,!EA8;__RZqR<=90";]VQ".,56?6+A9>8d_mlu+fMiI+Fb#oOER[C.)TaUFO))sSrU_fTo[bWc<d2I[9nt4
%YU2O:<B#'d8jKJmmjIS9WBK]_n_=)rZhX3)Vn\iqb3V.^gm!6ihi8TaeNmnNI=Y!k(InMR)i^G"9S.CR9VD&Y^,<9T8)iPH]e-#O
%-!&G>`artG6K_GgqD`hIU)KB:at1p`956X52Gn[RU"Z'X1Fi@[FkGWb+7\f4P.mQtDuZp%mH$D,/iG-k]ni_pebAH4>ES,%pE$t9
%=@<1tBq=A:4sBbsI?e^[?'5<PWNuUoqAFWpncI<=T0]Hi1^hm>=89CVrrC^lL\/nRGVA7OqcKX289#<Y@jXUSrcY$o.p'0I1%\@^
%%#2pTq_C@^cc*%8$EhmDh^iA6^i5DrKc*=oVSXTL?Z>dR:c1[Tk?Jeh,Q(6mir\1TQ#bRL"Cuehe0rO6eR>-19p:o)NDVEc&XTD@
%+W7*P`fpH=qhIOdh[&aD$D8q&ZV^U[Ghm%&rm]G7"q@+MOuae>"&\&.=1loI)du[&6t$QibOuK[(M0kj=XUBP<$gK"J7$5OXE*Wl
%EPFr?aW'@=8$6B5C6HbA3;LC89^kuL$;$9lHtjo`bYJ$:<._3p4#G_kV<O$@RQC2@,nY@oFbAc"i!ub&SRV*r4o9&5JW@4_oBE@8
%U/La.E#rse*XC5UCN)j#`jh-'6MKl/V0Lf&GN.fAZ-#/lC>[>OrS3=7pS,ZNNI+O[$NL66_X0?9gR_MQFrCa7XH9&hh>@9e1k#2c
%s8*)r>i7)k"gpfd*fF),<O[1<#to&ZWgo!-_B?3<jRCX.ikcKKa@n=OA.^o5NcIBP,#>md=t<%R*6u1'"Fj/n@e*\3HIFDt=#ka9
%B+$$ofVNF5<kD4IT,4t`nZK?>J+/aC;5(.tqO`)WI8A*po'..B'5M+M]&dWb,l*FnP+$G@LF>`s*'$'j;5@VOP(ZG#91`SC`PGR<
%9ld5?`p>bc_c\fR[?n=a:of6"\6[VP_7Qkm)GXZ=jqro-KI]^e0d69,R7]gmi?tsPn=m=W",\>^BNEe"MT]-DFi7<0Ua%$XqYQ%H
%T/qYb2KXns7]h6R\D<-grKYe*bQ%(4NY&C!-$>Pa#esGcG>Q9LCc8EmOInlQ7Nfub+rtJJe+PZm@DQmErZjhWFJ^UjJE"ZgnqVqY
%Wp$@c?A8/kPP:40LY^CemG^#<leSKuE#7]nGh:gp\`:B3I">NSP,/2aUrBaa:e<Caf=]]]T'.+SH5Y'Rm[q,$Zn>)*(OE%l7qc!O
%6N84c^.U4B0.oM`?:T2A]sumXp\g*+5-tZZq;cN.R_K&*]c.=(>k>A,_Q8k3M1`'1G[2PJVO*UPbbPuY9nMS<dH:u<ZXoP\G$,cA
%lYN?M3%o+Bi-e[VQ5qVec0.8N2/eV3Q-fk7L<>uglMnr;"aB&.+e9bR_g"tad4(-@6ZL>8a/^Ggf-#4"dU68X6O&=>3T7p\.+GlV
%h*<W2GN2tYJ)H?J[5D2<kic'(1;$IjoSNV-b`_9F5f`)+<$.K]ig>P4S>3+r7jqNq8cN5j:``qJJE#cRl4)Ofm;BT&DqOTb<E8tV
%^WCe!'A(S^dFl.-Yg`W0@o/s=GtqM0qY`g2V`p/R.&75=6iZrmOa'M?qKR!!3kE('CXt+U\,0G9s8VQZ^PiZOl&nc3$A->A86r4%
%"8D4aQET.0)#-Z7$PAl?A;^m!5I+0T`@SJ.VJ5u;I/qN81Q8t33!o[hm\MIpng.Z.\IL#hiM6ODn5Mlo#iB:_/bPJro/18/&=rAe
%7Vh9rJ=%Bim7A(eaW$8_Tq4kSjOg#RnjV1FFI*Qd>u`8-(n,N8S]IHCS'<o9<U+`AQLBt>8RXSbUK2sVqp'++<J?jfk(FW$Aq)sV
%2g"3\S1EcX/VlkeCi,II5Ora@%C(*tjTp\*=Oq8X#Vj[<Fl%phP)*3[!smI2Z!N.RD,*\pKcao`Y-q!X8>pZ`f"+\Dp#1=3hg@Nb
%jaU@2"Pnj<)R-1ZpXHnJ-2*GhZ914SD-q[],BW2,Af4`Qkq:3DZ;phPLP6!gd%W[eOG/>APiko\NUV6[Sm>"EJ0l^;kbr>8,EF\m
%`@gs9?\8,3Z*(7?W'VP%b4;hr8-6-*>KT!j;M27M)amfbRE[Zq5<hH96it;]<d:8HDsNMS*FE:]n6cQjXWOhJ01#K*j6OTs[HnLW
%L?s35k'fI*0_F>[["aPc&)hMfKlW;Md2q,l0ulP&4)+BPdRW5%5?ZVtSKh>i9_fWbb*!/de>UHXN.O/boq*C?S'@fE[?4;G#/+GO
%PW/TPO"[pPc;K'[#5SnF(DmISNL"5gL->ajpM4=IQ]"43*a"XMGK<VP`'9-L?Ri>d!a=YZ%&[c@JC7dj[035[?8h/MR_7g@m/`V-
%O>d$;Y,c)t\9DS\Q.O3J@_tbt:p13Egu,hiKA`HRpjgdsc6U%okfA:k>>_#dlk0%.<(e?KU[0l*WUTWJ3O=Hi4m"\HkP_L&c%/j:
%&r??94Q"2o8AoEAZ4tO,#<arT![UKm/l0k5:g?1<4Hc%cWOqrjeS@&+9a4!q61#bs0ZRAN$Bqp!h5Ig/Mqbpif@q,=,^$[Gh`j`$
%$+XL2_KG\6@nQtI!qsXn5fM-Z7So5`LL`si)CEHPTf^7'h1\Kofo9=,V1^/Sd16=I]gf+,U3K2D)]2V@3[k&Wl*q[#a1o2)r`-&`
%Wh8_9"L,D^;Z-M^XWh`J$[(q#FPIJi0<s==]HM24"3Pt`WI=F/G`>l57/%gN<I64.6$pb3HdRMg%Gc<$nZYBJ[?oS/=Yfc#Xp7)0
%VO_NO#=.TBoE)8R!J8lJ1j)4T<Ho[bD(%#n+'u$-\\fHmKXmB.%i_U1FVM<Y=RS_mJ\*o1`k26<4lT4X#R!V6$TAXl#9:n.A_^49
%S+nXm0%DJW(9ZMp^Rdr?&%k$e"dm%pSm\,^\u&\&(F2[Wb?`&Y$F#HZd2,,H_=s53%gH(NPOtLg,,iJteOdg]GaU>FQ1>/!pTbgO
%aVOC-&%CscX01nAr)4MhYQ7<+_3[mq:.+ci*PXeAY8d59,N!k/XMS=]>OIdjnrF8.gX^<a)]JkCHs$?tL2Gcl9NS3MQjE'i:?p"7
%qI=AhT%$XBmSZDVdOdc2Ja;GF1Y#33`]8J#\C]!8D*!Y\*>\VrB\[MH\G*-#of7HR[$TVDq`jSi5(EC/^\u41J,,#;rnCZJrUiDS
%rZD.9s8%NNo`+j,5Q7"!pOE,?s89)#q;`=koV_S9ocO4ij$3J/hgG7O?iK'afAHSPhj(tR='tq9X1A5trr)f)?[95$*:l`Ts&1S4
%`F@mIj,!f[bIlmn["Y2ua=./)VZmF_#^JDQ)WRKG0_2NB-;.#LYLF\`8k;0"+]A8o*kZA,\"QXc7_O)Z3:Fc^c@0,<RD(@RDokV_
%KKi2.IQ@f>AnGAlY!TSsJ<GQnV&RZK+VMh^:tgSt)2?(F22(B4E!PP&"ofV@L+:gV0.\6>dXYNeG%nQ!c[Gc;A*Fb&@KJ2gR8_RG
%3='(r!bpVBrK`m.6B(dh*_?AP^M=3[lb'IV]P$#k:oQbY[+d[QrPP=[`Bn8X$FMq)>N_jM5.p4IpDlpg!@2sVNLX:FLEWh<YD_j*
%%)mAaC@Z15T,g?+3<dA^/>?E:[tNbVG='^4eLJEh6+n3r-pKN45*WIK=Qr;gF^Eei_n43CpF@N(62D(K$?!<:H4OqU[[J1NpTBe*
%OH)M"'N'q`KmG0+27cHUUQM*rHZto*!eDH4]K]hKE;<,0E^q2Vat/,_l!p(L)@\"jHH;UX?2T/b`/rhjah8=R#&)#*66n^KIPL>3
%JCJ.dmB9l*qr8b^>EDGl??*_2j:td;`t,&0f>.YT+uncSXtE"?p?+*FnG,:kU;"f,5fW6/hRH%HSq)>GIN3d+.#@5SrGeKrn/C+/
%r:,FI^U6-4OhCLEH$"<Sa6kc8J/-GOJV(VMllEd+n/;`^r7ND+@?'?5i'K7FNJh#<^3DL(EI`j?WIFO!qq($ai5\V2G[>YlF!\qD
%WQA7WU/QT9O,-+GRn<4bH3pe&=Md:Nb'pC,)U@IoZ5i+/jV[#mU@5:\Nt]2hcq5kJ27cHU'5$VjpBMS\:i"fLO7SOaPoG,k-j"R)
%V(:s1='57ocSf3jRS!0[0jBl3<a(Y.H)$E67;d^Gm=nCEGR<g,J,F+;lBh_B\rrj_eu4`MMp0O<7+99kE;:)=G`B]Ur`iV3I-^6B
%Qn'a[a?b5t/<P#f*SNAn2#Pd9g`Yb]h!Pk]8O5i7I_76)6PMt-+D\A$DVc2<:n,.&.%SImB@uVLe86`/cb%5ThW"&p76O6\`g!rD
%n4mN\:>IpNRgXGYHqh5i<7)3u7C^E'?5EE(]?HbcHL&32Y`2FQA8aqamLFPLT6kIprcq9p>gZlH$%[YK.Jn%aUNXm>6,uAaoS%0t
%H58[r,Dbj=77/1QmFL</Yoe%KGnZZR3.#S4,m2bDN,56]7JnT$?eFakp:BWQm!n;JrT8<p\5?o:?Nfgm)G_1g#,=V1?MRXn0OPH4
%KXe_,hn2T[!lTI\\bd]O;<6bu7F%F*XSH(p.=TSDW=i1nQ[[%>.L.57%N`Qlc;S"$DulBkU;KOZjp8e"*Xt\hQhsIH7K2ls&<!92
%XH9O?Z,ae05Ij253?hbb#9L(kr9#p]?)!g[9>pPJ1%S=refAN/Rg)/>NlCWqk(eo:?iH.H'>7k4C4M+kh2iXc,BjS1DT_sPNL]j`
%873S$(BJ<.&X)'2&Wne04rbJ,GaIki&l!_21)4_G1'*Od!HG7[bM/MjOln?GrN;>0/n\D``mo3IC[g`mQpARlOj#Hjd@I-V^<*Gb
%`qWsp&O\5.#Rk&MLOZ9"<[U/Uk?XbY9\\K]2c\0,*CrbBDD?bGE_1`!pO2tR"8S:u*qfEBm$p:^/:Z:7/'C7,QQc/Bogs^hh)FtG
%U'TVQ0C2%4YL-Xm#ACpB1Lh2OfH#2kb4D%RSUe_7HN>e9O6oV@Jl!*IY3K_Q,u]DhNrqi?\Ye*00&\Z+9)-d4gfC'Q,S)JF*ZI28
%l/'4%reD+mUFesero6MsGNb6sHjk/N4dGV]jT*^68b-1B^`\hIDeQZ<@mo''7[N1Bf$\GAVPZ#O;F0/M'UGOrnt1&O@'kjG:on`5
%hRHj[GMuh/O2jihY=RW<\d_&s2Dmmj,J\qZ0L9Q/@]MCJjYeh/LWI`!;7l-o8-bo7l2^eA]f%^+Jetni=RS_mJ\*o1`k26LPMRR6
%Di%f'bMKfQ'Hg^cnU@ZWb$.@X#E!/]6QS@C&mh?,KF\V4k4rui#PPF8<f-e.BP;Z>iALJJrR$F-FSmu8Bd&XRD?50U-lT,e1NidP
%_=j"EP?3[SS,V1Z"ja>:=D(ifrqT465Q;j/Ib/C/*-jo)MRh86<I5_)g6(1`R"L?!gAsY9>B><*kbJOt8jgr<`"NO/)T5F@5.h1d
%lkUPk9A<"=[>,U)g,q$*GN)nHUGrdDRZdYEk>lV\3Jn;HL)`h08rG(;!K+""'JD]4>;$Jcht)!!8te1Xc-gP/LX"fon)><JlJ8Bt
%d#6Z7Gh:jA+jPQn$(mTJN7n7G,5(Y'Y](niO.q[K9l`E^c4XHY]7_8UVf6@9cEfT6dgNa^3rod"%jekX5I*?W0*&Vua""'F^dpPi
%VkT4cXV/)=EL-)4h'IG^GHU>GOCFSTG@&oMI!.)We1T];)G9dgAGU65Osa(YBs?+#":oZ&I8:<sf9?D.HjM_DiAO$uGErsnJ=9.q
%P_O-]#iHT#2<[amBI[(HITS0&l7QsA]@m6go6+j)M>+]C,!Gi=2TFr=()E30;*\3bC4!@/PlhAQg0g%"YH]p[L<%[TW`A7WejQPI
%p:5[/]M"2A[u9!;W-3gM]NptMia$JP$A"5=F3J`c!9^\&%Q<GrAK2UVUrf&kX_Vrc$"uN*A9W-Y5s$g6@(.YtVd_kY@N[PpOSAWH
%PSCfMPWXDO1%-YL<WP.Zkk<J?*W_p+#l_lfE^-E_#gsl+G^ilpp67kZb*#9thS(mrB):qRTU<]_r2)=eqCt.$P#GHf;"K$QR0ebe
%<ppVa>Y^`$.M'.9_fHATMra;T]I`fp6oblF/k27Z:YAA:A@u]tH:Re(?6fGbL=eIm3\u/K:c7>SAoZU`ig0oo=s03nYSMA8lAP87
%C5@>!'2qb#,RQk@*e<!Yl$0tb(i%!E;D#*.P+^[5QLWK/d^EGJL@'pB@t7-Z7=3$nLf%ue0R8kmQWWZ:.[jG,FF+k:GCpl2&H:2m
%*LM;kACP`+<75tcmIuccdX.UqD<)ho1g)/u4V\k&>+&Imm#):khH.;CF9W*D\"fFha:)b+&gC<u'<EZMFY'De<pLCV:K">BKh=oT
%?pR^S?j_(+@mf5BhB`OhO(=ZlXspDgVs-CmHE.E8*LEJ11QTpF8,9&B\?7!Y;h(K2s#")'B/h%;2(EqFHJP>b5sLK[7A\r@q'r&\
%n-3\IFI)\V-:e0lF%_:68`2o.,AEaQ0dWIg6bkRp`"#JO3h5#uYDtbu^k>9HB>5tg@sX;LARYN+hH)ee/gs%'k+ZkWffUg0R?5c-
%Cg0Y?eh00%q(_j3,*-:,e<u[S$U-*]B72OT@=pM,VHbbZ8aldlI%/0W1-b,m\e)E8>N/[^Q^WS/e^sHu@efge5cfgp7,Y!'/9+#5
%A4##2HmZ*[!WlB6fS@'7\0Tt-7`i2)(mkotbUo=Z<fIAOFi?Z+(r+260kE>[gOQ@&)*LE>b_?r`7)0j;AC&gcIKYFVEa`oY>#]UB
%FJMThP(DWP9kKhkP@Z#$oDD'q40-?JH61R\.e/S2<(^.(mfmQrD1e@2[\Ol:TejD&HeDki!bBe9FQ5^[-p`_5!s-B$]u(;U,L.!)
%#\&ZmY3<lRD@],*QU>"U10X_,P]9o$5&qm#JMqGBj'G3:g3(33I<T0m)S.o#-u$bMcEc`%@i',(k_JZI%-(0HC+5cbFUmZ^E!.o0
%KnQ89(D<S!2i/ZF-=`M^qDckL^(l^8K\,E?iQ&_#!O"#\aO)$lSKo&4mVF^:4I#=RrQssT]+WTd>R29OMKEKu)/eZu7%o6jiXeb-
%NU@ECZo_++jmkPm>g]J;5cdUlJ69[(FI2J?7h_;-`aGStVD31[niY6K,3DR;9qbhX$$Bsi`dK_O_>-^@fP5E8ERPfYeuMe=j1aAE
%*lm`2=+',)Zjjuh2sTeb`Ha,.H[>nAofomhonM0KNWL+3<r_IELjDD"9bHbPB4>jd'"Wd3'mZ"OgjPPc^ZuN>I[:hD?#<!;IChK-
%`H,sI%WO\W"[1le>!8Ji+@qGS6Q[]0jK68Y/E&It9DJ#Y"%eDkREs\<_KA"aB;;`j]7ef"LNWp-1[4Om2]i;SqG!\!PuU^I+",c^
%rL@]LXG#3h0&]10F'I0r)UI5:oVjp2!VkI<Qf.lB@tZk+=N[q",?q.u+XN9[`VS8Odu^1Y6;:E_NFK:#K8J)fEOYY#/:Xp2L#->_
%o\o]HiI-HihN$SR'^OSR2fKSrh0@Q/.*oe<Db[3A+-#,gH5$N^>I=aFoc:DD("(R>lW,!1H1T]=Klf0"XQfL'KQ_-$E=ppt7T:>:
%M[S?clL.Lld_UeN-;<g2n0Fr2!i[XPZ_<En9o)uLkUtgO\kDhg6DI11qkr:)7eD#pbsl3T]muI-L\?GY!IW]1F3d/sTF!EKNtX,E
%4=?Ha)Vl]eBQk;ZpSfsecE?)fCm#$tiTo*oJ,_7/*9/L-%S]d/AMd[JJNA[3m>3!O&u!M\a:KNrA3(Y,DO5Og48W-^6>s._-3$m<
%@>.Kl5)S)kW-3gM]NptMia$Jt,S,B!P,%B5TN>SnCdU4h5$N-jMbn(d"=n_W=B_#,hm$@=hP=>'=<2l>RF@2U2WWD+d$qL;o1lsa
%mEZoqiHj7HFqKRUeg_T.Dcpm,6Q[Z_c8d7nRC<f8UUu0iGfi-",5fh/*5qGSG;^?X*_L[:IV<qk?19/M/WXW)2]-j_UQ6)%eVW.?
%c'ajd)Vl]eBQoOq7o#r6E(-D1PE7d_5<&Kt\kDgc9)prBlb^/udh:[IW.mhu'J!im:V#To<JeKj-;/1dLLeR6`FVH'(<Gc@kY27J
%'(>30,0Q)O1@a?*'^?.+2fKSrh0@Q/8C3.,(?BH(d1ANL!uYKM-`i28kR$XmM!2q6F"ON:7:WE!+WUr9)B"![V_P"gV+#'!)c:J0
%/hZeUWOG*G8FMHS%<1uZ<P=^`'Cj\s"s4(p8cH.gr;%/:5Q1Z'QEFB:O+&45(%dN]*tH:Kqr]WK&+.KcZZ&sm!S!Nh[s!Kh,*ifI
%5b3f1j-S^'qBPlgE;h?P]Zl>QIc-eU=`OuKpa$ckrZE;X@4U<f&F3HLQbkj##"m$uU)0<N$p[.3PPMWm`]Qcab:[G_)[BHS]/i<t
%_'K!]n$,??V)T+REmS#I@sai[FZB'h+*$7R%Z/:,dG"jcHSR#UJ_B4Cm$7cn%)aKP74jJj;'Q\ENCeGeks+KZ`0*$_le@f8.[6\[
%J*u7@+HI,pPqh271VP)Sa#AkE_)p>05#1__2lXi#_J=7[nDip+M*(rO5'No>TT6??)\!5e-+l]3Zoc/<Afr>7dc@]X@hp_c%"'%&
%p-^t3qq($ai'TSIr@VfYaPC[KNilVhE+0Q8Y@"(%qi;mnm[@u]gc"sFft,Y9)F+G&dge^;XDoH+dabch$jFHnG=gC!+3RKU6#X%X
%De$L%5Fh"K)+rX[W&0+[2D8oki*Aht:D3YaUS1D?)l.?^L2p2ZGOlm/LkI)YXMQbJ(6uf=.+YBES('I$q=M:a<dcH76XK!]]kq)C
%\,T`(Iu9#ifY[1pq3JNlDp'3F%&DHtn.EKni-VJGqWBNJnG*;Oj1LJO-^D"gn>g'Orn%qjA#oS"Qf,o-"US:MZ+?#8g)dcbL<V'l
%j+&aMcfm>\o&VCG55i8<+P9am[n^kGJO_@?;ejmY`@nLpnHZb+`H*/)"A(@NIZp&5Q^3@,nEF=KR#N4JIZYW9!M&.(kTqC`0t^h:
%I>5C+pI.OC?Y'[3mKIGQeE<J`b=_>k^['eIhWbI&U3Bt(HlLudNsa1XP.,ECfPT<o=P?\&#MY0I=Eds`dCrsF*C&!Yp7\F8lj<in
%c*F'QbKg[t*.iIlC5V=`/U7>Lc;tti5#1T2V_g/<q"uH%T7>5bqI)sp]IVYJ7)uHH0XQ.UrY#.UY&o*XNOOkAC-9noTFA2X5#)fq
%Y:R]00&\\!9DI0=J4a#,\NbtCrIGBH)S0dPn/;`^HrL*!k"A'K21:Yl,>!A*"gfY5DWq1Q8iqsEgYXFZ'hc0C-JOkhX[3rFJ?_,p
%%u19$&#BG?fBT"dDAVCtGh:IjqEYK.Vtj5m9O&tWrnAb,\#i_YJp)3==LYhUO0pOo+Wda/TV!esPl$NQL569"Ca`=$;/_j;k,gjo
%peuudnZ\];&43r"1sLf9nP2%>370@(!?Pk[YL-Xm#K1e&#[rt@;h#?_QZUO#T7FqImh/s%+5<Ds/n30TVH=1]+2Sh8)gr^i7'r-*
%Ct>tHf4ZSk6i/\0l7YAE8&;+[gui=4+PcMaf;KMT0bPJN["U5GHYAK8J8M&`6$mbfShW\?cR77)3M=HP53A26>eATu.UQYu$GFPH
%d$P?YK9+toQm8k6#JG+`PkX*A<tC)%*;<1RdfuOR&`gUIgWdA0$N\@FBK%B7D/#oUZlq0Y@]^"%0ViNWl48e@'F][!A60[7D;6`o
%FQ'4"5D:d]qKT^VP6=B]hU<^[rP_#*#!NMNj8G]?*"1Z=7X"kt?<!.Go]c%rR:_$=O5=\01jg,/')^D-9JGg,b17,j[n1N+[Fcb>
%NhVRJ7ALE=#9-<\NU@EC[QbX)&cK7)ME^]gkr@:9b?q$VKT?`,W*>SmhVsE@J]:@0;FaCFhOajFXCp`H&dU"^8?R4WpTZ\?*52Sn
%W)f$>BoB^^hnK9Xh==FsL17P&eb8Ci]GJo-%Dk7*0k6P$)iC&)#q-q>20bV.A!R4SD2N!rYio3E]bR_rZq1iM$@++Mr(`ssLXIBR
%X50_`D\qTMGjarp+jLZTloo]&`ZX2Cd=a@G$;/MjC?X\CDlpGWFi`8_]LG6p+2P9-%3a/5T)HKZ74Z^_EV*qTQgbpli;VMd20,rX
%'?"]*/Jpe4k(r6]6uP`p)N*qq?DG,c&+'nanm8F]ouGFc5?23^S1XaUFI2JoI!G=lOX*,Zp8O(@!X]<b9ZGDuj5bB5ImWDJa4qV&
%E)SH@Tt#El)^LLNoc!HL]/92$rpWt<gN=:pcr"^L[=MZ>m`)m<*X$`tqkk6iSU@1F/)F.[QMZn$b=dAG<^jB;mCF'W6OgS_@]L3k
%&8Q-Ak9#_pSr;@MY1M(W5VI#!j'@.a%`s`TL!2rB,eQ7,RHgdNXqn<6L-A?h8LEW@=i+rrQgb$=,Nl[ug]0ioG[p="*=$)dp\1l=
%O6qo1S&i&RSXLi>]A%:iLd"S@puCpI_J=7[n?Mp`GACf=mZ4)TJ&XgfPl0&%f4ZSkKB2l7G@bk@VRXrf=J+<YAjDdXhBs`3[N\&2
%(e1hWhg7I(K:%AP/;\\O=.qS+U\B8)j+hlK29JeOL17h8o`jjD]Gp>9)s)D@/+RpY*=X:@D'bjF?C`hS*^Y[M"59l7BQ)UI/'a<U
%KR+AZPBnNubjiSn[HHO-[-N^M2K0Jqh0@Q/T0ob+N2AS;B"BhHlQ5cSR#X<>%%65M/VnoR$M/1#6=)4:94BP0=L3&A@Um$hqqG3)
%8+tp`@sP.1X5k5u-;@XeP%*A0!,p&#Vua1gIgPPh5I;s85=QYh>uC+Tat9NLVASs/?X_pR&!G`0ZIMbs_2rh0U';Nl]U+cf*G7TA
%edd@OP:8.)9Y\1Me54MGos_Ygq@n4=rla>nrA2ep.sXGX^I)iMPXb%lXPrXEG<F*[p@d^:AoYP(\*+D&gZN/m'QlZM>6;l]SQue9
%o@B]&MWf8Z[sn<M4A00UNl28>%.2K;G12N?r=i-iXbOlo\=UD\(.5OgAqH`Gl!Ruaj$`D=?3<<D&mh?FKTF2]H*>SqVl0O0D.k*m
%hU.sG`g6'+?DAUs+1rG'r1&-.dcgQTXeG4J7NWub7T&XS64'jC?,FYUVg7@Kf^e1P2^=3]M^^fur&)&Ypn2Ctpg[VCB7@u*4RH)3
%N'1`#Y*8S_<J7`<&0_l^L5C_p>E!ZO]8P,l.'[*4hIMsZ@R]],(.l"MMq_(0GGF$1?(?-!?%:m?BD<u>5E_)I@N\rH!SN][3@IX9
%[jn*\Ri@9L40)Jc+E,\ogAB@FeB)Tp'qnoI7(%0L2"/>ocMe6uH/NbN6ONDkZ?dNt90tf9r@g7)bl]30&mh?FKHL5m&*ZpQRa9g3
%*XXuP-\l*s]A^ATfBA!5Vb,BVL:*nNPWH61;M0un:)(0Iju'\BG`D,(5.!D-r_r-(G8,Jj:AJ0GWgSVT?DG,cO*Q!Wm6qi2&:pfd
%b/fdO;.c!^l+*(5'1.@/<N6.YG[@l7M8^WC(NSSjH5/Jgn%oUI4ttlj3>-+Mcs+!&nij_Pm$%$LfK!7/Zb#%iUQR(LVX#;kIR(/8
%&Zpjf&W>t<+">dAO:F^YX$?PZPBlQT,.-[lW&JZ3kM:C7hk*3/VpQeY4-D!J3>i<,B'b4;BAheMmnYd-7elm-\3L#`n,I>1]iKXJ
%8O?+lp='`\A#'"oQf*Ym"C?8<j;Q=L0uS-F'uq@-]3A?Th,6N8pa*GbrkNCoIc),?r@ma-8G2<miU`Dorqp7IAAS@<QGU5"_OT2H
%bU=).MDkV=lSNa0#RL!699Q(N,4atM8jcHMicU"p'mZ!T0S*-s=bBN4;3W<17L-V8?BdDJ\W9VfhLE1LINCZQZX.^*5]hb1lfLHU
%Ern=)Q_/P#X,j#9MWb$SKP*MuerUA#'GZ^8@fWoFTdXdUF!#l=)1>`;1J*<pS7bur2Wnf5]aT=ZBT[s,O0aMkkUti7b6?67,i[/<
%</HP5e=DT=L@5a]UEA3\EN>DT^p%L@k]CK3*R'=Mki5&CB1NG`=MeiqQgg^)6%6+%T"Cc];g/kFKV-us'&;AoN8TGEY03QqbG&-h
%Op!dFOE!erj%M>C@i?_:98Z@TZUM7BMk*rg4PoXq=K*E]dZQ&AQ2G:dG7o=H(Ze2hdQqg*0$;oJgs%7Z_]NeG>P90JAjJ26TkSY<
%mYqI3re,HQ,22O^I2@Wc5)<bh.TK"E+nqCrITXX*Z*9&N8gC@<gSK0;hY$PS&E7Z3dsP8R@@it%PJ%=j"9fkpGhWY?1ipsKmpDhr
%^^&r+nX+-d0Da"i.iSk5%UZt?5I)Y0S58TWTb]6)0/VYe>6=X\d<kPiOH`a<G`D,(5.!EG:0RLk0/Qq]Vs`X'c)!UYTnM%]0&_F<
%%4tp'E1n<'UU9f,6pZKBfTUB7L35bjKtaS$Y9.1,#%$$(dZ@610.oVo$L-;m%0GfZ`!c7PAh5Q"U#(<G"*\b9Ms&AT`[(KP4pH&:
%OVhTP%<>eF`e"Ip-CrL)M29GXAL+@a0(CK%XU83qJgK</+1>t1UUUTsH6]F!gr3DLSicgJ#k?Ys^(@<(a]k14$?L/j<&s%Td)V![
%P>5JhLD!pg]7_7Z/oHU;?C0ug48#0Rbg4t5NJ<1C&mh=Tg79C<QLASY]NbNX_CB0_9EQ@a=HT1@"FU"D2<k?mBOA&uk^VlVU//Hg
%+W<a,PjfUI-%(XsLY])5U.X?.m8AN,hF9<X1&L<Vd7">0EY6k\TNSRo`o>pQG431JY<m054_[m7+5YGLde@l#\"Qpm7_OAb3:Fl!
%r^LTCrgG-(ViJc3,m>!Ebud8@_"%Wq<^h*Up1P6I&&pYk<[mYfXf6qj(%I'-Q@9MaTj;S)[=PqLn&E!=rY-"D6J+_Oc_QF0G4PVV
%/\#nr99)222";mTj"0+7\A/(6[eiD$3[WWB3eMg5E1f6RZVbXb/DqiLTq-b'^fmca<b,PKS<%*6%=Oa[QCNqqUO\]hrr+/>E_5c1
%VnOR*p'$ebWLp;AKnZ]pL/D+Cs$IKl</^5Xg7;GX>lhpeg%/,#L)QbmUC7A!!ho?7QH!#5?Xg-h]ZD9i4uP,L?Z:e$FVbdT?"HF;
%D7_Lj_7Qik/h-\$8V3)g5ht+j"r*0E'jMQ;q^3S7(]l\)H7LK&h9un::5*d0Qo$>mE$;L3MPWaP<uOqQgb(2Ni2NbAL%qOC"[^i"
%_Y#D@^QBg1R"CA$6pdL06)*H+=4mNI"'cj!#sWV*"//*?5^2j1K<`]#q+L3EHZH;I`6\JFhU9V%qb<N2R'r#<,'Fo`.4OC$^BF;_
%+5)]q2s#ANLLNb<m^#dH"2i/4_>X$3H(?3b#p!_1MtNn^-o2'>KZ_a]l)dAS$#c-JCN9jPOP6f`mW&XQ#/mQ@jA"I.Ef%QRs'Kj1
%f-7[57Ig+;^;IT7,g],!bQ!ejmEu+=L6T.8@@.JXKlf5s:0[;VUSE14HfQog#of'jK^c>1k[$h]A6\e#>(MnnU&#0EX0PX/qng$U
%Rn7J+L26IM&:"[oVQ9pZKm!qa'%O-1Akch=[-H1EQ0Mn3Tc03_V8b-*@cq2f<sfCXh_S/oZ:Hm#mbMAHb!YVJ(Pe@OkZOGOj`"<[
%%CjPhTS7mfpk-hnr@k\=;YjE8(ANNp`p-(M\;JNFXh5*D3gCDKMKEi*$Hpp5rc9]:"FlLIZKc'$oKFj(fH6i(\LB)YFo?%H;g=;W
%U6UBW9@=2n6`G/WkpRG3Vc$rkR_lZ8i/e=@K1)"USb^aW1[N?VASMSPCX.ACT@2B-Ym4t^:fr,@IO'eE0$0gVTS>Ta-)s$eJt?[0
%LYT*R2FV'g2V"j!pT)6VeQgIT`c4]rB8GkbWWnnsG2pHs@e31/pCH+=BPU.RekBTJ8d[-i1E;jM#ogi?*j`b!3,ScS&uf&'g))R3
%H!.APS#29WAG$j8p6f*-ikjFl@U;P1FZe/pgJl#Q7ddTpCkI(T3j[86Up]8cQqE'DC'rjJhMC-nHD3FsK9382G-CDU-sLQrbB.$>
%S0!cDj2S]3P;+9`Zl'-E"iS6.\r3#+^J%@0?#L99j(?RB@pe`\>(t*kX-Y:6I[pcc<Mr.A_P#7oZO$ShT?&fWG]iGCh@0Vp;j<WP
%BZ@%g^.!Q18VOF,Md30S^"f&V9NY`bg<_Cb/(=u)V$=8C=Y/<Wi@$A#l"V6Al7%Dm>":=MUTmn.X0D#/Ri0@,2)JuV8.ho]'O"SH
%KVH-s'6d4djneJ.;lCS.=rF>_=Y.1(iTh"/O5o&7k@4qKW9:"spK"Dl8iJer'Tlk9dNaHWC'lJmrt)!hh;"Pn:T,f"1!55`JOR)O
%1T_(ND7nV,a`%u)A:)GWU3%l!,NhisV8=uFKm!?nA4ObcT.9:c+ZakL9\mq`AP*:[/^=sSkVZF4X/U:s?6lpuVD4#_pJ6`uA5l4K
%RmmQ"XcU;ZjYSP&<NBX`mEiJM/D#TQkt<m'<isbcT?1Xtk2$mB^n':BG4.GZ'9*'im]%Qb</JgG8#*Q5.j((pa_uUT'M>_]Wm6mk
%E(FBZQD/,K\6>bET?333V75>=U">e":QPDtgf<pt\rD,!pmg?;_b`:Ld+Z=TrD2WkUk`Ipr`ADC1HWu<2JSb^6#sB16_erBBrZrs
%_X;k&(n*ZQBkB4I<3*iG*GHfA/tLh=DRb#mo(mJ-j_fR^]0G^YT/WshSo*MohVe:oS!Um^:Nsk6c*Nn/li$hO^OEdZmnifTjsLlA
%)1U%UJSsK$`YV>oc^kF?ood!K;$91G4pIZ'2uO;Ojr!*T22[GDfF);3,P(MA63s\P+`/@Z`tkt4aGJgZQ6X>-CGZoBEnQFFIqRFk
%bc:0FXGKeD9q%7p!gc9T40bfD)_;87CD]JAD(MMW%PRe8Y3^3ug)?+aLC1JY9ff<miO6f]=_CpkLJ)9prdGC%e%_6iW"(r)oV:Xt
%>eGO?]mkJ.0^V%G:>9Uc=240@%tC*mG97?nVb_1PG5iO?]AjL`q=#h<g>&80&*Ni=@Is!OrP'KM;?"D^ea%EtSj)rOcubB9~>
%AI9_PrivateDataEnd
